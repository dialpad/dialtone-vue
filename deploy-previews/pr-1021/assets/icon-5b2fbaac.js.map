{"version":3,"file":"icon-5b2fbaac.js","sources":["../../components/icon/icon.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"currentIcon\"\n    v-if=\"currentIcon\"\n    data-qa=\"dt-icon\"\n    :aria-hidden=\"ariaLabel ? 'false' : 'true'\"\n    :aria-label=\"ariaLabel\"\n    :class=\"iconSize\"\n  />\n</template>\n\n<script>\nimport { ICON_SIZE_MODIFIERS, DIALTONE_ICONS } from './icon_constants';\nimport { kebabCaseToPascalCase } from '@/common/utils';\n\n/**\n * The Icon component provides a set of glyphs and sizes to provide context your application.\n * @see https://dialpad.design/components/icon.html\n */\nexport default {\n  name: 'DtIcon',\n\n  props: {\n    /**\n     * The size of the icon.\n     * @values 100, 200, 300, 400, 500, 600, 700, 800\n     */\n    size: {\n      type: String,\n      default: '500',\n      validator: (s) => Object.keys(ICON_SIZE_MODIFIERS).includes(s),\n    },\n\n    /**\n     * The icon name in kebab-case\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * The label of the icon as read out by a screenreader. Leave this unset if your icon is purely presentational\n     */\n    ariaLabel: {\n      type: String,\n      default: undefined,\n    },\n  },\n\n  computed: {\n    iconSize () {\n      return ICON_SIZE_MODIFIERS[this.size];\n    },\n\n    iconName () {\n      return kebabCaseToPascalCase(this.name);\n    },\n\n    currentIcon () {\n      return DIALTONE_ICONS[this.iconName];\n    },\n  },\n};\n</script>\n"],"names":["_sfc_main","s","ICON_SIZE_MODIFIERS","kebabCaseToPascalCase","DIALTONE_ICONS"],"mappings":"oKAmBA,MAAAA,EAAA,CACA,KAAA,SAEA,MAAA,CAKA,KAAA,CACA,KAAA,OACA,QAAA,MACA,UAAAC,GAAA,OAAA,KAAAC,CAAA,EAAA,SAAAD,CAAA,CACA,EAKA,KAAA,CACA,KAAA,OACA,SAAA,EACA,EAKA,UAAA,CACA,KAAA,OACA,QAAA,MACA,CACA,EAEA,SAAA,CACA,UAAA,CACA,OAAAC,EAAA,KAAA,IAAA,CACA,EAEA,UAAA,CACA,OAAAC,EAAA,KAAA,IAAA,CACA,EAEA,aAAA,CACA,OAAAC,EAAA,KAAA,QAAA,CACA,CACA,CACA"}