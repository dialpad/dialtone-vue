{"version":3,"file":"keyboard_list_navigation-7bd5fd77.js","sources":["../../common/mixins/dom.js","../../common/mixins/keyboard_list_navigation.js"],"sourcesContent":["export default {\n  methods: {\n    /**\n     * Scroll an element into view if it is not fully visible in its nearest scrollable ancestor.\n     * @param {Element} ref\n     */\n    scrollElementIntoViewIfNeeded (ref, opt_center, opt_behavior, opt_parent) {\n      if (ref.scrollIntoViewIfNeeded) {\n        this.scrollIntoViewIfNeeded(ref, opt_center, opt_behavior, opt_parent);\n      } else {\n        this.scrollIntoView(ref, 'bottom', false, opt_behavior, opt_parent);\n      }\n    },\n\n    /**\n     * Scroll an element to the top or bottom of its scroll ancestor.\n     * @param {Element} ref\n     */\n    scrollElementIntoView (ref, opt_scrollToTop, opt_behavior, opt_parent) {\n      if (opt_scrollToTop === 'center') {\n        this.scrollIntoView(ref, 'center', false, opt_behavior, opt_parent);\n        return;\n      }\n\n      if (opt_scrollToTop === false) {\n        this.scrollIntoView(ref, 'bottom', false, opt_behavior, opt_parent);\n      } else {\n        this.scrollIntoView(ref, 'top', false, opt_behavior, opt_parent);\n      }\n    },\n\n    scrollIntoViewIfNeeded (ref, opt_center, opt_behavior, opt_parent) {\n      const dir = opt_center ? 'center' : undefined;\n      this.scrollIntoView(ref, dir, true, opt_behavior, opt_parent);\n    },\n\n    scrollIntoView (ref, opt_dir, opt_ifNeeded, opt_behavior, opt_parent) {\n      if (!ref || !ref.parentElement) {\n        return;\n      }\n      const offsetTop = ref.offsetTop;\n      const refParent = opt_parent || ref.parentElement;\n      const scrollBounds = this._getScrollBounds(refParent);\n      const parentHeight = scrollBounds.bottom - scrollBounds.top;\n      const elHeight = this._getElementHeight(ref);\n      const offsetBottom = offsetTop + elHeight;\n      let scrollTop = -1;\n      switch (opt_dir) {\n        case 'top':\n          scrollTop = offsetTop;\n          break;\n        case 'center':\n          scrollTop = offsetTop + (elHeight - parentHeight) / 2;\n          break;\n        case 'bottom':\n          scrollTop = scrollTop = offsetBottom - parentHeight;\n          break;\n        default:\n          // Go to the closest edge if needed and no direction is provided.\n          if (offsetTop - scrollBounds.top <= (parentHeight / 2)) {\n            // Lock it to the top edge.\n            scrollTop = offsetTop;\n          } else {\n            scrollTop = offsetBottom - parentHeight;\n          }\n          break;\n      }\n      this._setScrollTop(refParent, scrollTop, scrollBounds, offsetTop, offsetBottom, opt_ifNeeded, opt_behavior);\n    },\n\n    _setScrollTop (el, scrollTop, bounds, offsetTop, offsetBottom, opt_isNeeded, opt_behavior) {\n      bounds = bounds || this._getScrollBounds(el);\n      const parentHeight = bounds.bottom - bounds.top;\n      if (opt_isNeeded && this._inScrollBounds(offsetTop, offsetBottom, bounds)) {\n        // Then lock to the top or bottom if it's hanging off the edge.\n        if (offsetTop < bounds.top) {\n          // Snap it to the top.\n          scrollTop = offsetTop;\n        } else if (offsetBottom > bounds.bottom) {\n          scrollTop = offsetBottom - parentHeight;\n        } else {\n          return;\n        }\n      }\n\n      if (opt_behavior) {\n        el.scrollTo({ top: scrollTop, behavior: opt_behavior });\n      } else {\n        el.scrollTop = scrollTop;\n      }\n    },\n\n    _getElementHeight (el) {\n      return el.getBoundingClientRect().height;\n    },\n\n    _getScrollBounds (el) {\n      const height = this._getElementHeight(el);\n      const scrollTop = el.scrollTop;\n      return {\n        top: scrollTop,\n        bottom: scrollTop + height,\n      };\n    },\n\n    _inScrollBounds (top, bottom, bounds) {\n      // Since we read from top to bottom, we want more than 3/4 to be visible at the top\n      // (bc you're looking at the bottom half) or a quarter visible at the bottom (bc you\n      // can read the beginning of it)\n\n      const height = bottom - top;\n      return (bottom <= bounds.bottom + (3 * height / 4)) && (top >= bounds.top - (height / 4));\n    },\n  },\n};\n","import Dom from './dom';\n\nconst ERROR_INVALID_LIST_ELEMENT = (\n  'listElementKey is required or the referenced ' +\n  'element doesn\\'t exist. Received listElement: '\n);\n\n/**\n * Usage: `mixins: [keyboardNavigationMixin(options)]`\n *\n * This mixin provides some common data and methods to navigate a list of items\n * (such as a dropdown or select menu) by keyboard.\n *\n * To be effective, you must bind the onUpKey and onDownKey events, usually to\n * the root element of the component.\n *\n * @param listItemRole\n * @param indexKey\n * @param idKey\n * @param listElementKey\n * @param activeItemKey\n * @param openMethod\n * @param afterHighlightMethod\n * @param beginningOfListMethod\n * @param endOfListMethod\n * @param scrollToOnHighlight\n * @param focusOnKeyboardNavigation\n * @displayName Keyboard Navigation Mixin\n */\nexport default ({\n  // Role of the list items in the component. This is used to identify the list items\n  // so you must update this if the role of your list items is anything other than 'option'\n  listItemRole = 'option',\n  // Key of the data prop that will be added to the component.\n  indexKey = 'highlightIndex',\n  idKey = 'highlightId',\n  // Key of the method that references the list element.\n  listElementKey = 'listRef',\n  // Optional, Key of the computed prop that references the currently active item element.\n  activeItemKey = '',\n  // Optional, name of the method that toggles the list visibility. Used for\n  // opening the list when up or down is pressed.\n  openMethod = null,\n  // Optional, method to call when the highlightIndex is changed.\n  afterHighlightMethod = null,\n  // Optional, method to call when the highlightIndex goes past the beginning of the list.\n  beginningOfListMethod = null,\n  // Optional, method to call when the highlightIndex goes past the end of the list.\n  endOfListMethod = null,\n  // Scroll the active element into view when highlighted by a keyboard event.\n  scrollToOnHighlight = true,\n  // Focus the active element on keyboard navigation.\n  focusOnKeyboardNavigation = false,\n} = {}) => ({\n  mixins: [Dom],\n\n  data () {\n    return {\n      [indexKey]: -1,\n      [idKey]: '',\n      scrollToOnHighlight,\n      focusOnKeyboardNavigation,\n    };\n  },\n\n  provide () {\n    return {\n      highlightId: () => this[idKey],\n    };\n  },\n\n  methods: {\n    // Returns the list element\n    // this[listElement]() can return a Vue component, in which case we need to target\n    // the $el property, or it can simply be an html element.\n    _getListElement () {\n      return this[listElementKey]()?.$el || this[listElementKey]();\n    },\n\n    // Gets the length of all the items in the list, uses the listItemRole param to determine\n    // whether an element is a list item.\n    _itemsLength () {\n      const listItems = this._getListItemNodes();\n\n      if (listItems === null) {\n        return 0;\n      }\n\n      return listItems.length;\n    },\n\n    // Gets all the list item nodes within the list element\n    _getListItemNodes () {\n      const listElement = this._getListElement();\n\n      if (!listElement) {\n        console.error(ERROR_INVALID_LIST_ELEMENT, listElement);\n        return null;\n      }\n\n      return Array.from(listElement.querySelectorAll(`[role=\"${listItemRole}\"], #sr-only-close-button`));\n    },\n\n    onUpKey () {\n      if (openMethod) {\n        this[openMethod](true);\n      }\n      if (this[indexKey] > 0) {\n        this.setHighlightIndex(this[indexKey] - 1);\n      } else if (beginningOfListMethod) {\n        this[beginningOfListMethod]();\n      }\n      this.scrollActiveItemIntoViewIfNeeded();\n      this.focusActiveItemIfNeeded();\n    },\n\n    onDownKey () {\n      if (openMethod) {\n        this[openMethod](true);\n      }\n      if (this[indexKey] < this._itemsLength() - 1) {\n        this.setHighlightIndex(this[indexKey] + 1);\n      } else if (endOfListMethod) {\n        this[endOfListMethod]();\n      }\n      this.scrollActiveItemIntoViewIfNeeded();\n      this.focusActiveItemIfNeeded();\n    },\n\n    onHomeKey () {\n      this.jumpToBeginning();\n      this.scrollActiveItemIntoViewIfNeeded();\n      this.focusActiveItemIfNeeded();\n    },\n\n    onEndKey () {\n      this.jumpToEnd();\n      this.scrollActiveItemIntoViewIfNeeded();\n      this.focusActiveItemIfNeeded();\n    },\n\n    onNavigationKey (key) {\n      const listItems = this._getListItemNodes();\n\n      const matchingItems = listItems.filter(item => {\n        const content = item.textContent.trim().toLowerCase();\n        return content.startsWith(key.toLowerCase());\n      });\n\n      if (matchingItems.length <= 0) {\n        return;\n      }\n\n      const highlightedMatchingItemIndex = matchingItems.findIndex(item => {\n        return this[indexKey] === listItems.indexOf(item);\n      });\n\n      const nextHighlightedItemIndex = listItems.indexOf(\n        highlightedMatchingItemIndex < matchingItems.length - 1\n          ? matchingItems[highlightedMatchingItemIndex + 1]\n          : matchingItems[0],\n      );\n\n      this.setHighlightIndex(nextHighlightedItemIndex);\n      this.scrollActiveItemIntoViewIfNeeded();\n      this.focusActiveItemIfNeeded();\n    },\n\n    isValidLetter (key) {\n      if (key.length > 1) {\n        return false;\n      }\n\n      return (key >= 'a' && key <= 'z') || (key >= 'A' && key <= 'Z');\n    },\n\n    jumpToBeginning () {\n      this.setHighlightIndex(0);\n    },\n\n    jumpToEnd () {\n      this.setHighlightIndex(this._itemsLength() - 1);\n    },\n\n    setHighlightIndex (num) {\n      this[indexKey] = num;\n      this[idKey] = this._getItemId(num);\n\n      if (this._itemsLength() && afterHighlightMethod) {\n        this[afterHighlightMethod](num);\n      }\n    },\n\n    setHighlightId (id) {\n      this[idKey] = id;\n      this[indexKey] = this._getItemIndex(id);\n\n      if (this._itemsLength() && afterHighlightMethod) {\n        this[afterHighlightMethod](this._getItemIndex(id));\n      }\n    },\n\n    _getItemIndex (id) {\n      const listElement = this._getListElement();\n      if (!listElement) {\n        return;\n      }\n\n      const listItems = Array.from(listElement.querySelectorAll(`[role=\"${listItemRole}\"], #sr-only-close-button`));\n      return listItems.indexOf(listElement.querySelector(`#${id}`));\n    },\n\n    _getItemId (index) {\n      const listElement = this._getListElement();\n      if (!listElement) {\n        return;\n      }\n\n      return listElement.querySelectorAll(`[role=\"${listItemRole}\"], #sr-only-close-button`)[index]?.id;\n    },\n\n    scrollActiveItemIntoViewIfNeeded () {\n      if (!this.scrollToOnHighlight) {\n        return;\n      }\n      const activeItemEl = this[activeItemKey];\n      if (activeItemEl) {\n        // When listElementKey is not passed,\n        // scrollElementIntoViewIfNeeded will default to the immediate wrapper of the item.\n        const listElement = this._getListElement();\n        this.scrollElementIntoViewIfNeeded(activeItemEl, null, null, listElement);\n      }\n    },\n\n    focusActiveItemIfNeeded () {\n      if (!this.focusOnKeyboardNavigation) {\n        return;\n      }\n      const activeItemEl = this[activeItemKey];\n      if (activeItemEl) {\n        activeItemEl.focus();\n      }\n    },\n  },\n});\n"],"names":["Dom","ref","opt_center","opt_behavior","opt_parent","opt_scrollToTop","dir","opt_dir","opt_ifNeeded","offsetTop","refParent","scrollBounds","parentHeight","elHeight","offsetBottom","scrollTop","el","bounds","opt_isNeeded","height","top","bottom","ERROR_INVALID_LIST_ELEMENT","KeyboardNavigation","listItemRole","indexKey","idKey","listElementKey","activeItemKey","openMethod","afterHighlightMethod","beginningOfListMethod","endOfListMethod","scrollToOnHighlight","focusOnKeyboardNavigation","_a","listItems","listElement","key","matchingItems","item","highlightedMatchingItemIndex","nextHighlightedItemIndex","num","id","index","activeItemEl"],"mappings":"AAAA,MAAeA,EAAA,CACb,QAAS,CAKP,8BAA+BC,EAAKC,EAAYC,EAAcC,EAAY,CACpEH,EAAI,uBACN,KAAK,uBAAuBA,EAAKC,EAAYC,EAAcC,CAAU,EAErE,KAAK,eAAeH,EAAK,SAAU,GAAOE,EAAcC,CAAU,CAErE,EAMD,sBAAuBH,EAAKI,EAAiBF,EAAcC,EAAY,CACrE,GAAIC,IAAoB,SAAU,CAChC,KAAK,eAAeJ,EAAK,SAAU,GAAOE,EAAcC,CAAU,EAClE,OAGEC,IAAoB,GACtB,KAAK,eAAeJ,EAAK,SAAU,GAAOE,EAAcC,CAAU,EAElE,KAAK,eAAeH,EAAK,MAAO,GAAOE,EAAcC,CAAU,CAElE,EAED,uBAAwBH,EAAKC,EAAYC,EAAcC,EAAY,CACjE,MAAME,EAAMJ,EAAa,SAAW,OACpC,KAAK,eAAeD,EAAKK,EAAK,GAAMH,EAAcC,CAAU,CAC7D,EAED,eAAgBH,EAAKM,EAASC,EAAcL,EAAcC,EAAY,CACpE,GAAI,CAACH,GAAO,CAACA,EAAI,cACf,OAEF,MAAMQ,EAAYR,EAAI,UAChBS,EAAYN,GAAcH,EAAI,cAC9BU,EAAe,KAAK,iBAAiBD,CAAS,EAC9CE,EAAeD,EAAa,OAASA,EAAa,IAClDE,EAAW,KAAK,kBAAkBZ,CAAG,EACrCa,EAAeL,EAAYI,EACjC,IAAIE,EAAY,GAChB,OAAQR,EAAO,CACb,IAAK,MACHQ,EAAYN,EACZ,MACF,IAAK,SACHM,EAAYN,GAAaI,EAAWD,GAAgB,EACpD,MACF,IAAK,SACHG,EAAYA,EAAYD,EAAeF,EACvC,MACF,QAEMH,EAAYE,EAAa,KAAQC,EAAe,EAElDG,EAAYN,EAEZM,EAAYD,EAAeF,EAE7B,KACH,CACD,KAAK,cAAcF,EAAWK,EAAWJ,EAAcF,EAAWK,EAAcN,EAAcL,CAAY,CAC3G,EAED,cAAea,EAAID,EAAWE,EAAQR,EAAWK,EAAcI,EAAcf,EAAc,CACzFc,EAASA,GAAU,KAAK,iBAAiBD,CAAE,EAC3C,MAAMJ,EAAeK,EAAO,OAASA,EAAO,IAC5C,GAAIC,GAAgB,KAAK,gBAAgBT,EAAWK,EAAcG,CAAM,EAEtE,GAAIR,EAAYQ,EAAO,IAErBF,EAAYN,UACHK,EAAeG,EAAO,OAC/BF,EAAYD,EAAeF,MAE3B,QAIAT,EACFa,EAAG,SAAS,CAAE,IAAKD,EAAW,SAAUZ,CAAY,CAAE,EAEtDa,EAAG,UAAYD,CAElB,EAED,kBAAmBC,EAAI,CACrB,OAAOA,EAAG,sBAAuB,EAAC,MACnC,EAED,iBAAkBA,EAAI,CACpB,MAAMG,EAAS,KAAK,kBAAkBH,CAAE,EAClCD,EAAYC,EAAG,UACrB,MAAO,CACL,IAAKD,EACL,OAAQA,EAAYI,CAC5B,CACK,EAED,gBAAiBC,EAAKC,EAAQJ,EAAQ,CAKpC,MAAME,EAASE,EAASD,EACxB,OAAQC,GAAUJ,EAAO,OAAU,EAAIE,EAAS,GAAQC,GAAOH,EAAO,IAAOE,EAAS,CACvF,CACF,CACH,EChHMG,EACJ,6FA0BFC,EAAe,CAAC,CAGd,aAAAC,EAAe,SAEf,SAAAC,EAAW,iBACX,MAAAC,EAAQ,cAER,eAAAC,EAAiB,UAEjB,cAAAC,EAAgB,GAGhB,WAAAC,EAAa,KAEb,qBAAAC,EAAuB,KAEvB,sBAAAC,EAAwB,KAExB,gBAAAC,EAAkB,KAElB,oBAAAC,EAAsB,GAEtB,0BAAAC,EAA4B,EAC9B,EAAI,MAAQ,CACV,OAAQ,CAAClC,CAAG,EAEZ,MAAQ,CACN,MAAO,CACL,CAACyB,CAAQ,EAAG,GACZ,CAACC,CAAK,EAAG,GACT,oBAAAO,EACA,0BAAAC,CACN,CACG,EAED,SAAW,CACT,MAAO,CACL,YAAa,IAAM,KAAKR,CAAK,CACnC,CACG,EAED,QAAS,CAIP,iBAAmB,CD3EvB,IAAAS,EC4EM,QAAOA,EAAA,KAAKR,CAAc,EAAG,IAAtB,YAAAQ,EAAwB,MAAO,KAAKR,CAAc,GAC1D,EAID,cAAgB,CACd,MAAMS,EAAY,KAAK,oBAEvB,OAAIA,IAAc,KACT,EAGFA,EAAU,MAClB,EAGD,mBAAqB,CACnB,MAAMC,EAAc,KAAK,kBAEzB,OAAKA,EAKE,MAAM,KAAKA,EAAY,iBAAiB,UAAUb,4BAAuC,CAAC,GAJ/F,QAAQ,MAAMF,EAA4Be,CAAW,EAC9C,KAIV,EAED,SAAW,CACLR,GACF,KAAKA,CAAU,EAAE,EAAI,EAEnB,KAAKJ,CAAQ,EAAI,EACnB,KAAK,kBAAkB,KAAKA,CAAQ,EAAI,CAAC,EAChCM,GACT,KAAKA,CAAqB,IAE5B,KAAK,iCAAgC,EACrC,KAAK,wBAAuB,CAC7B,EAED,WAAa,CACPF,GACF,KAAKA,CAAU,EAAE,EAAI,EAEnB,KAAKJ,CAAQ,EAAI,KAAK,aAAY,EAAK,EACzC,KAAK,kBAAkB,KAAKA,CAAQ,EAAI,CAAC,EAChCO,GACT,KAAKA,CAAe,IAEtB,KAAK,iCAAgC,EACrC,KAAK,wBAAuB,CAC7B,EAED,WAAa,CACX,KAAK,gBAAe,EACpB,KAAK,iCAAgC,EACrC,KAAK,wBAAuB,CAC7B,EAED,UAAY,CACV,KAAK,UAAS,EACd,KAAK,iCAAgC,EACrC,KAAK,wBAAuB,CAC7B,EAED,gBAAiBM,EAAK,CACpB,MAAMF,EAAY,KAAK,oBAEjBG,EAAgBH,EAAU,OAAOI,GACrBA,EAAK,YAAY,KAAM,EAAC,YAAW,EACpC,WAAWF,EAAI,YAAa,CAAA,CAC5C,EAED,GAAIC,EAAc,QAAU,EAC1B,OAGF,MAAME,EAA+BF,EAAc,UAAUC,GACpD,KAAKf,CAAQ,IAAMW,EAAU,QAAQI,CAAI,CACjD,EAEKE,EAA2BN,EAAU,QACzCK,EAA+BF,EAAc,OAAS,EAClDA,EAAcE,EAA+B,CAAC,EAC9CF,EAAc,CAAC,CAC3B,EAEM,KAAK,kBAAkBG,CAAwB,EAC/C,KAAK,iCAAgC,EACrC,KAAK,wBAAuB,CAC7B,EAED,cAAeJ,EAAK,CAClB,OAAIA,EAAI,OAAS,EACR,GAGDA,GAAO,KAAOA,GAAO,KAASA,GAAO,KAAOA,GAAO,GAC5D,EAED,iBAAmB,CACjB,KAAK,kBAAkB,CAAC,CACzB,EAED,WAAa,CACX,KAAK,kBAAkB,KAAK,aAAc,EAAG,CAAC,CAC/C,EAED,kBAAmBK,EAAK,CACtB,KAAKlB,CAAQ,EAAIkB,EACjB,KAAKjB,CAAK,EAAI,KAAK,WAAWiB,CAAG,EAE7B,KAAK,aAAc,GAAIb,GACzB,KAAKA,CAAoB,EAAEa,CAAG,CAEjC,EAED,eAAgBC,EAAI,CAClB,KAAKlB,CAAK,EAAIkB,EACd,KAAKnB,CAAQ,EAAI,KAAK,cAAcmB,CAAE,EAElC,KAAK,aAAc,GAAId,GACzB,KAAKA,CAAoB,EAAE,KAAK,cAAcc,CAAE,CAAC,CAEpD,EAED,cAAeA,EAAI,CACjB,MAAMP,EAAc,KAAK,kBACzB,OAAKA,EAIa,MAAM,KAAKA,EAAY,iBAAiB,UAAUb,4BAAuC,CAAC,EAC3F,QAAQa,EAAY,cAAc,IAAIO,GAAI,CAAC,EAJ1D,MAKH,EAED,WAAYC,EAAO,CDpNvB,IAAAV,ECqNM,MAAME,EAAc,KAAK,kBACzB,GAAKA,EAIL,OAAOF,EAAAE,EAAY,iBAAiB,UAAUb,4BAAuC,EAAEqB,CAAK,IAArF,YAAAV,EAAwF,EAChG,EAED,kCAAoC,CAClC,GAAI,CAAC,KAAK,oBACR,OAEF,MAAMW,EAAe,KAAKlB,CAAa,EACvC,GAAIkB,EAAc,CAGhB,MAAMT,EAAc,KAAK,kBACzB,KAAK,8BAA8BS,EAAc,KAAM,KAAMT,CAAW,EAE3E,EAED,yBAA2B,CACzB,GAAI,CAAC,KAAK,0BACR,OAEF,MAAMS,EAAe,KAAKlB,CAAa,EACnCkB,GACFA,EAAa,MAAK,CAErB,CACF,CACH"}