{"version":3,"file":"writing_storybook-2c21e8c8.js","sources":["../../docs/storybook/writing_storybook.mdx"],"sourcesContent":["import { Meta, Subtitle, Story, Canvas } from '@storybook/addon-docs';\nimport { DocImg } from '../components'\nimport * as InputStories from '../../components/input/input.stories';\n\n<Meta title=\"Docs/Storybook/Writing Stories\" />\n\n# Writing Stories\n\nWriting stories for Storybook using the Component Story Format (CSF)\n\n### [Official Docs](https://storybook.js.org/docs/vue/get-started/introduction)\n\n## What is a story?\n\nStories the are building blocks of Storybook, they represent a snapshot or slice of the\ncomponent at a particular state, rendered onto a \"playground\" or \"sandbox\" for anyone to interact with.\nIn turn, we can take these stories and embed them into\n[MDX](https://github.com/mdx-js/mdx) files (like the one you're reading right now)\nand turn them into living documentation.\n\nFor example, the `WithSuccess` story from `input.stories.js` gets rendered as:\n\n<Canvas>\n  <Story of={InputStories.WithSuccess} />\n</Canvas>\n\n```js\n# input.stories.js\nimport DtInput from './input';\n\n...\n\n// Template of the story component, this is a harness Vue component that\n// wraps the DtInput component\nconst Template = (args, { argTypes }) => {\n  return {\n    components: { DtInput },\n    template: baseInputTemplate,\n    props: Object.keys(argTypes),\n    methods: { onInput: action('input') },\n  };\n};\n\n...\n\n// Snapshotting props\nexport const WithSuccess = Template.bind({});\nWithSuccess.args = {\n  messages: [{ message: 'This is a success message', type: 'success' }],\n};\n```\n\nWe can interact with this component as we would in our actual application.\nBy modifying the `args` property, we can specify any combination of states\nfor this component.\n\n## Component Story Format and Export Structure\n\nStorybook automatically parses the **default** and **named** exports from every `*.stories.js` file\nto generate stories, this is known as the [Component Story Format](https://storybook.js.org/docs/react/api/csf)\n\n### Default Export\n\nDefault export is where the metadata and configuration for all of the stories contained within\nthe same `*.stories.js` file are defined. It also provides fields for addon configuration for said stories.\n\n```js\n// input.stories.js\n\nimport DtInput from './input';\n\nexport default {\n  title: 'Forms/Input',\n  component: DtInput,\n  parameters: { ... },\n  decorators: [ ... ],\n};\n```\n\nWhere [**parameters**](https://storybook.js.org/docs/react/writing-stories/parameters) holds the configuration for\naddons and [**decorators**](https://storybook.js.org/docs/react/writing-stories/decorators) are templates\nthat wrap our stories.\n\n### Named Exports\n\nNamed exports are the individual stories that show up in the sidebar of storybooks\n\nWhen writing stories, it's good practice to create a `Template` variable that is not exported which binds\nall of the props, events, and data that we want for all of our stories. It acts as the harness for which our\ncomponents are held. The `Template` is reused in each story as named exports and we can simply specify the\n[**args**](https://storybook.js.org/docs/react/writing-stories/args) field to set props.\n\n```js\n// input.stories.js\n\n...\n\nconst Template = (args, { argTypes }) => {\n  return {\n    components: { DtInput },\n    template: baseInputTemplate,\n    props: Object.keys(argTypes),\n  };\n};\n\n// Dt Input -> Default story\nexport const Default = Template.bind({});\n// Dt Input -> With Warning story\nexport const WithWarning = Template.bind({});\n// Dt Input -> With Error story\nexport const WithError = Template.bind({});\n```\n\n## Writing Stories\n\nTo write stories, we first import the component that we wish to write stories for:\n\n```js\n// input.stories.js\nimport DtInput from './input';\n```\n\nThen we will define the `Default Export` for the simplest use case (No configuration):\n\n```js\n// input.stories.js\nimport DtInput from './input';\n\nexport default {\n  title: 'Forms/Input',\n  component: DtInput,\n};\n```\n\n### Title Field\n\nThe `title` field will tell Storybook to put the stories in a category called `Components`.\nWe can add more levels of nesting by adding more `/`.\n\nFor example, `Component/Folder/Input` will result in the following:\n\n<DocImg src=\"https://static.dialpadcdn.com/dialtone/naming.png\" />\n\nNothing will appear yet, this is because we now need to add our named exports.\n\n### Story Template\n\nFirst we will define the harness that will render our component:\n\n```js\n// input.stories.js\nconst Template = () => {\n  return {\n    components: { DtInput },\n    template: <dt-input />,\n  };\n};\n```\n\nSince `Template` returns a Vue component that wraps our component, we need to pass through all of the props\nthat our component expects so Storybook can interact with our component's internals using its UI:\n\n```js\n// input.stories.js\nconst Template = () => {\n  return {\n    components: { DtInput },\n    template: <dt-input :name=\"name\" :value=\"value\" ... />,\n    props: [name, value ...],\n  };\n};\n```\n\n### generateTemplate Helper Method\n\nAs you can imagine, depending on the component, this can get quite tedious, luckily, the `Template` method\ntakes in 2 arguments. We can also use the `generateTemplate` method to bind all props for us:\n\n```js\n// input.stories.js\n/**\n * generateTemplate will take a component and generate a template\n * where all of it's props are mapped to values with the same name,\n * the customProps field let's the user pass in additional bindings if desired.\n *\n * So this will generate the string:\n * <dt-input\n *  :name=\"name\"\n *  :type=\"type\"\n *  :value=\"value\"\n *  ...\n *  :placeholder=\"placeholder\",\n * />\n */\nconst baseInputTemplate = generateTemplate(DtInput, {\n  customProps: [\n    ':placeholder=\"placeholder\"',\n  ],\n});\n\n/**\n * argTypes is an object that contains all of the props\n * listed in the component. So we can automatically bind\n * all of the props by simplying using `props: Object.keys(argTypes)`\n */\nconst Template = (args, { argTypes }) => {\n  return {\n    components: { DtInput },\n    template: baseInputTemplate,\n    props: Object.keys(argTypes),\n  };\n};\n```\n\n### Vue Single-File Component Template\n\nAnother option is to use an actual Vue Single-File Component as your template. This can be useful if\nyou are rendering a more complex component and you would prefer to have code highlighting and the ability\nto use any of the advanced features of a .vue component. Below is an example usage of this in a stories.js file:\n\n#### Important Notes\n\nIn order to address a current storybook bug where props that share the same name as a slot are not displayed in the\nsidebar controls we must define the slots controls in `argTypesData` as seen in the example below.\n\n```js\nimport DtNotice from './notice';\nimport NoticeDefault from './NoticeDefault.story.vue';\n\nexport const argTypesData = {\n  '#title': {\n    name: 'title',\n    description: 'slot for the notice title',\n    table: {\n      category: 'slots',\n      type: {\n        summary: 'text/html',\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Elements/Notice',\n  component: DtNotice,\n  argTypes: argTypesData,\n  excludeStories: /.Data$/,\n};\n\nconst Template = (args) => createTemplateFromVueFile(args, NoticeDefault);\n\nexport const Default = Template.bind({});\nDefault.args = {\n  title: 'Notice title',\n  default: 'Main content of the notice goes here.',\n  action: 'try this <a href=\"https://www.dialpad.com\" target=\"_blank\">action</a>',\n};\n```\n\nAnd here is what the vue component NoticeDefault.story.vue looks like. Note that for these types of\ncomponents that are used only for rendering components, we suffix them .story.vue, and keep them in the same\nfolder as the corresponding stories.js file. In this case it is in the same folder as notice.stories.js:\n\n```jsx\n<template>\n  <dt-notice\n    :kind=\"kind\"\n    :title=\"title\"\n    :title-id=\"titleId\"\n    :content-id=\"contentId\"\n    :important=\"important\"\n    :hide-close=\"hideClose\"\n  >\n    <span v-html=\"defaultSlot\" />\n    <template\n      v-if=\"action\"\n      #action\n    >\n      <span v-html=\"action\" />\n    </template>\n    <template\n      v-if=\"icon\"\n      #icon\n    >\n      <dt-icon :name=\"icon\" />\n    </template>\n    <template\n      v-if=\"titleOverride\"\n      #titleOverride\n    >\n      <span v-html=\"titleOverride\" />\n    </template>\n  </dt-notice>\n</template>\n\n<script>\nimport DtNotice from './notice';\nimport { DtIcon } from '../components/icon';\n\nexport default {\n  name: 'NoticeDefault',\n  components: { DtNotice, DtIcon },\n};\n</script>\n```\n\n### Creating Named Exports / Setting Args\n\nNow that we have the `Template`, we can create our named exports. Usually the `Default`\nnamed export represents our component in it's default state. Specifying the `args` property\nwill on other named exports will create stories with those props set.\n\n```js\n// input.stories.js\nimport DtInput from './input';\nimport { generateTemplate } from '@/common/storybook_utils';\n\nexport default {\n  title: 'Forms/Input',\n  component: DtInput,\n};\n\nconst baseInputTemplate = generateTemplate(DtInput, {\n  customProps: [\n    ':placeholder=\"placeholder\"',\n  ],\n});\n\nconst Template = (args, { argTypes }) => {\n  return {\n    components: { DtInput },\n    template: baseInputTemplate,\n    props: Object.keys(argTypes),\n  };\n};\n\n// Default story\nexport const Default = Template.bind({});\n\n// With Warning story with the 'messages' props set\nexport const WithWarning = Template.bind({});\nWithWarning.args = {\n  messages: [{ message: 'This is a warning message', type: 'warning' }],\n};\n```\n\n### Decorators\n\n`TODO`\n\n### Ignoring Exports\nSometimes we don't want specific exports to be parsed as a story. This may occur if we want to export some\ndata property to be reused in composite stories. This can be accomplished by specifying the `excludeStories`\nfield in the `default export`\n\n```js\n// input.stories.js\n\nimport DtInput from './input';\n\nexport default {\n  title: 'Forms/Input',\n  component: DtInput,\n  parameters: { ... },\n  decorators: [ ... ],\n  excludeStories: /.*Data$/, // Ignores all named exports that end with \"Data\"\n};\n\n...\n\n// Won't be parsed\nexport const propsData = {};\n\n// Will be parsed\nexport const Default = Template.bind({});\n```\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","Canvas","Story","InputStories.WithSuccess","DocImg"],"mappings":"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"}