{"version":3,"file":"utils-a9dd49de.js","sources":["../../common/constants.js","../../common/utils.js"],"sourcesContent":["/* TODO: Move and sort these in a constants directory\n\nExample:\n  constants/\n    forms.js\n    defaults.js\n    ...\n*/\n\n// Types of messages, also dictates what is the current state of the input.\nexport const VALIDATION_MESSAGE_TYPES = {\n  ERROR: 'error',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n};\n\n// Description size variants\nexport const DESCRIPTION_SIZE_TYPES = {\n  LARGE: 'lg',\n  EXTRA_LARGE: 'xl',\n};\n\n// Description size variants\nexport const DESCRIPTION_SIZE_MODIFIERS = {\n  xs: '',\n  sm: '',\n  md: '',\n  lg: 'd-description--lg',\n  xl: 'd-description--xl',\n};\n\n// Label size variants\nexport const LABEL_SIZE_MODIFIERS = {\n  xs: 'd-label--xs',\n  sm: 'd-label--sm',\n  md: '',\n  lg: 'd-label--lg',\n  xl: 'd-label--xl',\n};\n\nexport const EVENT_KEYNAMES = {\n  esc: 'Esc',\n  escape: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: 'Space',\n  spacebar: 'Spacebar',\n  up: 'Up',\n  arrowup: 'ArrowUp',\n  left: 'Left',\n  arrowleft: 'ArrowLeft',\n  right: 'Right',\n  arrowright: 'ArrowRight',\n  down: 'Down',\n  arrowdown: 'ArrowDown',\n  home: 'Home',\n  end: 'End',\n};\n\n/*\n * Any string message or message object in the messages prop that do not specify\n * a 'type' attributes will default to 'DEFAULT_MESSAGE_TYPE'.\n */\nexport const DEFAULT_VALIDATION_MESSAGE_TYPE = VALIDATION_MESSAGE_TYPES.ERROR;\n\n// Default prefix used for ids\nexport const DEFAULT_PREFIX = 'dt';\n\nexport default {\n  VALIDATION_MESSAGE_TYPES,\n  DESCRIPTION_SIZE_TYPES,\n  DEFAULT_VALIDATION_MESSAGE_TYPE,\n  DEFAULT_PREFIX,\n};\n","import {\n  DEFAULT_PREFIX,\n  DEFAULT_VALIDATION_MESSAGE_TYPE,\n  VALIDATION_MESSAGE_TYPES,\n} from './constants';\nimport {\n  h,\n  Comment,\n  Text,\n} from 'vue';\n\nlet UNIQUE_ID_COUNTER = 0;\nlet TIMER;\n\n// selector to find focusable not hidden inputs\nconst FOCUSABLE_SELECTOR_NOT_HIDDEN = 'input:not([type=hidden]):not(:disabled)';\n// selector to find focusable not disables elements\nconst FOCUSABLE_SELECTOR_NOT_DISABLED = 'select:not(:disabled),textarea:not(:disabled),button:not(:disabled)';\n// // selector to find focusable not hidden and disabled elements\nconst FOCUSABLE_SELECTOR_NOT_HIDDEN_DISABLED = `${FOCUSABLE_SELECTOR_NOT_HIDDEN},${FOCUSABLE_SELECTOR_NOT_DISABLED}`;\n// selector to find focusable elements\nconst FOCUSABLE_SELECTOR = `a,frame,iframe,${FOCUSABLE_SELECTOR_NOT_HIDDEN_DISABLED},*[tabindex]`;\n\nconst scheduler = typeof setImmediate === 'function' ? setImmediate : setTimeout;\n\nexport function getUniqueString (prefix = DEFAULT_PREFIX) {\n  return `${prefix}${UNIQUE_ID_COUNTER++}`;\n}\n\n/**\n * Returns a random element from array\n * @param array - the array to return a random element from\n * @param {string} seed - use a string to seed the randomization, so it returns the same element each time\n * based on that string.\n * @returns {*} - the random element\n */\nexport async function getRandomElement (array, seed) {\n  if (seed) {\n    const hash = await hashSha256(seed);\n    return array[hash % array.length];\n  } else {\n    return array[getRandomInt(array.length)];\n  }\n}\n\n/**\n * Generate a random integer\n * @param {number} max - max range of integer to generate\n * @returns {number} randomly generated integer between 0 and max\n */\nexport function getRandomInt (max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function formatMessages (messages) {\n  if (!messages) {\n    return [];\n  }\n\n  return messages.map(message => {\n    if (typeof message === 'string') {\n      return {\n        message,\n        type: DEFAULT_VALIDATION_MESSAGE_TYPE,\n      };\n    }\n\n    return message;\n  });\n}\n\nexport function filterFormattedMessages (formattedMessages) {\n  const validationState = getValidationState(formattedMessages);\n\n  if (!formattedMessages || !validationState) {\n    return [];\n  }\n\n  return formattedMessages.filter(message => !!message.message && message.type === validationState);\n}\n\n/*\n * The priority order of message types is as flows: 'error' > 'warning' > 'success'.\n * If any message of type 'error' is present in messages, the input state is considered\n * to be 'error', then 'warning' and lastly 'success'.\n */\nexport function getValidationState (formattedMessages) {\n  if (!formattedMessages) {\n    return null;\n  }\n\n  if (hasFormattedMessageOfType(formattedMessages, VALIDATION_MESSAGE_TYPES.ERROR)) {\n    return VALIDATION_MESSAGE_TYPES.ERROR;\n  }\n  if (hasFormattedMessageOfType(formattedMessages, VALIDATION_MESSAGE_TYPES.WARNING)) {\n    return VALIDATION_MESSAGE_TYPES.WARNING;\n  }\n  if (hasFormattedMessageOfType(formattedMessages, VALIDATION_MESSAGE_TYPES.SUCCESS)) {\n    return VALIDATION_MESSAGE_TYPES.SUCCESS;\n  }\n\n  return null;\n}\n\nexport function hasFormattedMessageOfType (formattedMessages, messageType) {\n  if (!formattedMessages || !messageType) {\n    return false;\n  }\n\n  return formattedMessages.some(message => message?.type === messageType);\n}\n\nexport function findFirstFocusableNode (element) {\n  return element?.querySelector(FOCUSABLE_SELECTOR);\n}\n\n/* html-fragment component:\n * To render html without wrapping in another element as when using v-html.\n * props: html\n */\nexport const htmlFragment = (props) => {\n  return h('div', { innerHTML: props.html });\n};\n\nexport const flushPromises = () => {\n  return new Promise((resolve) => {\n    scheduler(resolve);\n  });\n};\n\n/*\n  It is very cumbersome to check if a slot is empty in vue 3. Copied this method from the following thread\n  https://github.com/vuejs/core/issues/4733. There is an RFC to fix this but not yet being worked on.\n  https://github.com/vuejs/rfcs/discussions/453\n*/\nexport function hasSlotContent (slot, slotProps = {}) {\n  if (!slot) return false;\n\n  // eslint-disable-next-line complexity\n  return slot(slotProps).some((vnode) => {\n    if (vnode.type === Comment) return false;\n\n    if (Array.isArray(vnode.children) && !vnode.children.length) return false;\n\n    return (\n      vnode.type !== Text ||\n      (typeof vnode.children === 'string' && vnode.children.trim() !== '')\n    );\n  });\n}\n\n/**\n * Transform a string from kebab-case to PascalCase\n * @param string\n * @returns {string}\n */\nexport const kebabCaseToPascalCase = (string) => {\n  return string?.toLowerCase()\n    .split('-')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join('');\n};\n\n/**\n * Transform a string from PascalCase to kebab-case\n * @param string\n * @returns {string}\n */\nexport const pascalCaseToKebabCase = (string) => {\n  return string\n    .replace(/\\.?([A-Z0-9]+)/g, (x, y) => '-' + y.toLowerCase())\n    .replace(/^-/, '');\n};\n\nexport const extractVueListeners = (attrs) => {\n  const listeners = Object.entries(attrs)\n    .filter(([key]) => key.startsWith('on'));\n  return Object.fromEntries(listeners);\n};\n/**\n * Hash a string using SHA-256\n * @param {string} the string to hash\n * @returns {Number} the number that was hashed from the string\n */\nexport function hashSha256 (string) {\n  const utf8 = new TextEncoder().encode(string);\n  return crypto.subtle.digest('SHA-256', utf8).then((hashBuffer) => {\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray\n      .map((bytes) => bytes.toString(16).padStart(2, '0'))\n      .join('');\n\n    return Number('0x' + hashHex);\n  });\n}\n\n/*\n* Set's a global timer to debounce the execution of a function.\n* @param { object } func - the function that is going to be called after timeout\n* @param { number } [timeout=300] timeout\n* */\nexport function debounce (func, timeout = 300) {\n  clearTimeout(TIMER);\n  TIMER = setTimeout(func, timeout);\n}\n\n/**\n * Checks if the element is out of the viewport\n * https://gomakethings.com/how-to-check-if-any-part-of-an-element-is-out-of-the-viewport-with-vanilla-js/\n * @param  {HTMLElement} element The element to check\n * @return {Object} A set of booleans for each side of the element\n */\n\nexport function isOutOfViewPort (element) {\n  const bounding = element.getBoundingClientRect();\n\n  const isOut = {\n    top: bounding.top < 0,\n    left: bounding.left < 0,\n    bottom: bounding.bottom > (window.innerHeight || document.documentElement.clientHeight),\n    right: bounding.right > (window.innerWidth || document.documentElement.clientWidth),\n  };\n  isOut.any = Object.values(isOut).some(val => val);\n  isOut.all = Object.values(isOut).every(val => val);\n  return isOut;\n}\nexport default {\n  getUniqueString,\n  getRandomElement,\n  getRandomInt,\n  formatMessages,\n  filterFormattedMessages,\n  hasFormattedMessageOfType,\n  getValidationState,\n  htmlFragment,\n  flushPromises,\n  kebabCaseToPascalCase,\n  extractVueListeners,\n  hashSha256,\n  debounce,\n  isOutOfViewPort,\n};\n"],"names":["VALIDATION_MESSAGE_TYPES","DESCRIPTION_SIZE_TYPES","DESCRIPTION_SIZE_MODIFIERS","LABEL_SIZE_MODIFIERS","EVENT_KEYNAMES","DEFAULT_VALIDATION_MESSAGE_TYPE","DEFAULT_PREFIX","UNIQUE_ID_COUNTER","TIMER","scheduler","getUniqueString","prefix","getRandomElement","array","seed","hash","hashSha256","getRandomInt","max","formatMessages","messages","message","filterFormattedMessages","formattedMessages","validationState","getValidationState","hasFormattedMessageOfType","messageType","htmlFragment","props","h","flushPromises","resolve","hasSlotContent","slot","slotProps","vnode","Comment","Text","kebabCaseToPascalCase","string","word","pascalCaseToKebabCase","x","y","extractVueListeners","attrs","listeners","key","utf8","hashBuffer","bytes","debounce","func","timeout","isOutOfViewPort","element","bounding","isOut","val","utils"],"mappings":"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"}