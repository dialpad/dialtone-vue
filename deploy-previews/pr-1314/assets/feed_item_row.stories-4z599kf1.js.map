{"version":3,"file":"feed_item_row.stories-4z599kf1.js","sources":["../../recipes/conversation_view/feed_item_row/feed_item_row_constants.js","../../recipes/conversation_view/feed_item_row/feed_item_row.vue","../../recipes/conversation_view/feed_item_row/feed_item_row_default.story.vue","../../recipes/conversation_view/feed_item_row/feed_item_row_variants.story.vue"],"sourcesContent":["export const FEED_ROW_STATE_BACKGROUND_COLOR = {\n  NORMAL: '',\n  SEARCHED: 'd-bgc-warning-subtle',\n  ERROR: 'd-bgc-critical-subtle',\n};\n\nexport const DEFAULT_FEED_ROW_STATE = 'NORMAL';\n\nexport default {\n  FEED_ROW_STATE_BACKGROUND_COLOR,\n  DEFAULT_FEED_ROW_STATE,\n};\n","<template>\n  <dt-list-item\n    ref=\"FeedItemRef\"\n    navigation-type=\"none\"\n    v-bind=\"$attrs\"\n    :class=\"listItemClasses\"\n    data-qa=\"dt-feed-item-row\"\n    v-on=\"feedListeners\"\n  >\n    <!-- Avatar or time -->\n    <template #left>\n      <!-- @slot Slot to contain the avatar, overrides avatar props. -->\n      <slot\n        v-if=\"showHeader\"\n        name=\"avatar\"\n      >\n        <dt-avatar\n          :full-name=\"displayName\"\n          :image-src=\"avatarImageUrl\"\n          :seed=\"avatarSeed\"\n        />\n      </slot>\n      <!-- show time instead of avatar when headers not present -->\n      <div\n        v-if=\"!showHeader\"\n        v-show=\"isActive\"\n        class=\"dt-feed-item-row__left-time\"\n        data-qa=\"dt-feed-item-row--left-time\"\n      >\n        {{ shortTime }}\n      </div>\n    </template>\n\n    <article>\n      <!-- Feed Item -->\n      <div\n        v-if=\"showHeader\"\n        data-qa=\"dt-feed-item-row--header\"\n        class=\"d-d-flex d-ai-center\"\n      >\n        <p class=\"d-fs-200 d-lh-300 d-fw-bold d-to-ellipsis d-of-hidden d-ws-nowrap\">\n          {{ displayName }}\n        </p>\n        <time\n          class=\"d-fs-100 d-mt2 d-lh-300 d-fc-tertiary d-fw-normal d-ml4 d-fl-shrink0\"\n        >\n          {{ time }}\n        </time>\n      </div>\n      <!-- @slot Default content slot for feed item row -->\n      <span\n        class=\"content-text-wrapper-class\"\n        data-qa=\"dt-feed-item-row--content\"\n      >\n        <slot />\n      </span>\n    </article>\n\n    <template #bottom>\n      <div\n        class=\"d-d-flex d-fw-wrap\"\n        data-qa=\"dt-feed-item-row--reactions\"\n      >\n        <!-- @slot Slot for reactions row component -->\n        <slot name=\"reactions\" />\n      </div>\n      <!-- @slot Slot for threading row component -->\n      <slot name=\"threading\" />\n    </template>\n\n    <!-- Action menu -->\n    <template #right>\n      <div\n        v-show=\"isActive\"\n        data-qa=\"dt-feed-item-row--menu\"\n        class=\"d-ps-absolute d-tn24 d-r12\"\n      >\n        <dt-lazy-show\n          :appear=\"true\"\n          transition=\"fade\"\n          :show=\"isActive\"\n        >\n          <!-- @slot Slot for actions hover menu component -->\n          <slot name=\"menu\" />\n        </dt-lazy-show>\n      </div>\n    </template>\n  </dt-list-item>\n</template>\n\n<script>\nimport { DEFAULT_FEED_ROW_STATE, FEED_ROW_STATE_BACKGROUND_COLOR } from './feed_item_row_constants.js';\nimport { DtAvatar } from '@/components/avatar';\nimport { DtLazyShow } from '@/components/lazy_show';\nimport { DtListItem } from '@/components/list_item';\n\nexport default {\n  name: 'DtRecipeFeedItemRow',\n\n  components: {\n    DtAvatar,\n    DtLazyShow,\n    DtListItem,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Avatar seed, set this to the user's ID to get the same avatar background gradient each time it is displayed.\n     */\n    avatarSeed: {\n      type: String,\n      default: null,\n    },\n\n    /**\n     * Show avatar, show header text or dont show left time and vice versa\n     */\n    showHeader: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Show the avatar of the user, if this is not passed in, the initials would display\n     */\n    avatarImageUrl: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * The display name of the sender\n     */\n    displayName: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * time string displayed as is.\n     * Shown on the header when showHeader is true\n     */\n    time: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * short time string without AM/PM displayed as is.\n     * Shown on the left of feed item when showHeader is false and isActive is true\n     */\n    shortTime: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * displays a darkened background on the row.\n     */\n    isActive: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * state for the feed item row. Can be default, searched & error\n     */\n    state: {\n      type: String,\n      default: DEFAULT_FEED_ROW_STATE,\n      validator: state => Object.keys(FEED_ROW_STATE_BACKGROUND_COLOR).includes(state),\n    },\n  },\n\n  emits: [\n    /**\n     * Fires when hovered over feed row\n     *\n     * @event hover\n     * @type {Boolean}\n     */\n    'hover',\n\n    /**\n     * Fires when focused over feed row\n     *\n     * @event focus\n     * @type {Boolean}\n     */\n    'focus',\n  ],\n\n  data () {\n    return {\n      faded: false,\n    };\n  },\n\n  computed: {\n    feedListeners () {\n      return {\n        ...this.$listeners,\n        mouseenter: () => this.setHover(true),\n        mouseleave: () => this.setHover(false),\n        focusin: () => this.setFocus(true),\n        focusout: () => this.setFocus(false),\n      };\n    },\n\n    listItemClasses () {\n      return [\n        'd-w100p',\n        'd-box-border',\n        'd-ps-relative',\n        'd-px8',\n        { 'd-bgc-secondary-opaque': this.isActive && this.state === DEFAULT_FEED_ROW_STATE },\n        FEED_ROW_STATE_BACKGROUND_COLOR[this.state],\n        'dt-feed-item-row',\n        'd-t',\n        'd-tp-bgc',\n      ];\n    },\n  },\n\n  methods: {\n    setFocus (bool) {\n      this.$emit('focus', bool);\n    },\n\n    setHover (bool) {\n      this.$emit('hover', bool);\n    },\n\n    fade () {\n      // Do not fade if its a default feed row state\n      if (this.state === DEFAULT_FEED_ROW_STATE || this.faded === true) {\n        return;\n      }\n\n      this.$refs.FeedItemRef.$el.classList.remove(FEED_ROW_STATE_BACKGROUND_COLOR[this.state]);\n      this.faded = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dt-feed-item-row {\n  transition-duration: 2s !important;\n\n  &__left-time {\n    color: var(--dt-color-foreground-tertiary);\n    padding-top: var(--dt-space-350);\n    line-height: var(--dt-font-line-height-400);\n    font-size: var(--dt-font-size-100);\n    font-weight: var(--dt-font-weight-normal);\n    white-space: nowrap;\n    height: 100%;\n  }\n\n  .content-text-wrapper-class:not(img) {\n    line-height: 1.6rem;\n  }\n\n  &:deep(.dt-item-layout--left) {\n    .d-avatar {\n      align-self: flex-start;\n      margin-top: var(--dt-space-300);\n    }\n  }\n}\n</style>\n","<template>\n  <ul class=\"d-pt16 feed-item-row__default-story\">\n    <dt-recipe-feed-item-row\n      :show-header=\"$attrs.showHeader\"\n      :avatar-image-url=\"$attrs.avatarImageUrl\"\n      :display-name=\"$attrs.displayName\"\n      :time=\"$attrs.time\"\n      :short-time=\"$attrs.shortTime\"\n      :is-active=\"$attrs.isActive\"\n      :state=\"$attrs.state\"\n      @hover=\"$attrs.onHover\"\n      @focus=\"$attrs.onFocus\"\n    >\n      <template v-if=\"$attrs.default\">\n        <span v-html=\"$attrs.default\" />\n      </template>\n      <template\n        v-if=\"$attrs.avatar\"\n        #avatar\n      >\n        <span\n          v-html=\"$attrs.avatar\"\n        />\n      </template>\n      <template\n        v-if=\"$attrs.threading\"\n        #threading\n      >\n        <dt-stack\n          class=\"feed-item-row__thread d-d-flex d-ai-center\"\n          direction=\"row\"\n          gap=\"400\"\n        >\n          <dt-stack\n            direction=\"row\"\n            gap=\"300\"\n          >\n            <dt-avatar\n              v-for=\"person of persons\"\n              :key=\"person\"\n              :full-name=\"person\"\n              seed=\"seed\"\n              size=\"sm\"\n            />\n          </dt-stack>\n          <dt-stack\n            direction=\"row\"\n            gap=\"400\"\n          >\n            <div class=\"d-fs-100 d-lh200 d-d-flex d-ai-center\">\n              <a class=\"d-link d-pr4\">3 replies</a>\n              <span class=\"feed-item-row__reply\">Last reply an hour ago</span>\n            </div>\n          </dt-stack>\n        </dt-stack>\n      </template>\n      <template\n        #reactions\n      >\n        <dt-recipe-emoji-row\n          :reactions=\"mockReactions\"\n        />\n      </template>\n      <template #menu>\n        <!-- TODO replace this with DT menu -->\n        <div\n          class=\"d-d-flex d-bgc-primary d-bar-pill d-bc-default d-ba\"\n          role=\"group\"\n        >\n          <dt-button\n            v-for=\"button of hoverButtons\"\n            :key=\"button\"\n            kind=\"muted\"\n            importance=\"clear\"\n            size=\"xs\"\n            aria-label=\"button\"\n          >\n            <template #icon>\n              <slot name=\"icon\">\n                <dt-icon\n                  :name=\"button\"\n                  size=\"300\"\n                />\n              </slot>\n            </template>\n          </dt-button>\n        </div>\n      </template>\n    </dt-recipe-feed-item-row>\n  </ul>\n</template>\n\n<script>\nimport DtRecipeFeedItemRow from './feed_item_row.vue';\nimport { DtRecipeEmojiRow } from '../emoji_row';\nimport { DtAvatar } from '@/components/avatar';\nimport { DtIcon } from '@/components/icon';\nimport { DtButton } from '@/components/button';\nimport { DtStack } from '@/components/stack';\n\nexport default {\n  name: 'DtRecipeFeedItemRowDefault',\n  components: {\n    DtAvatar,\n    DtRecipeFeedItemRow,\n    DtRecipeEmojiRow,\n    DtIcon,\n    DtButton,\n    DtStack,\n  },\n\n  data () {\n    return {\n      mockReactions: [\n        {\n          emojiUnicodeOrShortname: '😀',\n          isSelected: true,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 😀',\n          num: 1,\n        },\n        {\n          emojiUnicodeOrShortname: '😒',\n          isSelected: false,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 😒',\n          num: 1,\n        },\n        {\n          emojiUnicodeOrShortname: '🙃',\n          isSelected: false,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 🙃',\n          num: 99,\n        },\n      ],\n\n      hoverButtons: ['bell', 'living-thing', 'map-pin'],\n\n      persons: ['Jim Halpert', 'Michael Scott', 'Pam'],\n    };\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n  .feed-item-row {\n    &__default-story {\n      p {\n        color: var(--dt-color-foreground-primary);\n        font-size: 15px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 24px;\n      }\n    }\n    &__thread{\n      height: 32px;\n    }\n    &__reply{\n      color: var(--dt-color-foreground-tertiary);\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 16px;\n      letter-spacing: -0.12px;\n    }\n  }\n</style>\n","<!-- Use this template story to allow the user control the component's props and slots -->\n<template>\n  <dt-stack gap=\"600\">\n    <div>\n      <h3>Feed item with showHeader as False and isActive true</h3>\n      <ul class=\"d-py8\">\n        <dt-recipe-feed-item-row\n          :show-header=\"false\"\n          :avatar-image-url=\"$attrs.avatarImageUrl\"\n          :display-name=\"$attrs.displayName\"\n          :time=\"$attrs.time\"\n          :short-time=\"$attrs.shortTime\"\n          :is-active=\"true\"\n          :state=\"$attrs.state\"\n          @hover=\"$attrs.onHover\"\n          @focus=\"$attrs.onFocus\"\n        >\n          <template v-if=\"$attrs.default\">\n            <span v-html=\"$attrs.default\" />\n          </template>\n          <template\n            #threading\n          >\n            <dt-stack\n              class=\"feed-item-row__thread d-d-flex d-ai-center\"\n              direction=\"row\"\n              gap=\"400\"\n            >\n              <dt-stack\n                direction=\"row\"\n                gap=\"300\"\n              >\n                <dt-avatar\n                  v-for=\"person of persons\"\n                  :key=\"person\"\n                  :full-name=\"person\"\n                  seed=\"seed\"\n                  size=\"sm\"\n                />\n              </dt-stack>\n              <dt-stack\n                direction=\"row\"\n                gap=\"400\"\n              >\n                <div class=\"d-fs-100 d-lh200 d-d-flex d-ai-center\">\n                  <a class=\"d-link d-pr4\">3 replies</a>\n                  <span class=\"feed-item-row__reply\">Last reply an hour ago</span>\n                </div>\n              </dt-stack>\n            </dt-stack>\n          </template>\n          <template\n            #reactions\n          >\n            <dt-recipe-emoji-row\n              :reactions=\"mockReactions\"\n            />\n          </template>\n          <template\n            #menu\n          >\n            <!-- TODO replace this with DT menu -->\n            <div\n              class=\"d-d-flex d-bgc-primary d-bar-pill d-bc-default d-ba\"\n              role=\"group\"\n            >\n              <dt-button\n                v-for=\"button of hoverButtons\"\n                :key=\"button\"\n                kind=\"muted\"\n                importance=\"clear\"\n                size=\"xs\"\n                aria-label=\"button\"\n              >\n                <template #icon>\n                  <slot name=\"icon\">\n                    <dt-icon\n                      :name=\"button\"\n                      size=\"300\"\n                    />\n                  </slot>\n                </template>\n              </dt-button>\n            </div>\n          </template>\n        </dt-recipe-feed-item-row>\n      </ul>\n    </div>\n    <div>\n      <h3>Feed item with rich media</h3>\n      <ul class=\"d-py8\">\n        <dt-recipe-feed-item-row\n          :show-header=\"true\"\n          :avatar-image-url=\"$attrs.avatarImageUrl\"\n          :display-name=\"$attrs.displayName\"\n          :time=\"$attrs.time\"\n          :short-time=\"$attrs.shortTime\"\n          :is-active=\"true\"\n          @hover=\"$attrs.onHover\"\n          @focus=\"$attrs.onFocus\"\n        >\n          <dt-image-viewer\n            :image-src=\"fryImage\"\n            image-alt=\"Alt Text\"\n            close-aria-label=\"Close\"\n            image-button-class=\"d-wmn64 d-hmn64 w-wmx332 d-hmx332\"\n            aria-label=\"Click to open image\"\n          />\n          <template\n            #threading\n          >\n            <dt-stack\n              class=\"feed-item-row__thread d-d-flex d-ai-center\"\n              direction=\"row\"\n              gap=\"400\"\n            >\n              <dt-stack\n                direction=\"row\"\n                gap=\"300\"\n              >\n                <dt-avatar\n                  v-for=\"person of persons\"\n                  :key=\"person\"\n                  :full-name=\"person\"\n                  seed=\"seed\"\n                  size=\"sm\"\n                />\n              </dt-stack>\n              <dt-stack\n                direction=\"row\"\n                gap=\"400\"\n              >\n                <div class=\"d-fs-100 d-lh200 d-d-flex d-ai-center\">\n                  <a class=\"d-link d-pr4\">3 replies</a>\n                  <span class=\"feed-item-row__reply\">Last reply an hour ago</span>\n                </div>\n              </dt-stack>\n            </dt-stack>\n          </template>\n          <template\n            #reactions\n          >\n            <dt-recipe-emoji-row\n              :reactions=\"$attrs.reactions\"\n            />\n          </template>\n        </dt-recipe-feed-item-row>\n      </ul>\n    </div>\n    <div>\n      <h3>Feed item state \"error\"</h3>\n      <ul class=\"d-py8\">\n        <dt-recipe-feed-item-row\n          :show-header=\"false\"\n          :avatar-image-url=\"$attrs.avatarImageUrl\"\n          :display-name=\"$attrs.displayName\"\n          :time=\"$attrs.time\"\n          :short-time=\"$attrs.shortTime\"\n          :is-active=\"true\"\n          state=\"ERROR\"\n          @hover=\"$attrs.onHover\"\n          @focus=\"$attrs.onFocus\"\n        >\n          <template v-if=\"$attrs.default\">\n            <span v-html=\"$attrs.default\" />\n          </template>\n        </dt-recipe-feed-item-row>\n      </ul>\n    </div>\n    <div>\n      <h3>Feed item state \"searched\"</h3>\n      <dt-button\n        @click=\"$refs.feedItemRowFade.fade()\"\n      >\n        Click to fade\n      </dt-button>\n      <ul class=\"d-py8\">\n        <dt-recipe-feed-item-row\n          ref=\"feedItemRowFade\"\n          :show-header=\"false\"\n          :avatar-image-url=\"$attrs.avatarImageUrl\"\n          :display-name=\"$attrs.displayName\"\n          :time=\"$attrs.time\"\n          :short-time=\"$attrs.shortTime\"\n          :is-active=\"true\"\n          state=\"SEARCHED\"\n          @hover=\"$attrs.onHover\"\n          @focus=\"$attrs.onFocus\"\n        >\n          <template v-if=\"$attrs.default\">\n            <span v-html=\"$attrs.default\" />\n          </template>\n        </dt-recipe-feed-item-row>\n      </ul>\n    </div>\n  </dt-stack>\n</template>\n\n<script>\nimport DtRecipeFeedItemRow from './feed_item_row.vue';\n\nimport { DtRecipeEmojiRow } from '../emoji_row';\nimport { DtStack } from '@/components/stack';\nimport { DtAvatar } from '@/components/avatar';\nimport { DtIcon } from '@/components/icon';\nimport { DtImageViewer } from '@/components/image_viewer';\nimport { DtButton } from '@/components/button';\n\nimport fryImage from '@/common/assets/fry.gif';\n\nexport default {\n  name: 'DtRecipeFeedItemRowVariants',\n  components: {\n    DtRecipeEmojiRow,\n    DtRecipeFeedItemRow,\n    DtStack,\n    DtAvatar,\n    DtIcon,\n    DtImageViewer,\n    DtButton,\n  },\n\n  data () {\n    return {\n      mockReactions: [\n        {\n          emojiUnicodeOrShortname: '😀',\n          isSelected: true,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 😀',\n          num: 1,\n        },\n        {\n          emojiUnicodeOrShortname: '😒',\n          isSelected: false,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 😒',\n          num: 1,\n        },\n        {\n          emojiUnicodeOrShortname: '🙃',\n          isSelected: false,\n          ariaLabel: 'Emoji aria label',\n          tooltip: 'You reacted with 🙃',\n          num: 99,\n        },\n      ],\n\n      hoverButtons: ['bell', 'living-thing', 'map-pin'],\n      persons: ['Jim Halpert', 'Michael Scott', 'Pam'],\n      fryImage,\n    };\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n  .feed-item-row {\n    &__default-story {\n      p {\n        color: var(--dt-color-foreground-primary);\n        font-size: 15px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 24px;\n      }\n    }\n    &__thread{\n      height: 32px;\n    }\n    &__reply{\n      color: var(--dt-color-foreground-tertiary);\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 16px;\n      letter-spacing: -0.12px;\n    }\n  }\n</style>\n"],"names":["FEED_ROW_STATE_BACKGROUND_COLOR","DEFAULT_FEED_ROW_STATE","_sfc_main","DtAvatar","DtLazyShow","DtListItem","state","bool","DtRecipeFeedItemRow","DtRecipeEmojiRow","DtIcon","DtButton","DtStack","DtImageViewer","fryImage"],"mappings":"+eAAO,MAAMA,EAAkC,CAC7C,OAAQ,GACR,SAAU,uBACV,MAAO,uBACT,EAEaC,EAAyB,SC0FtCC,EAAA,CACA,KAAA,sBAEA,WAAA,CACA,SAAAC,EACA,WAAAC,EACA,WAAAC,CACA,EAEA,aAAA,GAEA,MAAA,CAIA,WAAA,CACA,KAAA,OACA,QAAA,IACA,EAKA,WAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,eAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,YAAA,CACA,KAAA,OACA,QAAA,EACA,EAMA,KAAA,CACA,KAAA,OACA,QAAA,EACA,EAMA,UAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,SAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,MAAA,CACA,KAAA,OACA,QAAAJ,EACA,UAAAK,GAAA,OAAA,KAAAN,CAAA,EAAA,SAAAM,CAAA,CACA,CACA,EAEA,MAAA,CAOA,QAQA,OACA,EAEA,MAAA,CACA,MAAA,CACA,MAAA,EACA,CACA,EAEA,SAAA,CACA,eAAA,CACA,MAAA,CACA,GAAA,KAAA,WACA,WAAA,IAAA,KAAA,SAAA,EAAA,EACA,WAAA,IAAA,KAAA,SAAA,EAAA,EACA,QAAA,IAAA,KAAA,SAAA,EAAA,EACA,SAAA,IAAA,KAAA,SAAA,EAAA,CACA,CACA,EAEA,iBAAA,CACA,MAAA,CACA,UACA,eACA,gBACA,QACA,CAAA,yBAAA,KAAA,UAAA,KAAA,QAAAL,CAAA,EACAD,EAAA,KAAA,KAAA,EACA,mBACA,MACA,UACA,CACA,CACA,EAEA,QAAA,CACA,SAAAO,EAAA,CACA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,SAAAA,EAAA,CACA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,MAAA,CAEA,KAAA,QAAAN,GAAA,KAAA,QAAA,KAIA,KAAA,MAAA,YAAA,IAAA,UAAA,OAAAD,EAAA,KAAA,KAAA,CAAA,EACA,KAAA,MAAA,GACA,CACA,CACA;;khCCjJA,MAAAE,EAAA,CACA,KAAA,6BACA,WAAA,CACA,SAAAC,EACA,oBAAAK,EACA,iBAAAC,EACA,OAAAC,EACA,SAAAC,EACA,QAAAC,CACA,EAEA,MAAA,CACA,MAAA,CACA,cAAA,CACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,CACA,EACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,CACA,EACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,EACA,CACA,EAEA,aAAA,CAAA,OAAA,eAAA,SAAA,EAEA,QAAA,CAAA,cAAA,gBAAA,KAAA,CACA,CACA,CACA,kuECoEA,MAAAV,EAAA,CACA,KAAA,8BACA,WAAA,CACA,iBAAAO,EACA,oBAAAD,EACA,QAAAI,EACA,SAAAT,EACA,OAAAO,EACA,cAAAG,EACA,SAAAF,CACA,EAEA,MAAA,CACA,MAAA,CACA,cAAA,CACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,CACA,EACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,CACA,EACA,CACA,wBAAA,KACA,WAAA,GACA,UAAA,mBACA,QAAA,sBACA,IAAA,EACA,CACA,EAEA,aAAA,CAAA,OAAA,eAAA,SAAA,EACA,QAAA,CAAA,cAAA,gBAAA,KAAA,EACA,SAAAG,CACA,CACA,CACA;;;;;;;;;;;;"}