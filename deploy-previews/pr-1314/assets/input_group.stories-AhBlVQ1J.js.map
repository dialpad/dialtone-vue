{"version":3,"file":"input_group.stories-AhBlVQ1J.js","sources":["../../components/input_group/decorators/input.vue","../../components/input_group/input_group_default.story.vue","../../components/input_group/decorators/inputs.vue","../../components/input_group/input_group_variants.story.vue"],"sourcesContent":["<!--\n  Decorator used for storybook documentation and unit tests.\n-->\n<template>\n  <div>\n    <label>\n      <div class=\"d-radio-group\">\n        <input\n          type=\"radio\"\n          class=\"d-radio\"\n          :checked=\"internalChecked\"\n          :name=\"internalName\"\n          :value=\"value\"\n          :disabled=\"internalDisabled\"\n          :class=\"[inputValidationClass, inputClass]\"\n          v-bind=\"$attrs\"\n          v-on=\"inputListeners\"\n        >\n        <span\n          class=\"d-radio__copy d-radio__label\"\n          :class=\"labelClass\"\n          v-bind=\"labelChildProps\"\n          data-qa=\"input-decorator-label\"\n        >\n          <!-- @slot slot for Input Decorator Label -->\n          <slot>{{ label }}</slot>\n        </span>\n      </div>\n    </label>\n  </div>\n</template>\n\n<script>\nimport { RADIO_INPUT_VALIDATION_CLASSES } from '../../radio/radio_constants';\nimport {\n  InputMixin,\n  GroupableMixin,\n} from '../../../common/mixins/input';\n\nexport default {\n  name: 'InputDecorator',\n\n  mixins: [InputMixin, GroupableMixin],\n\n  inheritAttrs: false,\n\n  computed: {\n    inputValidationClass () {\n      return RADIO_INPUT_VALIDATION_CLASSES[this.internalValidationState];\n    },\n\n    groupValue () {\n      return this.groupContext?.value;\n    },\n\n    inputListeners () {\n      return {\n        change: event => this.emitValue(event.target.value),\n      };\n    },\n  },\n\n  watch: {\n    groupValue: {\n      immediate: true,\n      handler (newGroupValue) {\n        if (this.hasGroup) {\n          // update internal value when the input group value changes\n          this.internalChecked = newGroupValue === this.value;\n        }\n      },\n    },\n  },\n\n  methods: {\n    emitValue (value) {\n      if (value !== this.groupValue) {\n        // update provided value if injected\n        this.setGroupValue(value);\n\n        this.$emit('input', value);\n      }\n    },\n  },\n};\n</script>\n","<template>\n  <dt-input-group\n    :id=\"$attrs.id\"\n    v-model=\"internalValue\"\n    :name=\"$attrs.name\"\n    :legend=\"$attrs.legend\"\n    :disabled=\"$attrs.disabled\"\n    :messages=\"$attrs.messages\"\n    :show-messages=\"$attrs.showMessages\"\n    :legend-class=\"$attrs.legendClass\"\n    :messages-class=\"$attrs.messagesClass\"\n    :legend-child-props=\"$attrs.legendChildProps\"\n    :messages-child-props=\"$attrs.messagesChildProps\"\n    @input=\"$attrs.onInput\"\n  >\n    <slot>\n      <input-decorator\n        v-for=\"option in $attrs.options\"\n        :key=\"option.value\"\n        :value=\"option.value\"\n      >\n        <span>{{ option.label }}</span>\n      </input-decorator>\n    </slot>\n    <template\n      v-if=\"$attrs.legendSlot\"\n      slot=\"legend\"\n    >\n      <span v-html=\"$attrs.legendSlot\" />\n    </template>\n  </dt-input-group>\n</template>\n\n<script>\nimport InputDecorator from './decorators/input.vue';\nimport DtInputGroup from './input_group.vue';\n\nexport default {\n  name: 'InputGroupDefault',\n\n  components: { InputDecorator, DtInputGroup },\n\n  data () {\n    return {\n      internalValue: this.$attrs.value,\n    };\n  },\n\n  watch: {\n    value (newValue) {\n      this.internalValue = newValue;\n    },\n  },\n};\n</script>\n","<!--\n  Decorator used for storybook documentation and unit tests.\n-->\n<template>\n  <div>\n    <input-decorator\n      v-for=\"option in options\"\n      :key=\"option.value\"\n      :value=\"option.value\"\n    >\n      <span>{{ option.label }}</span>\n    </input-decorator>\n  </div>\n</template>\n\n<script>\nimport InputDecorator from './input.vue';\n\nexport default {\n  name: 'InputsDecorator',\n\n  components: { InputDecorator },\n\n  created () {\n    this.options = [\n      { label: 'Apple', value: 'apple' },\n      { label: 'Banana', value: 'banana' },\n      { label: 'Other', value: 'other' },\n    ];\n  },\n};\n</script>\n","<template>\n  <div id=\"components-input-group--variants-container\">\n    <!-- Default -->\n    <dt-input-group\n      name=\"input-group-default\"\n      aria-label=\"default\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- Default -->\n\n    <!-- With Legend -->\n    <dt-input-group\n      name=\"input-group-with-legend\"\n      legend=\"With Legend\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Legend -->\n\n    <!-- With Slotted Legend -->\n    <dt-input-group name=\"input-group-with-slotted-legend\">\n      <inputs-decorator />\n      <template slot=\"legend\">\n        With Slotted Legend\n      </template>\n    </dt-input-group>\n    <!-- With Slotted Legend -->\n\n    <!-- With Value -->\n    <dt-input-group\n      name=\"input-group-with-value\"\n      legend=\"With Value\"\n      value=\"banana\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Value -->\n\n    <!-- Disabled -->\n    <dt-input-group\n      name=\"input-group-disabled\"\n      legend=\"Disabled\"\n      disabled\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- Disabled -->\n\n    <!-- With Success Message -->\n    <dt-input-group\n      name=\"input-group-with-success-message\"\n      legend=\"With Success Message\"\n      :messages=\"[{ message: 'Success', type: VALIDATION_MESSAGE_TYPES.SUCCESS }]\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Success Message -->\n\n    <!-- With Warning Message -->\n    <dt-input-group\n      name=\"input-group-with-warning-message\"\n      legend=\"With Warning Message\"\n      :messages=\"[{ message: 'Warning', type: VALIDATION_MESSAGE_TYPES.WARNING }]\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Warning Message -->\n\n    <!-- With Error Message -->\n    <dt-input-group\n      name=\"input-group-with-error-message\"\n      legend=\"With Error Message\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Error Message -->\n\n    <!-- With Error Messages Hidden -->\n    <dt-input-group\n      name=\"input-group-with-error-messages-hidden\"\n      legend=\"With Error Messages Hidden\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n      :show-messages=\"false\"\n    >\n      <inputs-decorator />\n    </dt-input-group>\n    <!-- With Error Messages Hidden -->\n  </div>\n</template>\n\n<script>\nimport { VALIDATION_MESSAGE_TYPES } from '@/common/constants';\nimport InputsDecorator from './decorators/inputs.vue';\nimport DtInputGroup from './input_group.vue';\n\nexport default {\n  name: 'InputGroupVariants',\n\n  components: { InputsDecorator, DtInputGroup },\n\n  created () {\n    this.VALIDATION_MESSAGE_TYPES = VALIDATION_MESSAGE_TYPES;\n  },\n};\n</script>\n"],"names":["_sfc_main","InputMixin","GroupableMixin","RADIO_INPUT_VALIDATION_CLASSES","_a","event","newGroupValue","value","InputDecorator","DtInputGroup","newValue","InputsDecorator","VALIDATION_MESSAGE_TYPES"],"mappings":"oVAuCA,MAAAA,EAAA,CACA,KAAA,iBAEA,OAAA,CAAAC,EAAAC,CAAA,EAEA,aAAA,GAEA,SAAA,CACA,sBAAA,CACA,OAAAC,EAAA,KAAA,uBAAA,CACA,EAEA,YAAA,OACA,OAAAC,EAAA,KAAA,eAAA,YAAAA,EAAA,KACA,EAEA,gBAAA,CACA,MAAA,CACA,OAAAC,GAAA,KAAA,UAAAA,EAAA,OAAA,KAAA,CACA,CACA,CACA,EAEA,MAAA,CACA,WAAA,CACA,UAAA,GACA,QAAAC,EAAA,CACA,KAAA,WAEA,KAAA,gBAAAA,IAAA,KAAA,MAEA,CACA,CACA,EAEA,QAAA,CACA,UAAAC,EAAA,CACAA,IAAA,KAAA,aAEA,KAAA,cAAAA,CAAA,EAEA,KAAA,MAAA,QAAAA,CAAA,EAEA,CACA,CACA;;;8lFC/CA,MAAAP,EAAA,CACA,KAAA,oBAEA,WAAA,CAAA,eAAAQ,EAAA,aAAAC,CAAA,EAEA,MAAA,CACA,MAAA,CACA,cAAA,KAAA,OAAA,KACA,CACA,EAEA,MAAA,CACA,MAAAC,EAAA,CACA,KAAA,cAAAA,CACA,CACA,CACA,uuCCnCA,MAAAV,EAAA,CACA,KAAA,kBAEA,WAAA,CAAA,eAAAQ,CAAA,EAEA,SAAA,CACA,KAAA,QAAA,CACA,CAAA,MAAA,QAAA,MAAA,OAAA,EACA,CAAA,MAAA,SAAA,MAAA,QAAA,EACA,CAAA,MAAA,QAAA,MAAA,OAAA,CACA,CACA,CACA,qkBCmEA,MAAAR,EAAA,CACA,KAAA,qBAEA,WAAA,CAAA,gBAAAW,EAAA,aAAAF,CAAA,EAEA,SAAA,CACA,KAAA,yBAAAG,CACA,CACA;;;;;;;;;;;;;;;;;;;"}