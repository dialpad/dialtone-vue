{"version":3,"file":"emoji_text_wrapper-1442f882.js","sources":["../../components/emoji_text_wrapper/emoji_text_wrapper.vue"],"sourcesContent":["<script>\nimport { DtEmoji } from '../emoji';\nimport { findEmojis, findShortCodes } from '@/common/emoji';\nimport { h } from 'vue';\nimport { ICON_SIZE_MODIFIERS } from '@/components/icon/icon_constants';\n\n/**\n * Wrapper to find and replace shortcodes like :smile: or unicode chars such as ðŸ˜„ with our custom Emojis implementation.\n * @see https://dialpad.design/components/emoji_text_wrapper.html\n */\nexport default {\n  name: 'DtEmojiTextWrapper',\n\n  components: {\n    DtEmoji,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Element type (tag name) to use for the wrapper.\n     */\n    elementType: {\n      type: String,\n      default: 'div',\n    },\n\n    /**\n     * The icon size to render the emojis at: 100 to 800\n     */\n    size: {\n      type: String,\n      default: '500',\n      validator: (t) => Object.keys(ICON_SIZE_MODIFIERS).includes(t),\n    },\n  },\n\n  data () {\n    return {\n      loadingEmojiJson: true,\n    };\n  },\n\n  async created () {\n    this.loadingEmojiJson = false;\n  },\n\n  methods: {\n    /**\n     * Replaces the valid codes from the text content with a DtEmoji component.\n     * @returns {Array<VNode|string>}\n     */\n    replaceDtEmojis (replaceList, textContent) {\n      const regexp = new RegExp(`(${replaceList.join('|')})`, 'g');\n      const split = textContent.split(regexp);\n      return split.map((item) => {\n        if (replaceList.includes(item)) {\n          return h(DtEmoji, { ...this.$attrs, class: 'd-mx4 d-d-inline-block', size: this.size, code: item });\n        }\n        return item;\n      });\n    },\n\n    /**\n     * Recursively search the Vue virtual DOM to find text\n     * @param VNode\n     * @returns {VNode|*}\n     */\n    searchVNodes (VNode) {\n      if (typeof VNode === 'string') return this.searchCodes(VNode);\n      if (typeof VNode.type === 'symbol') return this.searchCodes(VNode.children);\n      if (VNode.props?.innerHTML) return this.searchVNodes(VNode.props.innerHTML);\n\n      const children = Array.isArray(VNode.children) ? VNode.children : [VNode.children];\n      return h(VNode.type, VNode.props, children.map(VNodeChild => this.searchVNodes(VNodeChild)));\n    },\n\n    // TODO: Find a way to crawl vue components\n    replaceVueComponentVNodeContent (VNode) {\n      //\n    },\n\n    /**\n     * Find codes in text.\n     * @param textContent string\n     * @returns {Array<VNode|string>|string}\n     */\n    searchCodes (textContent) {\n      const shortcodes = findShortCodes(textContent);\n      const emojis = findEmojis(textContent);\n\n      const replaceList = [...shortcodes, ...emojis];\n      if (replaceList.length === 0) return textContent;\n      return this.replaceDtEmojis(replaceList, textContent);\n    },\n  },\n\n  render () {\n    const defaultSlotContent = this.$slots.default ? this.$slots.default() : [];\n    return h(\n      this.elementType,\n      {\n        'data-qa': 'emoji-text-wrapper',\n        class: this.$attrs.class,\n      },\n      this.loadingEmojiJson\n        ? defaultSlotContent\n        : defaultSlotContent.map(VNode => this.searchVNodes(VNode)),\n    );\n  },\n};\n</script>\n"],"names":["_sfc_main","DtEmoji","t","ICON_SIZE_MODIFIERS","replaceList","textContent","regexp","item","h","VNode","_a","children","VNodeChild","shortcodes","findShortCodes","emojis","findEmojis","defaultSlotContent"],"mappings":"sPAUA,MAAKA,EAAU,CACb,KAAM,qBAEN,WAAY,CACV,QAAAC,CACD,EAED,aAAc,GAEd,MAAO,CAIL,YAAa,CACX,KAAM,OACN,QAAS,KACV,EAKD,KAAM,CACJ,KAAM,OACN,QAAS,MACT,UAAYC,GAAM,OAAO,KAAKC,CAAmB,EAAE,SAASD,CAAC,CAC9D,CACF,EAED,MAAQ,CACN,MAAO,CACL,iBAAkB,GAErB,EAED,MAAM,SAAW,CACf,KAAK,iBAAmB,EACzB,EAED,QAAS,CAKP,gBAAiBE,EAAaC,EAAa,CACzC,MAAMC,EAAS,IAAI,OAAO,IAAIF,EAAY,KAAK,GAAG,KAAM,GAAG,EAE3D,OADcC,EAAY,MAAMC,CAAM,EACzB,IAAKC,GACZH,EAAY,SAASG,CAAI,EACpBC,EAAEP,EAAS,CAAE,GAAG,KAAK,OAAQ,MAAO,yBAA0B,KAAM,KAAK,KAAM,KAAMM,CAAM,CAAA,EAE7FA,CACR,CACF,EAOD,aAAcE,EAAO,OACnB,GAAI,OAAOA,GAAU,SAAU,OAAO,KAAK,YAAYA,CAAK,EAC5D,GAAI,OAAOA,EAAM,MAAS,SAAU,OAAO,KAAK,YAAYA,EAAM,QAAQ,EAC1E,IAAIC,EAAAD,EAAM,QAAN,MAAAC,EAAa,UAAW,OAAO,KAAK,aAAaD,EAAM,MAAM,SAAS,EAE1E,MAAME,EAAW,MAAM,QAAQF,EAAM,QAAQ,EAAIA,EAAM,SAAW,CAACA,EAAM,QAAQ,EACjF,OAAOD,EAAEC,EAAM,KAAMA,EAAM,MAAOE,EAAS,IAAIC,GAAc,KAAK,aAAaA,CAAU,CAAC,CAAC,CAC5F,EAGD,gCAAiCH,EAAO,CAEvC,EAOD,YAAaJ,EAAa,CACxB,MAAMQ,EAAaC,EAAeT,CAAW,EACvCU,EAASC,EAAWX,CAAW,EAE/BD,EAAc,CAAC,GAAGS,EAAY,GAAGE,CAAM,EAC7C,OAAIX,EAAY,SAAW,EAAUC,EAC9B,KAAK,gBAAgBD,EAAaC,CAAW,CACrD,CACF,EAED,QAAU,CACR,MAAMY,EAAqB,KAAK,OAAO,QAAU,KAAK,OAAO,QAAU,EAAE,GACzE,OAAOT,EACL,KAAK,YACL,CACE,UAAW,qBACX,MAAO,KAAK,OAAO,KACpB,EACD,KAAK,iBACDS,EACAA,EAAmB,IAAIR,GAAS,KAAK,aAAaA,CAAK,CAAC,EAE/D,CACH"}