{"version":3,"file":"emoji_picker.stories-IOhx-vvE.js","sources":["../../components/emoji_picker/emoji_picker_constants.js","../../components/emoji_picker/modules/emoji_tabset.vue","../../components/emoji_picker/modules/emoji_search.vue","../../components/emoji_picker/emojis/index.js","../../components/emoji_picker/modules/emoji_selector.vue","../../components/emoji_picker/modules/emoji_description.vue","../../components/emoji_picker/modules/emoji_skin_selector.vue","../../components/emoji_picker/emoji_picker.vue","../../components/emoji_picker/emoji_picker_default.story.vue","../../components/emoji_picker/emoji_picker_popover.story.vue"],"sourcesContent":["export const CDN_URL = 'https://static.dialpadcdn.com/joypixels/png/unicode/32/';\nexport const EMOJIS_PER_ROW = 9;\nexport const EMOJI_SKIN_TONE_MODIFIERS = {\n  DEFAULT: 'Default',\n  LIGHT: 'Light',\n  MEDIUM_LIGHT: 'MediumLight',\n  MEDIUM: 'Medium',\n  MEDIUM_DARK: 'MediumDark',\n  DARK: 'Dark',\n};\n\nexport const EMOJI_CATEGORIES = {\n  MOST_RECENTLY_USED: 'Most recently used',\n  SMILEYS_AND_PEOPLE: 'Smileys and people',\n  NATURE: 'Nature',\n  FOOD: 'Food',\n  ACTIVITY: 'Activity',\n  TRAVEL: 'Travel',\n  OBJECTS: 'Objects',\n  SYMBOLS: 'Symbols',\n  FLAGS: 'Flags',\n};\n","<template>\n  <div class=\"d-emoji-picker__tabset\">\n    <dt-tab-group\n      tab-list-class=\"d-emoji-picker__tabset-list\"\n      :selected=\"selectedTab\"\n    >\n      <template #tabs>\n        <dt-tab\n          v-for=\"(tab, index) in tabs\"\n          :id=\"tab.id\"\n          :ref=\"`tabsetRef-${index}`\"\n          :key=\"tab.id\"\n          :panel-id=\"tab.panelId\"\n          :label=\"tab.label\"\n          aria-controls=\"d-emoji-picker-list\"\n          :tabindex=\"index + 1\"\n          @click.capture.stop=\"selectTabset(tab.id)\"\n          @keydown=\"handleKeyDown($event, tab.id)\"\n        >\n          <dt-icon\n            size=\"400\"\n            :name=\"tab.icon\"\n          />\n        </dt-tab>\n      </template>\n    </dt-tab-group>\n  </div>\n</template>\n\n<script>\nimport DtTabGroup from '@/components/tabs/tab_group.vue';\nimport DtTab from '@/components/tabs/tab.vue';\nimport DtIcon from '@/components/icon/icon.vue';\nimport { EMOJI_CATEGORIES } from '@/components/emoji_picker/emoji_picker_constants';\n\nexport default {\n  name: 'EmojiTabset',\n\n  components: {\n    DtTabGroup,\n    DtTab,\n    DtIcon,\n  },\n\n  props: {\n    showRecentlyUsedTab: {\n      type: Boolean,\n      default: false,\n    },\n\n    scrollIntoTab: {\n      type: Number,\n      required: true,\n    },\n\n    isScrolling: {\n      type: Boolean,\n      default: false,\n    },\n\n    emojiFilter: {\n      type: String,\n      default: '',\n    },\n\n    tabSetLabels: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      selectedTab: '1',\n      tabsetRef: [],\n      TABS_DATA: [\n        { label: EMOJI_CATEGORIES.MOST_RECENTLY_USED, icon: 'clock' },\n        { label: EMOJI_CATEGORIES.SMILEYS_AND_PEOPLE, icon: 'satisfied' },\n        { label: EMOJI_CATEGORIES.NATURE, icon: 'living-thing' },\n        { label: EMOJI_CATEGORIES.FOOD, icon: 'food' },\n        { label: EMOJI_CATEGORIES.ACTIVITY, icon: 'object' },\n        { label: EMOJI_CATEGORIES.TRAVEL, icon: 'transportation' },\n        { label: EMOJI_CATEGORIES.OBJECTS, icon: 'lightbulb' },\n        { label: EMOJI_CATEGORIES.SYMBOLS, icon: 'heart' },\n        { label: EMOJI_CATEGORIES.FLAGS, icon: 'flag' },\n      ],\n    };\n  },\n\n  computed: {\n    tabs () {\n      const tabsData = this.showRecentlyUsedTab ? this.TABS_DATA : this.TABS_DATA.slice(1);\n      return tabsData.map((tab, index) => ({\n        ...tab,\n        label: this.tabSetLabels[index],\n        id: (index + 1).toString(),\n        panelId: (index + 1).toString(),\n      }));\n    },\n\n    isSearching () {\n      return this.emojiFilter.length > 0;\n    },\n  },\n\n  watch: {\n    scrollIntoTab: function (newVal) {\n      if (!this.isScrolling && !this.isSearching) {\n        this.selectedTab = (newVal + 1).toString();\n      }\n    },\n\n    isSearching: function (newVal) {\n      if (newVal) {\n        this.selectedTab = null;\n      }\n    },\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      this.setTabsetRef();\n    });\n  },\n\n  methods: {\n    selectTabset (id) {\n      if (!this.isScrolling) {\n        this.selectedTab = id;\n      }\n      this.$emit('selected-tabset', id);\n    },\n\n    setTabsetRef () {\n      this.tabs.forEach((skin, index) => {\n        const refKey = `tabsetRef-${index}`;\n        if (this.$refs[refKey]) {\n          this.$set(this.tabsetRef, index, this.$refs[refKey][0].$el);\n        }\n      });\n    },\n\n    focusTabset () {\n      if (this.tabsetRef[0]) {\n        this.tabsetRef[0].focus();\n      }\n    },\n\n    handleKeyDown (event, tabId) {\n      if (event.key === 'Enter') {\n        this.selectTabset(tabId);\n        if (this.tabsetRef[tabId - 1]) {\n          this.tabsetRef[tabId - 1].blur();\n        }\n      }\n\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        this.$emit('focus-search-input');\n      }\n\n      if (event.key === 'ArrowDown') {\n        this.$emit('focus-search-input');\n      }\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"d-emoji-picker__search d-emoji-picker__alignment\">\n    <dt-input\n      id=\"searchInput\"\n      ref=\"searchInputRef\"\n      :placeholder=\"searchPlaceholderLabel\"\n      :value=\"modelValue\"\n      @input=\"updateModelValue\"\n      @keydown.up=\"focusTabset\"\n      @keydown.down.prevent=\"focusEmojiSelector\"\n      @keydown.enter=\"selectFirstEmoji\"\n    >\n      <template #leftIcon>\n        <dt-icon name=\"search\" />\n      </template>\n      <template\n        v-if=\"modelValue.length > 0\"\n        #rightIcon\n      >\n        <button\n          class=\"d-emoji-picker__search-button\"\n          @click=\"clearSearch\"\n          @keydown.enter=\"clearSearch\"\n        >\n          <dt-icon name=\"close\" />\n        </button>\n      </template>\n    </dt-input>\n  </div>\n</template>\n\n<script>\nimport DtInput from '@/components/input/input.vue';\nimport DtIcon from '@/components/icon/icon.vue';\n\nexport default {\n  name: 'EmojiSearch',\n\n  components: {\n    DtInput,\n    DtIcon,\n  },\n\n  props: {\n    searchPlaceholderLabel: {\n      type: String,\n      required: true,\n    },\n\n    modelValue: {\n      type: String,\n      default: '',\n    },\n  },\n\n  mounted () {\n    this.focusSearchInput();\n  },\n\n  methods: {\n    updateModelValue (value) {\n      this.$emit('update:model-value', value);\n    },\n\n    focusEmojiSelector () {\n      this.$emit('focus-emoji-selector');\n    },\n\n    focusTabset () {\n      this.$emit('focus-tabset');\n    },\n\n    selectFirstEmoji () {\n      this.$emit('select-first-emoji');\n    },\n\n    clearSearch () {\n      this.$emit('update:model-value', '');\n      this.focusSearchInput();\n    },\n\n    focusSearchInput () {\n      this.$refs.searchInputRef.focus();\n    },\n  },\n};\n</script>\n","import ActivityDefault from './activity-default.json';\nimport ActivityLight from './activity-light.json';\nimport ActivityMediumLight from './activity-medium-light.json';\nimport ActivityMedium from './activity-medium.json';\nimport ActivityMediumDark from './activity-medium-dark.json';\nimport ActivityDark from './activity-dark.json';\nimport Flags from './flags.json';\nimport Food from './food.json';\nimport Nature from './nature.json';\nimport ObjectsDefault from './objects-default.json';\nimport ObjectsLight from './objects-light.json';\nimport ObjectsMediumLight from './objects-medium-light.json';\nimport ObjectsMedium from './objects-medium.json';\nimport ObjectsMediumDark from './objects-medium-dark.json';\nimport ObjectsDark from './objects-dark.json';\nimport PeopleDefault from './people-default.json';\nimport PeopleLight from './people-light.json';\nimport PeopleMediumLight from './people-medium-light.json';\nimport PeopleMedium from './people-medium.json';\nimport PeopleMediumDark from './people-medium-dark.json';\nimport PeopleDark from './people-dark.json';\nimport Symbols from './symbols.json';\nimport Travel from './travel.json';\n\nexport const emojisGrouped = {\n  ActivityDefault,\n  ActivityLight,\n  ActivityMediumLight,\n  ActivityMedium,\n  ActivityMediumDark,\n  ActivityDark,\n  Flags,\n  Food,\n  Nature,\n  ObjectsDefault,\n  ObjectsLight,\n  ObjectsMediumLight,\n  ObjectsMedium,\n  ObjectsMediumDark,\n  ObjectsDark,\n  PeopleDefault,\n  PeopleLight,\n  PeopleMediumLight,\n  PeopleMedium,\n  PeopleMediumDark,\n  PeopleDark,\n  Symbols,\n  Travel,\n};\n\nexport const emojisIndexed = [].concat(...Object.values(emojisGrouped)).reduce((accumulator, item) => {\n  accumulator[item.unicode_character] = item;\n  return accumulator;\n}, {});\n","<template>\n  <div\n    class=\"d-emoji-picker__selector\"\n  >\n    <div\n      id=\"d-emoji-picker-list\"\n      ref=\"listRef\"\n      class=\"d-emoji-picker__list\"\n    >\n      <p\n        v-if=\"emojiFilter\"\n        class=\"d-emoji-picker__search-label d-emoji-picker__alignment\"\n      >\n        {{ filteredEmojis.length > 0 ? searchResultsLabel : searchNoResultsLabel }}\n      </p>\n      <div\n        v-else\n        ref=\"tabCategoryRef\"\n        class=\"d-emoji-picker__category d-emoji-picker__alignment\"\n      >\n        <p>\n          {{ fixedLabel }}\n        </p>\n      </div>\n      <div\n        v-for=\"(tabLabel, indexTab) in tabLabels\"\n        v-show=\"!emojiFilter\"\n        :key=\"indexTab\"\n        :ref=\"`tabLabelRef-${indexTab}`\"\n        class=\"d-emoji-picker__alignment\"\n      >\n        <p\n          v-if=\"indexTab\"\n        >\n          {{ tabLabel.label }}\n        </p>\n        <div\n          class=\"d-emoji-picker__tab\"\n        >\n          <button\n            v-for=\"(emoji, indexEmoji) in\n            (emojis[tabs[indexTab] + skinTone] ? emojis[tabs[indexTab] + skinTone] : emojis[tabs[indexTab]])\"\n            :key=\"emoji.shortname\"\n            :ref=\"`emojiRef-${indexTab}`\"\n            type=\"button\"\n            :aria-label=\"emoji.name\"\n            @click=\"$emit('selected-emoji', emoji)\"\n            @focusin=\"$emit('highlighted-emoji', emoji)\"\n            @focusout=\"$emit('highlighted-emoji', null)\"\n            @mouseover=\"$emit('highlighted-emoji', emoji)\"\n            @mouseleave=\"$emit('highlighted-emoji', null)\"\n            @keydown=\"event => handleKeyDown(event, indexTab, indexEmoji, emoji)\"\n          >\n            <img\n              class=\"d-icon d-icon--size-500\"\n              :alt=\"emoji.name\"\n              :aria-label=\"emoji.name\"\n              :title=\"emoji.name\"\n              :src=\"getImgSrc(emoji.unicode_character)\"\n              @error=\"handleImageError\"\n            >\n          </button>\n        </div>\n      </div>\n      <div\n        v-if=\"emojiFilter\"\n        class=\"d-emoji-picker__alignment\"\n      >\n        <div\n          class=\"d-emoji-picker__tab \"\n          data-qa=\"filtered-emojis\"\n        >\n          <button\n            v-for=\"(emoji, index) in filteredEmojis\"\n            :key=\"emoji.shortname\"\n            :ref=\"`filteredEmoji-${index}`\"\n            type=\"button\"\n            :aria-label=\"emoji.name\"\n            :class=\"{\n              'hover-emoji': (index === 0 && hoverFirstEmoji),\n            }\"\n            @click=\"$emit('selected-emoji', emoji)\"\n            @focusin=\"$emit('highlighted-emoji', emoji)\"\n            @focusout=\"$emit('highlighted-emoji', null)\"\n            @mouseover=\"hoverEmoji(emoji)\"\n            @mouseleave=\"hoverEmoji(null)\"\n            @keydown=\"event => handleKeyDownFilteredEmojis(event, index, emoji)\"\n          >\n            <img\n              class=\"d-icon d-icon--size-500\"\n              :alt=\"emoji.name\"\n              :aria-label=\"emoji.name\"\n              :title=\"emoji.name\"\n              :src=\"`${CDN_URL + emoji.unicode_character}.png`\"\n            >\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// eslint-disable max-len\nimport { emojisGrouped as emojisImported } from '@/components/emoji_picker/emojis';\nimport { CDN_URL } from '@/components/emoji_picker/emoji_picker_constants';\n\nexport default {\n  name: 'EmojiSelector',\n\n  props: {\n    emojiFilter: {\n      type: String,\n      default: '',\n    },\n\n    skinTone: {\n      type: String,\n      required: true,\n    },\n\n    tabSetLabels: {\n      type: Array,\n      required: true,\n    },\n\n    selectedTabset: {\n      type: Object,\n      required: true,\n    },\n\n    searchResultsLabel: {\n      type: String,\n      required: true,\n    },\n\n    searchNoResultsLabel: {\n      type: String,\n      required: true,\n    },\n\n    recentlyUsedEmojis: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  data () {\n    return {\n      emojiRefs: [],\n      emojiFilteredRefs: [],\n      isFiltering: false,\n      hoverFirstEmoji: true,\n      fixedLabel: '',\n      filteredEmojis: [],\n      TABS_DATA: ['Recently used', 'People', 'Nature', 'Food', 'Activity', 'Travel', 'Objects', 'Symbols', 'Flags'],\n      tabLabelObserver: null,\n    };\n  },\n\n  computed: {\n    currentEmojis () {\n      return [\n        ...this.emojis[`People${this.skinTone}`] || [],\n        ...this.emojis.Nature || [],\n        ...this.emojis.Food || [],\n        ...this.emojis[`Activity${this.skinTone}`] || [],\n        ...this.emojis.Travel || [],\n        ...this.emojis[`Objects${this.skinTone}`] || [],\n        ...this.emojis.Symbols || [],\n        ...this.emojis.Flags || [],\n      ];\n    },\n\n    emojis () {\n      return emojisImported;\n    },\n\n    CDN_URL () {\n      return CDN_URL;\n    },\n\n    tabLabels () {\n      return this.recentlyUsedEmojis.length\n        ? this.tabSetLabels.map((label, index) => ({ label, ref: this.$refs[`tabLabelRef-${index}`] }))\n        : this.tabSetLabels.slice(1).map((label, index) => ({ label, ref: this.$refs[`tabLabelRef-${index}`] }));\n    },\n\n    tabs () {\n      return this.recentlyUsedEmojis.length ? this.TABS_DATA : this.TABS_DATA.slice(1);\n    },\n  },\n\n  watch: {\n    currentEmojis: {\n      handler () {\n        this.searchByNameAndKeywords();\n      },\n\n      immediate: true,\n    },\n\n    recentlyUsedEmojis: {\n      handler (newValue) {\n        this.emojis['Recently used'] = newValue;\n      },\n\n      immediate: true,\n    },\n\n    emojiFilter: {\n      handler (newFilter) {\n        this.resetScroll();\n        if (newFilter) {\n          this.isFiltering = true;\n        } else {\n          this.isFiltering = false;\n          this.$emit('highlighted-emoji', null);\n        }\n\n        this.debouncedSearch();\n      },\n    },\n\n    selectedTabset: {\n      handler (newValue) {\n        this.scrollToTab(newValue.tabId);\n      },\n\n      deep: true,\n    },\n  },\n\n  created () {\n    this.debouncedSearch = this.debounce(this.searchByNameAndKeywords, 300);\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      this.setupEmojiRefs();\n      this.setupFilteredRefs();\n      this.setupTabLabelRefs();\n      this.setTabLabelObserver();\n    });\n  },\n\n  beforeDestroy () {\n    if (this.tabLabelObserver) {\n      this.tabLabelObserver.disconnect();\n    }\n  },\n\n  methods: {\n    setupTabLabelRefs () {\n      this.tabSetLabels?.forEach((label, index) => {\n        const refKey = `tabLabelRef-${index}`;\n        if (this.$refs[refKey]) {\n          this.$set(this.tabLabels, index, { label, ref: this.$refs[refKey] });\n        }\n      });\n    },\n\n    setupFilteredRefs () {\n      this.filteredEmojis.forEach((emoji, index) => {\n        const refKey = `filteredEmoji-${index}`;\n        if (this.$refs[refKey]) {\n          this.setFilteredRef(this.$refs[refKey], index);\n        }\n      });\n    },\n\n    setupEmojiRefs () {\n      for (let i = 0; i < this.tabs.length; i++) {\n        const refKey = `emojiRef-${i}`;\n        if (this.$refs[refKey]) {\n          this.$refs[refKey].forEach((el, indexEmoji) => {\n            if (el) {\n              this.setEmojiRef(el, i, indexEmoji);\n            }\n          });\n        }\n      }\n    },\n\n    searchByNameAndKeywords: function () {\n      const searchStr = this.emojiFilter.toLowerCase();\n      this.filteredEmojis = this.currentEmojis.filter(function (obj) {\n        const nameIncludesSearchStr = obj.name.toLowerCase().includes(searchStr);\n        const keywordsIncludeSearchStr = obj.keywords.some(function (keyword) {\n          return keyword.toLowerCase().includes(searchStr);\n        });\n        return nameIncludesSearchStr || keywordsIncludeSearchStr;\n      });\n      this.$nextTick(function () {\n        if (searchStr) {\n          this.hoverEmoji(this.filteredEmojis[0], true);\n        }\n      });\n    },\n\n    debounce: function (fn, delay) {\n      if (delay === undefined) { delay = 300; }\n      let timeout;\n      return function () {\n        const args = []; let len = arguments.length;\n        while (len--) args[len] = arguments[len];\n\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n          fn.apply(undefined, args);\n        }, delay);\n      };\n    },\n\n    getImgSrc: function (emoji) {\n      return this.CDN_URL + emoji + '.png';\n    },\n\n    handleImageError: function (event) {\n      event.target.parentNode.style.display = 'none';\n    },\n\n    scrollToTab: function (tabIndex, focusFirstEmoji) {\n      const vm = this;\n      if (focusFirstEmoji === undefined) { focusFirstEmoji = true; }\n      const tabLabel = vm.tabLabels[tabIndex - 1];\n      const tabElement = tabLabel.ref[0];\n\n      vm.$nextTick(function () {\n        const container = vm.$refs.listRef;\n        const offsetTop = tabIndex === '1' ? 0 : tabElement.offsetTop - 20;\n\n        let isScrolling = true;\n        let prevScrollTop = container.scrollTop;\n        vm.$emit('is-scrolling', true);\n\n        container.addEventListener('scroll', function () {\n          if (isScrolling) {\n            const scrollTop = container.scrollTop;\n            if (\n              (prevScrollTop < scrollTop && scrollTop >= offsetTop) ||\n            (prevScrollTop > scrollTop && scrollTop <= offsetTop)\n            ) {\n              isScrolling = false;\n              vm.$emit('is-scrolling', false);\n            }\n            prevScrollTop = scrollTop;\n          }\n        });\n\n        container.scrollTop = offsetTop;\n\n        if (focusFirstEmoji) {\n          vm.focusEmoji(tabIndex - 1, 0);\n        }\n      });\n    },\n\n    resetScroll: function () {\n      const container = this.$refs.listRef;\n      container.scrollTop = 0;\n    },\n\n    focusEmojiSelector: function () {\n      this.focusEmoji(0, 0);\n    },\n\n    hoverEmoji: function (emoji, isFirst) {\n      if (isFirst === undefined) { isFirst = false; }\n      this.hoverFirstEmoji = isFirst;\n      this.$emit('highlighted-emoji', emoji);\n    },\n\n    setEmojiRef: function (el, indexTab, indexEmoji) {\n      if (!this.emojiRefs[indexTab]) {\n        this.$set(this.emojiRefs, indexTab, []);\n      }\n      this.$set(this.emojiRefs[indexTab], indexEmoji, el);\n    },\n\n    setFilteredRef: function (el, index) {\n      this.$set(this.emojiFilteredRefs, index, el);\n    },\n\n    focusEmoji: function (indexTab, indexEmoji) {\n      // eslint-disable-next-line max-len\n      const emojiRef = this.isFiltering ? this.emojiFilteredRefs[indexEmoji] : this.emojiRefs[indexTab] && this.emojiRefs[indexTab][indexEmoji];\n\n      if (emojiRef) {\n        emojiRef.focus();\n        return true;\n      }\n\n      return false;\n    },\n\n    handleKeyDown: function (event, indexTab, indexEmoji, emoji) {\n      const EMOJIS_PER_ROW = 9;\n\n      event.preventDefault();\n\n      if (event.key === 'ArrowUp') {\n        const position = indexEmoji % EMOJIS_PER_ROW;\n\n        if (indexTab === 0) {\n          // we are on the first emoji tab, then we should jump to the last row of the last emoji tab\n          const numberOfMissingEmojis =\n        EMOJIS_PER_ROW - (this.emojiRefs[this.emojiRefs.length - 1].length % EMOJIS_PER_ROW);\n\n          const emojiToJump =\n        this.emojiRefs[this.emojiRefs.length - 1].length + numberOfMissingEmojis - (EMOJIS_PER_ROW - position);\n\n          if (!this.focusEmoji(this.emojiRefs.length - 1, emojiToJump)) {\n            // if there is no emoji in this position, jump to the last emoji of the row\n            this.focusEmoji(this.emojiRefs.length - 1, this.emojiRefs[this.emojiRefs.length - 1].length - 1);\n          }\n          return;\n        }\n\n        // if we are not on the first tab, we should jump to the previous row of the current tab\n        if (!this.focusEmoji(indexTab, indexEmoji - EMOJIS_PER_ROW)) {\n          // if there is no previous row, we should jump to emoji in the sampe position of the previous tab\n          const previousTab = indexTab - 1 < 0 ? 0 : indexTab - 1;\n          const emojisInPreviousTab = this.emojiRefs[previousTab].length;\n          const lastEmojiPosition = emojisInPreviousTab - (emojisInPreviousTab % EMOJIS_PER_ROW) + position;\n\n          if (!this.focusEmoji(previousTab, lastEmojiPosition)) {\n            // if there is no emoji in this position, jump to the last emoji of the row\n            this.focusEmoji(indexTab - 1, this.emojiRefs[indexTab - 1].length - 1);\n          }\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        if (!this.focusEmoji(indexTab, indexEmoji + EMOJIS_PER_ROW)) {\n          // if cannot go down\n\n          // Calculate position from cell 0 to cell 8\n          const position = indexEmoji % EMOJIS_PER_ROW;\n\n          // check if it exists a next row in the current tab\n          if (this.emojiRefs?.[indexTab]?.[indexEmoji + (EMOJIS_PER_ROW - position)]) {\n            // if it exists, we should focus the last emoji of the next row in the current tab\n            this.focusEmoji(indexTab, this.emojiRefs[indexTab].length - 1);\n            // if we are at the end of the list it will do nothing\n          } else {\n            // We don't have next row, we are in the last of the tab, then jump\n            // to the next tab but in the equal emoji position in row 0.\n\n            if (!this.focusEmoji(indexTab + 1, position)) {\n              // We are on the bottom!, should jump to the same position emoji in the first row of the first tabset\n              // if it doesn't has, jump to the last\n              if (!this.focusEmoji(0, position)) {\n                this.focusEmoji(0, this.emojiRefs[0].length - 1);\n              }\n            }\n          }\n        }\n      }\n\n      if (event.key === 'ArrowLeft') {\n        this.handleHorizontalNavigation('left', indexTab, indexEmoji);\n      }\n\n      if (event.key === 'ArrowRight') {\n        this.handleHorizontalNavigation('right', indexTab, indexEmoji);\n      }\n\n      if (event.key === 'Tab') {\n        if (this.focusEmoji(indexTab + 1, 0)) {\n          this.scrollToTab((indexTab + 1) + 1, false);\n        } else {\n          // We are on the last emoji tabset, jump to the skin selector\n          this.$emit('focus-skin-selector');\n        }\n      }\n\n      if (event.key === 'Tab' && event.shiftKey) {\n        if (this.focusEmoji(indexTab, 0) && indexTab > 0) {\n          this.scrollToTab(indexTab, true);\n        } else {\n          this.scrollToTab(1, false);\n          this.$emit('focus-search-input');\n        }\n      }\n\n      if (event.key === 'Enter') {\n        this.$emit('selected-emoji', emoji);\n      }\n    },\n\n    handleHorizontalNavigation: function (direction, indexTab, indexEmoji) {\n      if (this.isFiltering) {\n        if (direction === 'left') {\n          this.handleArrowLeftFiltered(indexTab, indexEmoji);\n        } else if (direction === 'right') {\n          this.handleArrowRightFiltered(indexTab, indexEmoji);\n        }\n      } else {\n        if (direction === 'left') {\n          this.handleArrowLeft(indexTab, indexEmoji);\n        } else if (direction === 'right') {\n          this.handleArrowRight(indexTab, indexEmoji);\n        }\n      }\n    },\n\n    handleArrowLeftFiltered: function (indexTab, indexEmoji) {\n      if (!this.focusEmoji(0, indexEmoji - 1)) {\n        this.focusEmoji(0, this.emojiFilteredRefs.length - 1);\n      }\n    },\n\n    handleArrowRightFiltered: function (indexTab, indexEmoji) {\n      if (!this.focusEmoji(0, indexEmoji + 1)) {\n        this.focusEmoji(0, 0);\n      }\n    },\n\n    handleArrowLeft: function (indexTab, indexEmoji) {\n      if (!this.focusEmoji(indexTab, indexEmoji - 1)) {\n        if (this.emojiRefs[indexTab - 1]) {\n          this.focusEmoji(indexTab - 1, this.emojiRefs[indexTab - 1].length - 1);\n        } else {\n          this.focusEmoji(this.emojiRefs.length - 1, this.emojiRefs[this.emojiRefs.length - 1].length - 1);\n        }\n      }\n    },\n\n    handleArrowRight: function (indexTab, indexEmoji) {\n      if (!this.focusEmoji(indexTab, indexEmoji + 1)) {\n        if (!this.focusEmoji(indexTab + 1, 0)) {\n          this.focusEmoji(0, 0);\n        }\n      }\n    },\n\n    handleKeyDownFilteredEmojis: function (event, indexEmoji, emoji) {\n      event.preventDefault();\n      this.hoverFirstEmoji = false;\n\n      if (event.key === 'ArrowUp') {\n        const position = indexEmoji % this.EMOJIS_PER_ROW;\n\n        if (!this.focusEmoji(0, indexEmoji - this.EMOJIS_PER_ROW)) {\n          const lastEmojiPosition =\n        this.emojiFilteredRefs.length - (this.emojiFilteredRefs.length % this.EMOJIS_PER_ROW) + position;\n\n          this.focusEmoji(0, lastEmojiPosition);\n\n          if (!this.focusEmoji(0, lastEmojiPosition)) {\n            this.focusEmoji(0, this.emojiFilteredRefs.length - 1);\n          }\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        if (!this.focusEmoji(0, indexEmoji + this.EMOJIS_PER_ROW)) {\n          const position = indexEmoji % this.EMOJIS_PER_ROW;\n\n          if (this.emojiFilteredRefs?.[indexEmoji + (this.EMOJIS_PER_ROW - position)]) {\n            this.focusEmoji(0, this.emojiFilteredRefs.length - 1);\n          } else {\n            this.focusEmoji(0, position);\n          }\n        }\n      }\n\n      if (event.key === 'ArrowLeft') {\n        this.handleHorizontalNavigation('left', 0, indexEmoji);\n      }\n\n      if (event.key === 'ArrowRight') {\n        this.handleHorizontalNavigation('right', 0, indexEmoji);\n      }\n\n      if (event.key === 'Tab') {\n        this.$emit('focus-skin-selector');\n      }\n\n      if (event.key === 'Enter') {\n        this.$emit('selected-emoji', emoji);\n      }\n    },\n\n    setTabLabelObserver () {\n      this.tabLabelObserver = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          const { target } = entry;\n          const index = parseInt(target.dataset.index);\n\n          if (entry.isIntersecting && target.offsetTop <= this.$refs.tabCategoryRef?.offsetTop + 50) {\n            this.fixedLabel = this.tabLabels[index - 1]?.label ?? this.tabLabels[0]?.label;\n            this.$emit('scroll-into-tab', index - 1);\n          } else if (entry.boundingClientRect.bottom <= this.$refs.tabCategoryRef?.getBoundingClientRect().bottom) {\n            this.$emit('scroll-into-tab', index);\n            this.fixedLabel = this.tabLabels[index]?.label;\n          } else if (index === 1) {\n            this.$emit('scroll-into-tab', index);\n            this.fixedLabel = this.tabLabels[0]?.label;\n          }\n        });\n      });\n\n      this.tabLabelObserver.observe(this.$refs.tabCategoryRef);\n\n      Array.from(this.$refs.listRef.children).forEach((child, index) => {\n        this.tabLabelObserver.observe(child);\n        child.dataset.index = index;\n      });\n    },\n\n  },\n\n};\n</script>\n","<template>\n  <div class=\"d-emoji-picker__data\">\n    <img\n      v-if=\"emoji\"\n      class=\"d-icon d-icon--size-500\"\n      :alt=\"emoji.name\"\n      :aria-label=\"emoji.name\"\n      :title=\"emoji.name\"\n      :src=\"`${cdnUrl + emoji.unicode_character}.png`\"\n    >\n    {{ emoji ? emoji.name : '' }}\n  </div>\n</template>\n\n<script>\nimport { CDN_URL } from '@/components/emoji_picker/emoji_picker_constants';\n\nexport default {\n  name: 'EmojiDescription',\n\n  props: {\n    /**\n     * Emoji data\n     * @type {Object}\n     * @default null\n     */\n    emoji: {\n      type: Object,\n      default: () => null,\n    },\n  },\n\n  computed: {\n    cdnUrl () {\n      return CDN_URL;\n    },\n  },\n};\n</script>\n","<template>\n  <div data-qa=\"skin-selector\">\n    <div\n      v-show=\"isOpen\"\n      class=\"d-emoji-picker__skin-list\"\n    >\n      <button\n        v-for=\"(skin, index) in skinList\"\n        :key=\"skin.name\"\n        :ref=\"`skinRef-${index}`\"\n        :class=\"{\n          'selected': skinSelected?.skinCode === skin.skinCode,\n        }\"\n        @click=\"selectSkin(skin)\"\n        @keydown=\"event => handleKeyDown(event, skin, index)\"\n      >\n        <img\n          class=\"d-icon d-icon--size-500\"\n          :alt=\"skin.name\"\n          :aria-label=\"skin.name\"\n          :title=\"skin.name\"\n          :src=\"`${cdnUrl + skin.unicode_output}.png`\"\n        >\n      </button>\n    </div>\n    <div\n      v-show=\"!isOpen\"\n      class=\"d-emoji-picker__skin-selected\"\n    >\n      <!--      <dt-tooltip placement=\"top-end\"> -->\n      <!--      {{ // skinSelectorButtonTooltipLabel }} -->\n      <!--        <template #anchor> -->\n      <button\n        ref=\"skinSelectorRef\"\n        :aria-label=\"skinSelectorButtonTooltipLabel\"\n        tabindex=\"-1\"\n        @click=\"toggleSkinList\"\n        @keydown=\"event => handleKeyDown(event)\"\n      >\n        <img\n          class=\"d-icon d-icon--size-500\"\n          :alt=\"skinSelected?.name\"\n          :aria-label=\"skinSelected?.name\"\n          :title=\"skinSelected?.name\"\n          :src=\"`${cdnUrl + skinSelected?.unicode_output}.png`\"\n        >\n      </button>\n      <!--        </template> -->\n      <!--      </dt-tooltip> -->\n    </div>\n  </div>\n</template>\n\n<script>\n// import DtTooltip from '@/components/tooltip/tooltip.vue';\nimport { CDN_URL, EMOJI_SKIN_TONE_MODIFIERS } from '@/components/emoji_picker/emoji_picker_constants';\n\nexport default {\n  name: 'EmojiSkinSelector',\n\n  components: {\n    // DtTooltip,\n  },\n\n  props: {\n    skinTone: {\n      type: String,\n      required: true,\n    },\n\n    isHovering: {\n      type: Boolean,\n      default: false,\n    },\n\n    skinSelectorButtonTooltipLabel: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      isOpen: false,\n      skinSelected: null,\n      skinsRef: [],\n      cdnUrl: CDN_URL,\n    };\n  },\n\n  computed: {\n    skinPassedIn () {\n      return this.skinList.find(skin => skin.skinTone === this.skinTone);\n    },\n\n    skinList () {\n      return [\n        {\n          name: ':wave_tone1:',\n          unicode_output: '1f44b-1f3fb',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.LIGHT,\n          skinCode: '_tone1',\n        },\n        {\n          name: ':wave_tone2:',\n          unicode_output: '1f44b-1f3fc',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.MEDIUM_LIGHT,\n          skinCode: '_tone2',\n        },\n        {\n          name: ':wave_tone3:',\n          unicode_output: '1f44b-1f3fd',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.MEDIUM,\n          skinCode: '_tone3',\n        },\n        {\n          name: ':wave_tone4:',\n          unicode_output: '1f44b-1f3fe',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.MEDIUM_DARK,\n          skinCode: '_tone4',\n        },\n        {\n          name: ':wave_tone5:',\n          unicode_output: '1f44b-1f3ff',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.DARK,\n          skinCode: '_tone5',\n        },\n        {\n          name: ':wave:',\n          unicode_output: '1f44b',\n          skinTone: EMOJI_SKIN_TONE_MODIFIERS.DEFAULT,\n          skinCode: '',\n        },\n      ];\n    },\n  },\n\n  watch: {\n    isHovering (newVal) {\n      if (newVal) {\n        this.isOpen = false;\n      }\n    },\n\n    skinTone (newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.skinSelected = this.skinPassedIn;\n      }\n    },\n  },\n\n  mounted () {\n    this.skinSelected = this.skinPassedIn;\n    this.$nextTick(() => {\n      this.setupSkinRefs();\n    });\n  },\n\n  methods: {\n    setupSkinRefs () {\n      this.skinList.forEach((skin, index) => {\n        const refKey = `skinRef-${index}`;\n        if (this.$refs[refKey]) {\n          this.$set(this.skinsRef, index, this.$refs[refKey][0]);\n        }\n      });\n    },\n\n    focusSkinSelector () {\n      if (this.$refs.skinSelectorRef) {\n        this.$refs.skinSelectorRef.focus();\n      }\n    },\n\n    selectSkin (skin) {\n      this.skinSelected = skin;\n      this.isOpen = false;\n      this.$emit('skin-tone', skin.skinTone);\n      this.$nextTick(() => {\n        this.focusSkinSelector();\n      });\n    },\n\n    handleKeyDown (event, skin, index) {\n      event.preventDefault();\n\n      if (event.key === 'ArrowLeft') {\n        if (index === 0) this.skinsRef[this.skinsRef.length - 1]?.focus();\n        this.skinsRef[index - 1]?.focus();\n      }\n\n      if (event.key === 'ArrowRight') {\n        if (this.skinsRef.length) this.skinsRef[0]?.focus();\n        this.skinsRef[index + 1]?.focus();\n      }\n\n      if (event.key === 'Enter') {\n        if (skin) { this.selectSkin(skin); } else {\n          this.toggleSkinList();\n        }\n      }\n\n      if (event.key === 'Tab') {\n        this.$emit('focus-tabset');\n      }\n    },\n\n    toggleSkinList () {\n      this.isOpen = !this.isOpen;\n      this.$nextTick(() => {\n        if (this.skinsRef[0]) {\n          this.skinsRef[0].focus();\n        }\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    class=\"d-emoji-picker\"\n  >\n    <div class=\"d-emoji-picker--header\">\n      <emoji-tabset\n        ref=\"tabsetRef\"\n        :emoji-filter=\"searchQuery\"\n        :show-recently-used-tab=\"showRecentlyUsedTab\"\n        :scroll-into-tab=\"scrollIntoTab\"\n        :tab-set-labels=\"tabSetLabels\"\n        :is-scrolling=\"isScrolling\"\n        @focus-search-input=\"$refs.searchInputRef.focusSearchInput()\"\n        @selected-tabset=\"scrollToSelectedTabset\"\n        @keydown.esc.native=\"$emit('close')\"\n      />\n    </div>\n    <div class=\"d-emoji-picker--body\">\n      <emoji-search\n        ref=\"searchInputRef\"\n        :model-value=\"searchQuery\"\n        :search-placeholder-label=\"searchPlaceholderLabel\"\n        @update:model-value=\"newValue => searchQuery = newValue\"\n        @select-first-emoji=\"$emit('selected-emoji', highlightedEmoji)\"\n        @focus-tabset=\"$refs.tabsetRef.focusTabset()\"\n        @focus-emoji-selector=\"$refs.emojiSelectorRef.focusEmojiSelector()\"\n        @keydown.esc.native=\"$emit('close')\"\n      />\n      <emoji-selector\n        ref=\"emojiSelectorRef\"\n        :emoji-filter=\"searchQuery\"\n        :skin-tone=\"skinTone\"\n        :tab-set-labels=\"tabSetLabels\"\n        :search-results-label=\"searchResultsLabel\"\n        :search-no-results-label=\"searchNoResultsLabel\"\n        :recently-used-emojis=\"recentlyUsedEmojis\"\n        :selected-tabset=\"selectedTabset\"\n        @scroll-into-tab=\"updateScrollIntoTab\"\n        @is-scrolling=\"updateIsScrolling\"\n        @highlighted-emoji=\"updateHighlightedEmoji\"\n        @selected-emoji=\"$emit('selected-emoji', $event)\"\n        @focus-skin-selector=\"$refs.skinSelectorRef.focusSkinSelector()\"\n        @focus-search-input=\"$refs.searchInputRef.focusSearchInput()\"\n        @keydown.esc.native=\"$emit('close')\"\n      />\n    </div>\n    <div class=\"d-emoji-picker--footer\">\n      <emoji-description :emoji=\"highlightedEmoji\" />\n      <emoji-skin-selector\n        ref=\"skinSelectorRef\"\n        :is-hovering=\"!!highlightedEmoji\"\n        :skin-selector-button-tooltip-label=\"skinSelectorButtonTooltipLabel\"\n        :skin-tone=\"skinTone\"\n        @skin-tone=\"$emit('skin-tone', $event)\"\n        @focus-tabset=\"$refs.tabsetRef.focusTabset()\"\n        @keydown.esc.native=\"$emit('close')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport EmojiTabset from './modules/emoji_tabset.vue';\nimport EmojiSearch from './modules/emoji_search.vue';\nimport EmojiSelector from './modules/emoji_selector.vue';\nimport EmojiDescription from './modules/emoji_description.vue';\nimport EmojiSkinSelector from './modules/emoji_skin_selector.vue';\n\nexport default {\n  name: 'DtEmojiPicker',\n\n  components: {\n    EmojiTabset,\n    EmojiSearch,\n    EmojiSelector,\n    EmojiDescription,\n    EmojiSkinSelector,\n  },\n\n  props: {\n    recentlyUsedEmojis: {\n      type: Array,\n    },\n\n    searchPlaceholderLabel: {\n      type: String,\n      required: true,\n    },\n\n    searchResultsLabel: {\n      type: String,\n      required: true,\n    },\n\n    searchNoResultsLabel: {\n      type: String,\n      required: true,\n    },\n\n    tabSetLabels: {\n      type: Array,\n      required: true,\n    },\n\n    skinTone: {\n      type: String,\n    },\n\n    skinSelectorButtonTooltipLabel: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      searchQuery: '',\n      highlightedEmoji: null,\n      selectedTabset: {},\n      scrollIntoTab: 0,\n      isScrolling: false,\n    };\n  },\n\n  computed: {\n    showRecentlyUsedTab () {\n      return this.recentlyUsedEmojis.length > 0;\n    },\n  },\n\n  methods: {\n    scrollToSelectedTabset (tabId) {\n      this.searchQuery = '';\n      this.selectedTabset = { ...this.selectedTabset, tabId };\n    },\n\n    updateScrollIntoTab (value) {\n      this.scrollIntoTab = value;\n    },\n\n    updateIsScrolling (value) {\n      this.isScrolling = value;\n    },\n\n    updateHighlightedEmoji (emoji) {\n      this.highlightedEmoji = emoji;\n    },\n  },\n};\n</script>\n","<template>\n  <dt-emoji-picker\n    :skin-tone.sync=\"isSkinTone\"\n    :skin-selector-button-tooltip-label=\"$attrs.skinSelectorButtonTooltipLabel\"\n    :tab-set-labels=\"$attrs.tabSetLabels\"\n    :recently-used-emojis=\"$attrs.recentlyUsedEmojis\"\n    :search-results-label=\"$attrs.searchResultsLabel\"\n    :search-no-results-label=\"$attrs.searchNoResultsLabel\"\n    :search-placeholder-label=\"$attrs.searchPlaceholderLabel\"\n    @skin-tone=\"isSkinTone = $event;\"\n  />\n</template>\n\n<script>\nimport DtEmojiPicker from './emoji_picker.vue';\n\nexport default {\n  name: 'DtEmojiPickerDefaultTemplate',\n\n  components: {\n    DtEmojiPicker,\n  },\n\n  data () {\n    return {\n      isSkinTone: this.$attrs.skinTone,\n    };\n  },\n\n  watch: {\n    skinTone (value) {\n      this.isSkinTone = value;\n    },\n  },\n};\n</script>\n","<template>\n  <dt-popover\n    :open=\"emojiPickerOpened\"\n    initial-focus-element=\"#searchInput\"\n    padding=\"none\"\n    @opened=\"(open) => { emojiPickerOpened = open }\"\n  >\n    <template #anchor>\n      <dt-button\n        size=\"sm\"\n        circle\n        importance=\"clear\"\n        @click=\"toggleEmojiPicker\"\n      >\n        <template #icon>\n          <dt-icon\n            name=\"satisfied\"\n            size=\"300\"\n          />\n        </template>\n      </dt-button>\n    </template>\n    <template #content>\n      <dt-emoji-picker\n        ref=\"emojiPickerRef\"\n        :skin-tone=\"isSkinTone\"\n        :skin-selector-button-tooltip-label=\"$attrs.skinSelectorButtonTooltipLabel\"\n        :tab-set-labels=\"$attrs.tabSetLabels\"\n        :recently-used-emojis=\"$attrs.recentlyUsedEmojis\"\n        :search-results-label=\"$attrs.searchResultsLabel\"\n        :search-no-results-label=\"$attrs.searchNoResultsLabel\"\n        :search-placeholder-label=\"$attrs.searchPlaceholderLabel\"\n        @skin-tone=\"isSkinTone = $event\"\n        @selected-emoji=\"$attrs.selectedEmoji\"\n      />\n    </template>\n  </dt-popover>\n</template>\n\n<script>\nimport DtEmojiPicker from './emoji_picker.vue';\nimport DtButton from '@/components/button/button.vue';\nimport DtIcon from '@/components/icon/icon.vue';\nimport DtPopover from '@/components/popover/popover.vue';\n\nexport default {\n  name: 'DtEmojiPickerDefaultTemplate',\n\n  components: {\n    DtEmojiPicker,\n    DtButton,\n    DtIcon,\n    DtPopover,\n  },\n\n  data () {\n    return {\n      isSkinTone: this.$attrs.skinTone,\n      emojiPickerOpened: true,\n    };\n  },\n\n  watch: {\n    skinTone (value) {\n      this.isSkinTone = value;\n    },\n  },\n\n  methods: {\n    toggleEmojiPicker: function () {\n      this.emojiPickerOpened = !this.emojiPickerOpened;\n    },\n  },\n};\n</script>\n"],"names":["CDN_URL","EMOJI_SKIN_TONE_MODIFIERS","EMOJI_CATEGORIES","_sfc_main","DtTabGroup","DtTab","DtIcon","tab","index","newVal","id","skin","refKey","event","tabId","DtInput","value","emojisGrouped","ActivityDefault","ActivityLight","ActivityMediumLight","ActivityMedium","ActivityMediumDark","ActivityDark","Flags","Food","Nature","ObjectsDefault","ObjectsLight","ObjectsMediumLight","ObjectsMedium","ObjectsMediumDark","ObjectsDark","PeopleDefault","PeopleLight","PeopleMediumLight","PeopleMedium","PeopleMediumDark","PeopleDark","Symbols","Travel","accumulator","item","emojisImported","label","newValue","newFilter","_a","emoji","i","el","indexEmoji","searchStr","obj","nameIncludesSearchStr","keywordsIncludeSearchStr","keyword","fn","delay","timeout","args","len","tabIndex","focusFirstEmoji","vm","tabElement","container","offsetTop","isScrolling","prevScrollTop","scrollTop","isFirst","indexTab","emojiRef","position","numberOfMissingEmojis","emojiToJump","previousTab","emojisInPreviousTab","lastEmojiPosition","_b","direction","entries","entry","target","_c","_d","_e","_f","child","oldVal","EmojiTabset","EmojiSearch","EmojiSelector","EmojiDescription","EmojiSkinSelector","DtEmojiPicker","DtButton","DtPopover"],"mappings":"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"}