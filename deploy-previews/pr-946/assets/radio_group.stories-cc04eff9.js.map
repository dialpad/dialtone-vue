{"version":3,"file":"radio_group.stories-cc04eff9.js","sources":["../../components/radio_group/radio_group.vue","../../components/radio_group/radio_group_default.story.vue","../../components/radio_group/radios_decorator.vue","../../components/radio_group/radio_group_variants.story.vue"],"sourcesContent":["<script>\nimport { DtInputGroup } from '../input_group';\n\n/**\n * Radio Groups are control elements that allow the user to make a single selection from a list of options.\n * @see https://dialpad.design/components/radio_group.html\n */\nexport default {\n  name: 'DtRadioGroup',\n\n  extends: DtInputGroup,\n\n  props: {\n    /**\n     * A provided value for the radio group\n     * @model value\n     */\n    value: {\n      type: [String, Number],\n      default: '',\n    },\n\n    /**\n     * A data qa tag for the radio group\n     */\n    dataQaGroup: {\n      type: String,\n      default: 'radio-group',\n    },\n\n    /**\n     * A data qa tag for the radio group legend\n     */\n    dataQaGroupLegend: {\n      type: String,\n      default: 'radio-group-legend',\n    },\n\n    /**\n     * A data qa tag for the radio group messages\n     */\n    dataQaGroupMessages: {\n      type: String,\n      default: 'radio-group-messages',\n    },\n  },\n\n  emits: [\n    /**\n     * Native input event\n     *\n     * @event input\n     * @type {String | Number}\n     */\n    'input',\n  ],\n\n  data () {\n    return {\n      // wrap values in object to make reactive\n      provideObj: {\n        selectedValue: this.value,\n      },\n    };\n  },\n\n  watch: {\n    /*\n     * watching value to support 2 way binding for slotted radios.\n     * need this to pass value to slotted radios if modified outside\n     * radio group.\n     */\n    value (newValue) {\n      this.provideObj.selectedValue = newValue;\n    },\n  },\n\n  methods: {\n    /*\n     * provided value to support 2 way binding for slotted radios.\n     * slotted radios will change this value and need to emit new value up.\n     */\n    setGroupValue (newValue) {\n      this.$emit('input', newValue);\n    },\n\n    getMessageKey (type, index) {\n      return `radio-group-message-${type}-${index}-${this.id}`;\n    },\n  },\n};\n</script>\n","<template>\n  <dt-radio-group\n    :id=\"id\"\n    :name=\"name\"\n    :legend=\"legend\"\n    :value=\"value\"\n    :disabled=\"disabled\"\n    :messages=\"messages\"\n    :show-messages=\"showMessages\"\n    :legend-class=\"legendClass\"\n    :messages-class=\"messagesClass\"\n    :legend-child-props=\"legendChildProps\"\n    :messages-child-props=\"messagesChildProps\"\n    @input=\"onInput\"\n  >\n    <slot>\n      <dt-radio\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        :value=\"option.value\"\n      >\n        <span>{{ option.label }}</span>\n      </dt-radio>\n    </slot>\n    <template\n      v-if=\"legendSlot\"\n      slot=\"legend\"\n    >\n      <span v-html=\"legendSlot\" />\n    </template>\n  </dt-radio-group>\n</template>\n\n<script>\nimport { DtRadio } from '../radio';\nimport DtRadioGroup from './radio_group.vue';\n\nexport default {\n  name: 'RadioGroupDefault',\n  components: { DtRadio, DtRadioGroup },\n};\n</script>\n","<template>\n  <div>\n    <dt-radio\n      v-for=\"option in options\"\n      :key=\"option.value\"\n      :value=\"option.value\"\n    >\n      <span>{{ option.label }}</span>\n    </dt-radio>\n  </div>\n</template>\n\n<script>\nimport { DtRadio } from '../radio';\n\nexport default {\n  name: 'RadiosDecorator',\n  components: { DtRadio },\n  created () {\n    this.options = [\n      { label: 'Apple', value: 'apple' },\n      { label: 'Banana', value: 'banana' },\n      { label: 'Other', value: 'other' },\n    ];\n  },\n};\n</script>\n","<template>\n  <div id=\"components-radio-group--variants-container\">\n    <!-- Default -->\n    <dt-radio-group\n      name=\"radio-group-default\"\n      aria-label=\"default\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- Default -->\n\n    <!-- With Legend -->\n    <dt-radio-group\n      name=\"radio-group-with-legend\"\n      legend=\"With Legend\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Legend -->\n\n    <!-- With Slotted Legend -->\n    <dt-radio-group name=\"radio-group-with-slotted-legend\">\n      <radios-decorator />\n      <template slot=\"legend\">\n        With Slotted Legend\n      </template>\n    </dt-radio-group>\n    <!-- With Slotted Legend -->\n\n    <!-- With Value -->\n    <dt-radio-group\n      name=\"radio-group-with-value\"\n      legend=\"With Value\"\n      value=\"banana\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Value -->\n\n    <!-- Disabled -->\n    <dt-radio-group\n      name=\"radio-group-disabled\"\n      legend=\"Disabled\"\n      disabled\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- Disabled -->\n\n    <!-- With Success Message -->\n    <dt-radio-group\n      name=\"radio-group-with-success-message\"\n      legend=\"With Success Message\"\n      :messages=\"[{ message: 'Success', type: VALIDATION_MESSAGE_TYPES.SUCCESS }]\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Success Message -->\n\n    <!-- With Warning Message -->\n    <dt-radio-group\n      name=\"radio-group-with-warning-message\"\n      legend=\"With Warning Message\"\n      :messages=\"[{ message: 'Warning', type: VALIDATION_MESSAGE_TYPES.WARNING }]\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Warning Message -->\n\n    <!-- With Error Message -->\n    <dt-radio-group\n      name=\"radio-group-with-error-message\"\n      legend=\"With Error Message\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Error Message -->\n\n    <!-- With Error Messages Hidden -->\n    <dt-radio-group\n      name=\"radio-group-with-error-messages-hidden\"\n      legend=\"With Error Messages Hidden\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n      :show-messages=\"false\"\n    >\n      <radios-decorator />\n    </dt-radio-group>\n    <!-- With Error Messages Hidden -->\n  </div>\n</template>\n\n<script>\nimport { VALIDATION_MESSAGE_TYPES } from '@/common/constants';\nimport RadiosDecorator from './radios_decorator.vue';\nimport DtRadioGroup from './radio_group.vue';\n\nexport default {\n  name: 'RadioGroupVariants',\n  components: { RadiosDecorator, DtRadioGroup },\n  created () {\n    this.VALIDATION_MESSAGE_TYPES = VALIDATION_MESSAGE_TYPES;\n  },\n};\n</script>\n"],"names":["_sfc_main","DtInputGroup","newValue","type","index","DtRadio","DtRadioGroup","RadiosDecorator","VALIDATION_MESSAGE_TYPES"],"mappings":"0MAOA,MAAAA,EAAA,CACA,KAAA,eAEA,QAAAC,EAEA,MAAA,CAKA,MAAA,CACA,KAAA,CAAA,OAAA,MAAA,EACA,QAAA,EACA,EAKA,YAAA,CACA,KAAA,OACA,QAAA,aACA,EAKA,kBAAA,CACA,KAAA,OACA,QAAA,oBACA,EAKA,oBAAA,CACA,KAAA,OACA,QAAA,sBACA,CACA,EAEA,MAAA,CAOA,OACA,EAEA,MAAA,CACA,MAAA,CAEA,WAAA,CACA,cAAA,KAAA,KACA,CACA,CACA,EAEA,MAAA,CAMA,MAAAC,EAAA,CACA,KAAA,WAAA,cAAAA,CACA,CACA,EAEA,QAAA,CAKA,cAAAA,EAAA,CACA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,cAAAC,EAAAC,EAAA,CACA,MAAA,uBAAAD,KAAAC,KAAA,KAAA,IACA,CACA,CACA,69CCrDA,MAAAJ,EAAA,CACA,KAAA,oBACA,WAAA,CAAA,QAAAK,EAAA,aAAAC,CAAA,CACA,2iCCzBA,MAAAN,EAAA,CACA,KAAA,kBACA,WAAA,CAAA,QAAAK,CAAA,EACA,SAAA,CACA,KAAA,QAAA,CACA,CAAA,MAAA,QAAA,MAAA,OAAA,EACA,CAAA,MAAA,SAAA,MAAA,QAAA,EACA,CAAA,MAAA,QAAA,MAAA,OAAA,CACA,CACA,CACA,4jBCwEA,MAAAL,EAAA,CACA,KAAA,qBACA,WAAA,CAAA,gBAAAO,EAAA,aAAAD,CAAA,EACA,SAAA,CACA,KAAA,yBAAAE,CACA,CACA;;;;;;;;;;;;;;;;;;;"}