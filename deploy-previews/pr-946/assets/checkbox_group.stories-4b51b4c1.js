import{a as G}from"./chunk-OPEUWD42-0dc0813d.js";import{n,V as C,c as f}from"./_plugin-vue2_normalizer-bbedbd26.js";import{V as D}from"./vue.esm-eff6e72e.js";import{D as w}from"./input_group-afc5871d.js";import{D as x}from"./checkbox-e272f476.js";const A={name:"DtCheckboxGroup",extends:w,model:{prop:"selectedValues"},props:{value:{type:[],default:null,validator:o=>o?(D.util.warn("Component uses selectedValues to initialize the model, value is not supported by this component",globalThis),!1):!0},selectedValues:{type:Array,default(){return[]}},dataQaGroup:{type:String,default:"checkbox-group"},dataQaGroupLegend:{type:String,default:"checkbox-group-legend"},dataQaGroupMessages:{type:String,default:"checkbox-group-messages"}},emits:["input"],data(){return{internalValue:this.selectedValues,provideObj:{selectedValues:this.selectedValues}}},watch:{selectedValues(o){this.internalValue=o},internalValue(o){this.provideObj.selectedValues=o}},methods:{setGroupValue(o,e){e?this.internalValue.includes(o)||this.internalValue.push(o):this.internalValue=this.internalValue.filter(t=>t!==o),this.$emit("input",this.internalValue)},getMessageKey(o,e){return`checkbox-group-message-${o}-${e}-${this.id}`}}},E=null,T=null;var l=n(A,E,T,!1,null,null,null,null);l.options.__file="/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group.vue";const c=l.exports;l.exports.__docgenInfo={displayName:"DtCheckboxGroup",description:"Checkbox Groups are convenience components for a grouping of related Checkboxes.\nWhile each Checkbox within the group is independent, the `v-model` on the group provides\na convenient interface for determining which Checkboxes within the group are checked.",tags:{see:[{description:"https://dialpad.design/components/checkbox_group.html",title:"see"}]},exportName:"default",props:[{name:"dataQaGroup",description:"A data qa tag for the radio group",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group'"}},{name:"dataQaGroupLegend",description:"A data qa tag for the radio group legend",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group-legend'"}},{name:"dataQaGroupMessages",description:"A data qa tag for the radio group messages",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group-messages'"}},{name:"value",description:"Not supported by this component, please use selectedValues",type:{name:""},defaultValue:{func:!1,value:"null"}},{name:"v-model",description:"A provided list of selected values(s) for the checkbox group",tags:{model:[{description:"selectedValues",title:"model"}]},type:{name:"array"},defaultValue:{func:!1,value:"[]"}}],events:[{name:"input",description:"Native input event",type:{names:["Array"]}}],slots:[{name:"legend",description:"slot for Input Group Legend"},{name:"default",description:"slot for Input Group Components"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group.vue","/home/runner/work/dialtone-vue/dialtone-vue/components/input_group/input_group.vue"]};const I={name:"CheckboxGroupDefault",components:{DtCheckbox:x,DtCheckboxGroup:c}};var k=function(){var e=this,t=e._self._c;return t("dt-checkbox-group",{attrs:{id:e.id,name:e.name,legend:e.legend,"selected-values":e.selectedValues,disabled:e.disabled,messages:e.messages,"show-messages":e.showMessages,"legend-class":e.legendClass,"messages-class":e.messagesClass,"legend-child-props":e.legendChildProps,"messages-child-props":e.messagesChildProps},on:{input:e.onInput}},[e._t("default",function(){return e._l(e.options,function(a){return t("dt-checkbox",{key:a.value,attrs:{value:a.value}},[t("span",[e._v(e._s(a.label))])])})}),e.legendSlot?t("template",{slot:"legend"},[t("span",{domProps:{innerHTML:e._s(e.legendSlot)}})]):e._e()],2)},N=[];k._withStripped=!0;var u=n(I,k,N,!1,null,null,null,null);u.options.__file="/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_default.story.vue";const O=u.exports;u.exports.__docgenInfo={displayName:"CheckboxGroupDefault",exportName:"default",description:"",tags:{},slots:[{name:"default"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_default.story.vue"]};const M={name:"CheckboxesDecorator",components:{DtCheckbox:x},created(){this.options=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Other",value:"other"}]}};var v=function(){var e=this,t=e._self._c;return t("div",e._l(e.options,function(a){return t("dt-checkbox",{key:a.value,attrs:{value:a.value}},[t("span",[e._v(e._s(a.label))])])}),1)},$=[];v._withStripped=!0;var d=n(M,v,$,!1,null,null,null,null);d.options.__file="/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkboxes_decorator.vue";const P=d.exports;d.exports.__docgenInfo={displayName:"CheckboxesDecorator",exportName:"default",description:"",tags:{},sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkboxes_decorator.vue"]};const L={name:"CheckboxGroupVariants",components:{DtCheckboxesDecorator:P,DtCheckboxGroup:c},created(){this.VALIDATION_MESSAGE_TYPES=C}};var y=function(){var e=this,t=e._self._c;return t("div",{attrs:{id:"components-checkbox-group--variants-container"}},[t("dt-checkbox-group",{attrs:{name:"checkbox-group-default","aria-label":"default"}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-legend",legend:"With Legend"}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-slotted-legend"}},[t("dt-checkboxes-decorator"),t("template",{slot:"legend"},[e._v(" With Slotted Legend ")])],2),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-selected-values",legend:"With Selected Values","selected-values":["apple","other"]}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-disabled",legend:"Disabled",disabled:""}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-success-message",legend:"With Success Message",messages:[{message:"Success",type:e.VALIDATION_MESSAGE_TYPES.SUCCESS}]}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-warning-message",legend:"With Warning Message",messages:[{message:"Warning",type:e.VALIDATION_MESSAGE_TYPES.WARNING}]}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-error-message",legend:"With Error Message",messages:[{message:"Error",type:e.VALIDATION_MESSAGE_TYPES.ERROR}]}},[t("dt-checkboxes-decorator")],1),t("dt-checkbox-group",{attrs:{name:"checkbox-group-with-error-messages-hidden",legend:"With Error Messages Hidden",messages:[{message:"Error",type:e.VALIDATION_MESSAGE_TYPES.ERROR}],"show-messages":!1}},[t("dt-checkboxes-decorator")],1)],1)},R=[];y._withStripped=!0;var p=n(L,y,R,!1,null,null,null,null);p.options.__file="/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_variants.story.vue";const F=p.exports;p.exports.__docgenInfo={displayName:"CheckboxGroupVariants",exportName:"default",description:"",tags:{},sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_variants.story.vue"]};const W=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Other",value:"other"}],V={name:"fruits-checkbox-group",legend:"Fruits",selectedValues:[],options:W,onInput:G("input")},S={default:{control:"text",table:{type:{summary:"VNode"}}},legendSlot:{name:"legend",description:"Slot for legend",control:"text",table:{category:"slots",type:{summary:"VNode"}}},legend:{description:"The legend of the checkbox group",table:{category:"props",type:{summary:"string"}},control:{type:"text"}},selectedValues:{description:"A provided list of selected values(s) for the checkbox group",control:"array",table:{category:"props",type:{summary:"array"}}},id:{table:{defaultValue:{summary:"generated unique ID"}}},"v-model":{description:"Supported by this component",control:null,table:{category:"directives"}},onInput:{table:{disable:!0}},options:{table:{disable:!0}},value:{table:{disable:!0}},dataQaGroup:{table:{disable:!0}},dataQaGroupLegend:{table:{disable:!0}},dataQaGroupMessages:{table:{disable:!0}}},Q={title:"Components/Checkbox Group",component:c,args:V,argTypes:S,excludeStories:/.*Data$/},Y=(o,{argTypes:e})=>f(o,e,O),j=(o,{argTypes:e})=>f(o,e,F),s={render:Y,args:{}},r={render:j,args:{},parameters:{options:{showPanel:!1},a11y:{config:{rules:[{id:"color-contrast",enabled:!1}]}}}};var i,g,h;s.parameters={...s.parameters,docs:{...(i=s.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: DefaultTemplate,
  args: {}
}`,...(h=(g=s.parameters)==null?void 0:g.docs)==null?void 0:h.source}}};var m,_,b;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: VariantsTemplate,
  args: {},
  parameters: {
    options: {
      showPanel: false
    },
    a11y: {
      config: {
        rules: [{
          id: 'color-contrast',
          enabled: false
        }]
      }
    }
  }
}`,...(b=(_=r.parameters)==null?void 0:_.docs)==null?void 0:b.source}}};const q=["argsData","argTypesData","Default","Variants"],X=Object.freeze(Object.defineProperty({__proto__:null,Default:s,Variants:r,__namedExportsOrder:q,argTypesData:S,argsData:V,default:Q},Symbol.toStringTag,{value:"Module"}));export{X as C,s as D,r as V};
//# sourceMappingURL=checkbox_group.stories-4b51b4c1.js.map
