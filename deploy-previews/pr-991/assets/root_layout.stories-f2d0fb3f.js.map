{"version":3,"file":"root_layout.stories-f2d0fb3f.js","sources":["../../components/root_layout/root_layout_constants.js","../../components/root_layout/root_layout_body.vue","../../components/root_layout/root_layout.vue","../../components/root_layout/root_layout_default.story.vue"],"sourcesContent":["export const ROOT_LAYOUT_SIDEBAR_POSITIONS = {\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport const ROOT_LAYOUT_RESPONSIVE_BREAKPOINTS = ['sm', 'md', 'lg', null];\n\nexport default {\n  ROOT_LAYOUT_SIDEBAR_POSITIONS,\n  ROOT_LAYOUT_RESPONSIVE_BREAKPOINTS,\n};\n","<template>\n  <div\n    ref=\"root-layout-body\"\n    :class=\"['d-root-layout__body', bodyClasses]\"\n    data-qa=\"dt-root-layout-body\"\n  >\n    <aside\n      v-if=\"$slots.sidebar\"\n      ref=\"root-layout-sidebar\"\n      :class=\"['d-root-layout__sidebar', { 'd-root-layout__sidebar--sticky': fixed }, sidebarClass]\"\n      :style=\"{ 'flex-basis': sidebarWidth }\"\n      data-qa=\"dt-root-layout-sidebar\"\n    >\n      <!-- @slot Slot for the sidebar -->\n      <slot name=\"sidebar\" />\n    </aside>\n    <main\n      v-if=\"$slots.content\"\n      ref=\"root-layout-content\"\n      :class=\"['d-root-layout__content', contentClass]\"\n      data-qa=\"dt-root-layout-content\"\n      tabindex=\"0\"\n    >\n      <!-- @slot Slot for the main content -->\n      <slot name=\"content\" />\n    </main>\n  </div>\n</template>\n\n<script>\nimport { ROOT_LAYOUT_SIDEBAR_POSITIONS } from '@/components/root_layout/root_layout_constants';\n\nexport default {\n  name: 'DtRootLayoutBody',\n  props: {\n    /**\n     * Additional class name for the body\n     */\n    bodyClass: {\n      type: [String, Array, Object],\n      default: undefined,\n    },\n\n    /**\n     * Additional class name for the content element\n     */\n    contentClass: {\n      type: [String, Array, Object],\n      default: undefined,\n    },\n\n    /**\n     * Additional class name for the sidebar element\n     */\n    sidebarClass: {\n      type: [String, Array, Object],\n      default: undefined,\n    },\n\n    /**\n     * The width of the sidebar\n     * Possible units rem|px|%|em\n     */\n    sidebarWidth: {\n      type: String,\n      default: undefined,\n    },\n\n    /**\n     * When true, the sidebar will be locked in position and the content will\n     * be scrollable. When false the sidebar will scroll out of view.\n     * @values true, false\n     */\n    fixed: {\n      type: Boolean,\n      default: undefined,\n    },\n\n    /**\n     * Whether the sidebar is on the left or right side\n     * Possible options: 'left', 'right'\n     */\n    sidebarPosition: {\n      type: String,\n      default: undefined,\n    },\n  },\n\n  computed: {\n    bodyClasses () {\n      return [\n        this.bodyClass,\n        { 'd-root-layout__body--invert': this.sidebarPosition === ROOT_LAYOUT_SIDEBAR_POSITIONS.RIGHT },\n      ];\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"['root-layout d-root-layout', { 'd-root-layout--fixed': fixed }, responsiveClass]\"\n    data-qa=\"dt-root-layout\"\n  >\n    <header\n      v-if=\"$slots.header\"\n      :class=\"['d-root-layout__header', { 'd-root-layout__header--sticky': headerSticky }, headerClass]\"\n      :style=\"{ 'height': headerHeight, 'min-height': headerHeight }\"\n      data-qa=\"dt-root-layout-header\"\n    >\n      <!-- @slot Slot for header content -->\n      <slot name=\"header\" />\n    </header>\n    <dt-root-layout-body\n      :body-class=\"bodyClass\"\n      :content-class=\"contentClass\"\n      :sidebar-class=\"sidebarClass\"\n      :sidebar-width=\"sidebarWidth\"\n      :sidebar-position=\"sidebarPosition\"\n      :header-height=\"$slots.header ? headerHeight : '0px'\"\n      :footer-height=\"$slots.footer ? footerHeight : '0px'\"\n      :fixed=\"fixed\"\n    >\n      <template\n        v-if=\"$slots.sidebar\"\n        #sidebar\n      >\n        <!-- @slot Slot for the sidebar -->\n        <slot name=\"sidebar\" />\n      </template>\n      <template\n        v-if=\"$slots.default\"\n        #content\n      >\n        <!-- @slot Slot for main content -->\n        <slot name=\"default\" />\n      </template>\n    </dt-root-layout-body>\n    <footer\n      v-if=\"$slots.footer\"\n      :class=\"['d-root-layout__footer', footerClass]\"\n      :style=\"{ 'height': footerHeight, 'min-height': footerHeight }\"\n      data-qa=\"dt-root-layout-footer\"\n    >\n      <!-- @slot Slot for footer content -->\n      <slot name=\"footer\" />\n    </footer>\n  </div>\n</template>\n\n<script>\nimport DtRootLayoutBody from './root_layout_body.vue';\nimport { ROOT_LAYOUT_SIDEBAR_POSITIONS, ROOT_LAYOUT_RESPONSIVE_BREAKPOINTS } from './root_layout_constants';\n\n/**\n * A root layout provides a standardized group of containers to display content at the root level.\n */\nexport default {\n  name: 'DtRootLayout',\n\n  components: {\n    DtRootLayoutBody,\n  },\n\n  props: {\n    /**\n     * When true, the header, footer and sidebar will be locked in position and the content will\n     * be scrollable. When false the header, footer and sidebar  will scroll out of view.\n     * @values true, false\n     */\n    fixed: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Additional class name for the header element\n     */\n    headerClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * The height of the header\n     * Possible units rem|px|%|em\n     */\n    headerHeight: {\n      type: String,\n      default: '64px',\n    },\n\n    /**\n     * Additional class name for the body\n     */\n    bodyClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Scroll the header with the page\n     * @values true, false\n     */\n    headerSticky: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Additional class name for the content element\n     */\n    contentClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Additional class name for the sidebar element\n     */\n    sidebarClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * The width of the sidebar\n     * Possible units rem|px|%|em\n     */\n    sidebarWidth: {\n      type: String,\n      default: '256px',\n    },\n\n    /**\n     * Whether the sidebar is on the left or right side\n     * Possible options: 'left', 'right'\n     * @values left, right\n     */\n    sidebarPosition: {\n      type: String,\n      default: 'left',\n      validator: (s) => Object.values(ROOT_LAYOUT_SIDEBAR_POSITIONS).includes(s),\n    },\n\n    /**\n     * Additional class name for the footer element\n     */\n    footerClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * The height of the footer\n     * Possible units rem|px|%|em\n     */\n    footerHeight: {\n      type: String,\n      default: '64px',\n    },\n\n    /**\n     * Defines the breakpoint when the root layout will change to responsive version\n     * @values 'sm', 'md', 'lg', null\n     */\n    responsiveBreakpoint: {\n      type: String,\n      default: null,\n      validator: (bp) => ROOT_LAYOUT_RESPONSIVE_BREAKPOINTS.includes(bp),\n    },\n  },\n\n  computed: {\n    responsiveClass () {\n      if (!this.responsiveBreakpoint) return;\n      return `d-root-layout__responsive--${this.responsiveBreakpoint}`;\n    },\n  },\n};\n</script>\n","<template>\n  <dt-root-layout\n    :body-class=\"bodyClass\"\n    :header-class=\"headerClass\"\n    :header-sticky=\"headerSticky\"\n    :header-height=\"headerHeight\"\n    :content-class=\"contentClass\"\n    :sidebar-class=\"sidebarClass\"\n    :sidebar-position=\"sidebarPosition\"\n    :sidebar-width=\"sidebarWidth\"\n    :footer-class=\"footerClass\"\n    :footer-height=\"footerHeight\"\n    :fixed=\"fixed\"\n    :responsive-breakpoint=\"responsiveBreakpoint\"\n  >\n    <template\n      v-if=\"header\"\n      #header\n    >\n      <span v-html=\"header\" />\n    </template>\n    <template\n      v-if=\"sidebar\"\n      #sidebar\n    >\n      <span v-html=\"sidebar\" />\n    </template>\n    <template v-if=\"defaultSlot\">\n      <span v-html=\"defaultSlot\" />\n    </template>\n    <template\n      v-if=\"footer\"\n      #footer\n    >\n      <span v-html=\"footer\" />\n    </template>\n  </dt-root-layout>\n</template>\n\n<script>\nimport DtRootLayout from './root_layout.vue';\n\nexport default {\n  name: 'DtRootLayoutDefault',\n  components: { DtRootLayout },\n};\n</script>\n"],"names":["ROOT_LAYOUT_SIDEBAR_POSITIONS","ROOT_LAYOUT_RESPONSIVE_BREAKPOINTS","_sfc_main","DtRootLayoutBody","s","bp","DtRootLayout"],"mappings":"uGAAO,MAAMA,EAAgC,CAC3C,KAAM,OACN,MAAO,OACT,EAEaC,EAAqC,CAAC,KAAM,KAAM,KAAM,IAAI,EC2BzEC,EAAA,CACA,KAAA,mBACA,MAAA,CAIA,UAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,MACA,EAKA,aAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,MACA,EAKA,aAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,MACA,EAMA,aAAA,CACA,KAAA,OACA,QAAA,MACA,EAOA,MAAA,CACA,KAAA,QACA,QAAA,MACA,EAMA,gBAAA,CACA,KAAA,OACA,QAAA,MACA,CACA,EAEA,SAAA,CACA,aAAA,CACA,MAAA,CACA,KAAA,UACA,CAAA,8BAAA,KAAA,kBAAAF,EAAA,KAAA,CACA,CACA,CACA,CACA;;;iUCtCA,MAAAE,EAAA,CACA,KAAA,eAEA,WAAA,CACA,iBAAAC,CACA,EAEA,MAAA,CAMA,MAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,YAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,EACA,EAMA,aAAA,CACA,KAAA,OACA,QAAA,MACA,EAKA,UAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,EACA,EAMA,aAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,aAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,EACA,EAKA,aAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,EACA,EAMA,aAAA,CACA,KAAA,OACA,QAAA,OACA,EAOA,gBAAA,CACA,KAAA,OACA,QAAA,OACA,UAAAC,GAAA,OAAA,OAAAJ,CAAA,EAAA,SAAAI,CAAA,CACA,EAKA,YAAA,CACA,KAAA,CAAA,OAAA,MAAA,MAAA,EACA,QAAA,EACA,EAMA,aAAA,CACA,KAAA,OACA,QAAA,MACA,EAMA,qBAAA,CACA,KAAA,OACA,QAAA,KACA,UAAAC,GAAAJ,EAAA,SAAAI,CAAA,CACA,CACA,EAEA,SAAA,CACA,iBAAA,CACA,GAAA,KAAA,qBACA,MAAA,8BAAA,KAAA,sBACA,CACA,CACA;;;;;0nBC1IA,MAAAH,EAAA,CACA,KAAA,sBACA,WAAA,CAAA,aAAAI,CAAA,CACA;;;;;;;;;;;;;;;;;;;"}