{"version":3,"file":"checkbox-25eff853.js","sources":["../../components/checkbox/checkbox_constants.js","../../components/checkbox/checkbox.vue"],"sourcesContent":["export const CHECKBOX_INPUT_VALIDATION_CLASSES = {\n  error: 'd-checkbox--error',\n  warning: 'd-checkbox--warning',\n  success: 'd-checkbox--success',\n};\n\nexport default {\n  CHECKBOX_INPUT_VALIDATION_CLASSES,\n};\n","<template>\n  <label>\n    <div :class=\"['d-checkbox-group', { 'd-checkbox-group--disabled': internalDisabled }]\">\n      <div class=\"d-checkbox__input\">\n        <input\n          type=\"checkbox\"\n          :checked=\"internalChecked\"\n          :name=\"internalName\"\n          :value=\"value\"\n          :disabled=\"internalDisabled\"\n          :class=\"['d-checkbox', inputValidationClass, inputClass]\"\n          v-bind=\"$attrs\"\n          :indeterminate.prop=\"internalIndeterminate\"\n          v-on=\"inputListeners\"\n        >\n      </div>\n      <div\n        v-if=\"hasLabelOrDescription\"\n        class=\"d-checkbox__copy d-checkbox__label\"\n        data-qa=\"checkbox-label-description-container\"\n      >\n        <div\n          v-if=\"hasLabel\"\n          :class=\"labelClass\"\n          v-bind=\"labelChildProps\"\n          data-qa=\"checkbox-label\"\n        >\n          <!-- @slot slot for Checkbox Label -->\n          <slot>{{ label }}</slot>\n        </div>\n        <div\n          v-if=\"hasDescription\"\n          :class=\"['d-description', descriptionClass]\"\n          v-bind=\"descriptionChildProps\"\n          data-qa=\"checkbox-description\"\n        >\n          <!-- @slot slot for Checkbox Description -->\n          <slot name=\"description\">{{ description }}</slot>\n        </div>\n        <dt-validation-messages\n          :validation-messages=\"formattedMessages\"\n          :show-messages=\"showMessages\"\n          :class=\"messagesClass\"\n          v-bind=\"messagesChildProps\"\n          data-qa=\"dt-checkbox-validation-messages\"\n        />\n      </div>\n    </div>\n  </label>\n</template>\n\n<script>\n// Imports\nimport {\n  InputMixin,\n  CheckableMixin,\n  GroupableMixin,\n  MessagesMixin,\n} from '../../common/mixins/input';\nimport { CHECKBOX_INPUT_VALIDATION_CLASSES } from './checkbox_constants';\nimport { DtValidationMessages } from '../validation_messages';\n\n/**\n * Checkboxes are control elements that allow the user to make a selection.They are typically used in a\n * Checkbox Group which allows the user to make one or more selections from a list of options.\n * @see https://dialpad.design/components/checkbox.html\n */\nexport default {\n  name: 'DtCheckbox',\n\n  components: { DtValidationMessages },\n\n  mixins: [InputMixin, CheckableMixin, GroupableMixin, MessagesMixin],\n\n  inheritAttrs: false,\n\n  emits: [\n    /**\n     * Native input event\n     *\n     * @event input\n     * @type {Boolean}\n     */\n    'input',\n\n    /**\n     * Native input focusin event\n     *\n     * @event focusin\n     * @type {FocusEvent}\n     */\n    'focusin',\n\n    /**\n     * Native input focusout event\n     *\n     * @event focusout\n     * @type {FocusEvent}\n     */\n    'focusout',\n  ],\n\n  computed: {\n    inputValidationClass () {\n      return CHECKBOX_INPUT_VALIDATION_CLASSES[this.internalValidationState];\n    },\n\n    checkboxGroupValueChecked () {\n      return this.groupContext?.selectedValues?.includes(this.value) ?? false;\n    },\n\n    hasLabel () {\n      return !!(this.$slots.default || this.label);\n    },\n\n    hasDescription () {\n      return !!(this.$slots.description || this.description);\n    },\n\n    hasLabelOrDescription () {\n      return this.hasLabel || this.hasDescription;\n    },\n\n    inputListeners () {\n      return {\n        /* TODO\n            Check if any usages of this component leverage $listeners and either remove if unused or scope the removal\n            and migration prior to upgrading to Vue 3.x\n        */\n        ...this.$listeners,\n        /*\n         * Override input listener to as no-op. Prevents parent input listeners from being passed through onto the input\n         * element which will result in the hander being called twice (once on the input element and once by the emitted\n         * input event by the change listener).\n        */\n        input: () => {},\n        change: event => this.emitValue(event.target),\n      };\n    },\n  },\n\n  watch: {\n    checkboxGroupValueChecked: {\n      immediate: true,\n      handler (newCheckboxGroupValueChecked) {\n        if (this.hasGroup) {\n          // update internal value when the checkbox group value changes\n          this.internalChecked = newCheckboxGroupValueChecked;\n        }\n      },\n    },\n  },\n\n  mounted () {\n    this.runValidations();\n  },\n\n  methods: {\n    emitValue (target) {\n      let { value, checked } = target;\n      // Expected: Indeterminate -> unchecked. We need to manually set DOM property `checked` to false\n      // and update this.internalIndeterminate.\n      if (this.internalIndeterminate) {\n        checked = false;\n        this.internalIndeterminate = false;\n        target.checked = false;\n      }\n      // update provided value if injected\n      this.setGroupValue(value, checked);\n\n      // emit the state of the checkbox\n      this.$emit('input', checked);\n    },\n\n    runValidations () {\n      this.validateInputLabels(this.hasLabel, this.$attrs['aria-label']);\n    },\n  },\n};\n</script>\n"],"names":["CHECKBOX_INPUT_VALIDATION_CLASSES","_sfc_main","DtValidationMessages","InputMixin","CheckableMixin","GroupableMixin","MessagesMixin","_b","_a","event","newCheckboxGroupValueChecked","target","value","checked"],"mappings":"6KAAO,MAAMA,EAAoC,CAC/C,MAAO,oBACP,QAAS,sBACT,QAAS,qBACX,EC+DAC,EAAA,CACA,KAAA,aAEA,WAAA,CAAA,qBAAAC,CAAA,EAEA,OAAA,CAAAC,EAAAC,EAAAC,EAAAC,CAAA,EAEA,aAAA,GAEA,MAAA,CAOA,QAQA,UAQA,UACA,EAEA,SAAA,CACA,sBAAA,CACA,OAAAN,EAAA,KAAA,uBAAA,CACA,EAEA,2BAAA,SACA,QAAAO,GAAAC,EAAA,KAAA,eAAA,YAAAA,EAAA,iBAAA,YAAAD,EAAA,SAAA,KAAA,SAAA,EACA,EAEA,UAAA,CACA,MAAA,CAAA,EAAA,KAAA,OAAA,SAAA,KAAA,MACA,EAEA,gBAAA,CACA,MAAA,CAAA,EAAA,KAAA,OAAA,aAAA,KAAA,YACA,EAEA,uBAAA,CACA,OAAA,KAAA,UAAA,KAAA,cACA,EAEA,gBAAA,CACA,MAAA,CAKA,GAAA,KAAA,WAMA,MAAA,IAAA,CAAA,EACA,OAAAE,GAAA,KAAA,UAAAA,EAAA,MAAA,CACA,CACA,CACA,EAEA,MAAA,CACA,0BAAA,CACA,UAAA,GACA,QAAAC,EAAA,CACA,KAAA,WAEA,KAAA,gBAAAA,EAEA,CACA,CACA,EAEA,SAAA,CACA,KAAA,eAAA,CACA,EAEA,QAAA,CACA,UAAAC,EAAA,CACA,GAAA,CAAA,MAAAC,EAAA,QAAAC,CAAA,EAAAF,EAGA,KAAA,wBACAE,EAAA,GACA,KAAA,sBAAA,GACAF,EAAA,QAAA,IAGA,KAAA,cAAAC,EAAAC,CAAA,EAGA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,gBAAA,CACA,KAAA,oBAAA,KAAA,SAAA,KAAA,OAAA,YAAA,CAAA,CACA,CACA,CACA;"}