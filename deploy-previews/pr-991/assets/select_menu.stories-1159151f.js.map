{"version":3,"file":"select_menu.stories-1159151f.js","sources":["../../components/select_menu/select_menu_constants.js","../../components/select_menu/select_menu_validators.js","../../components/select_menu/select_menu.vue","../../components/select_menu/select_menu_default.story.vue","../../components/select_menu/select_menu_variants.story.vue"],"sourcesContent":["export const SELECT_SIZE_MODIFIERS = {\n  xs: 'd-select--xs',\n  sm: 'd-select--sm',\n  md: '',\n  lg: 'd-select--lg',\n  xl: 'd-select--xl',\n};\n\nexport const SELECT_STATE_MODIFIERS = {\n  error: 'd-select__input--error',\n  warning: 'd-select__input--warning',\n  success: 'd-select__input--success',\n};\n\nexport default {\n  SELECT_SIZE_MODIFIERS,\n  SELECT_STATE_MODIFIERS,\n};\n","const hasValidOptionIndex = option => !option.index || typeof option.index === 'number';\n\nconst hasValidOptionValue = option => {\n  if (!option.value) {\n    return false;\n  }\n\n  return typeof option.value === 'string' || typeof option.value === 'number';\n};\n\nconst hasValidOptionLabel = option => {\n  if (!option.label) {\n    return false;\n  }\n\n  return typeof option.label === 'string';\n};\n\nexport const optionsValidator = options => {\n  if (!options) {\n    return true;\n  }\n\n  return options.every(option => {\n    if (!hasValidOptionIndex(option)) {\n      return false;\n    }\n\n    if (!hasValidOptionValue(option)) {\n      return false;\n    }\n\n    if (!hasValidOptionLabel(option)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n","<template>\n  <div>\n    <label>\n      <div\n        v-if=\"$slots.label || label\"\n        :aria-details=\"labelAriaDetails\"\n        :class=\"[\n          'd-label',\n          LABEL_SIZE_MODIFIERS[size],\n          labelClass,\n        ]\"\n        v-bind=\"labelChildProps\"\n        data-qa=\"dt-select-label\"\n      >\n        <!-- @slot Slot for label, defaults to label prop -->\n        <slot name=\"label\">{{ label }}</slot>\n      </div>\n      <div\n        v-if=\"$slots.description || description\"\n        :id=\"descriptionKey\"\n        :class=\"[\n          'd-description',\n          DESCRIPTION_SIZE_MODIFIERS[size],\n          descriptionClass,\n        ]\"\n        v-bind=\"descriptionChildProps\"\n        data-qa=\"dt-select-description\"\n      >\n        <!-- @slot Slot for description, defaults to description prop -->\n        <slot name=\"description\">{{ description }}</slot>\n      </div>\n      <div\n        :class=\"[\n          'd-select',\n          SELECT_SIZE_MODIFIERS[size],\n          selectClass,\n          { 'd-select--disabled': disabled },\n        ]\"\n        data-qa=\"dt-select-wrapper\"\n      >\n        <select\n          :class=\"[\n            'd-select__input',\n            SELECT_STATE_MODIFIERS[state],\n          ]\"\n          v-bind=\"$attrs\"\n          data-qa=\"dt-select\"\n          :disabled=\"disabled\"\n          v-on=\"selectListeners\"\n        >\n          <!-- @slot Slot for select menu options, defaults to options prop -->\n          <slot>\n            <option\n              v-for=\"option in options\"\n              :key=\"getOptionKey(option.value)\"\n              :value=\"option.value\"\n              :class=\"optionClass\"\n              v-bind=\"optionChildProps\"\n            >\n              {{ option.label }}\n            </option>\n          </slot>\n        </select>\n      </div>\n    </label>\n    <dt-validation-messages\n      :validation-messages=\"formattedMessages\"\n      :show-messages=\"showMessages\"\n      :class=\"messagesClass\"\n      v-bind=\"messagesChildProps\"\n      data-qa=\"dt-select-messages\"\n    />\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport {\n  LABEL_SIZE_MODIFIERS,\n  DESCRIPTION_SIZE_MODIFIERS,\n} from '@/common/constants';\nimport {\n  SELECT_SIZE_MODIFIERS,\n  SELECT_STATE_MODIFIERS,\n} from './select_menu_constants';\nimport {\n  getUniqueString,\n  getValidationState,\n} from '@/common/utils';\nimport { MessagesMixin } from '../../common/mixins/input.js';\nimport { optionsValidator } from './select_menu_validators.js';\nimport { DtValidationMessages } from '../validation_messages';\n\n/**\n * A select menu is an input control that allows users to choose one option from a list.\n * @property {Boolean} disabled attribute\n * @property {String} name attribute\n * @property {String} value attribute\n * @see https://dialpad.design/components/select.html\n */\nexport default {\n  name: 'DtSelectMenu',\n\n  components: { DtValidationMessages },\n\n  mixins: [MessagesMixin],\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Label for the select\n     */\n    label: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Description for the select\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Select Menu Options, overridden by default slot. Each option has the following structure:\n     * `{ index: number (optional), value: number || string (required), label: string (required) }`\n     * @param {Object[]} options - Optional - A list that can be used to create a list of select menu options\n     * @param {number} options[].index - Optional - The index of the option\n     * @param {number|string} options[].value - Required - The option value\n     * @param {string} options[].label - Required - The option Label\n     */\n    options: {\n      type: Array,\n      default: () => [],\n      validator: options => optionsValidator(options),\n    },\n\n    /**\n     * Controls the size of the select\n     * @values xs, sm, md, lg, xl\n     */\n    size: {\n      type: String,\n      default: 'md',\n      validator: (s) => Object.keys(SELECT_SIZE_MODIFIERS).includes(s),\n    },\n\n    /**\n     * Used to customize the label container\n     */\n    labelClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Used to customize the description container\n     */\n    descriptionClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Used to customize the select\n     */\n    selectClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Used to customize each option, should options be provided via prop\n     */\n    optionClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * A set of props that are passed into the label container\n     */\n    labelChildProps: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    /**\n     * A set of props that are passed into the description container\n     */\n    descriptionChildProps: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    /**\n     * A set of props that are passed into each option, should options be provided via prop\n     */\n    optionChildProps: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    /**\n     * Disabled state of the select\n     * @values true, false\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\n    /**\n     * Native input event\n     *\n     * @event input\n     * @type {String | Number}\n     */\n    'input',\n\n    /**\n     * Native change event\n     *\n     * @event change\n     * @type {String | Number}\n     */\n    'change',\n  ],\n\n  data () {\n    return {\n      LABEL_SIZE_MODIFIERS,\n      DESCRIPTION_SIZE_MODIFIERS,\n      SELECT_SIZE_MODIFIERS,\n      SELECT_STATE_MODIFIERS,\n    };\n  },\n\n  computed: {\n    selectListeners () {\n      return {\n        /* TODO\n            Check if any usages of this component leverage $listeners and either remove if unused or scope the removal\n            and migration prior to upgrading to Vue 3.x\n        */\n        ...this.$listeners,\n        /*\n         * Override input listener to as no-op. Prevents parent input listeners from being passed through onto the input\n         * element which will result in the hander being called twice (once on the select element and once by the\n         * emitted input event by the change listener).\n        */\n        input: () => {},\n        change: event => this.emitValue(event.target.value),\n      };\n    },\n\n    state () {\n      return getValidationState(this.formattedMessages);\n    },\n\n    selectKey () {\n      return getUniqueString();\n    },\n\n    descriptionKey () {\n      return `select-${this.selectKey}-description`;\n    },\n\n    labelAriaDetails () {\n      if (this.$slots.description || this.description) {\n        return this.descriptionKey;\n      }\n\n      return this.$attrs['aria-details'];\n    },\n  },\n\n  mounted () {\n    this.validateOptionsPresence();\n  },\n\n  beforeUpdate () {\n    this.validateOptionsPresence();\n  },\n\n  methods: {\n    emitValue (value) {\n      this.$emit('input', value);\n      this.$emit('change', value);\n    },\n\n    getOptionKey (value) {\n      return `select-${this.selectKey}-option-${value}`;\n    },\n\n    validateOptionsPresence () {\n      if (this.options?.length < 1 && !this.$slots.default) {\n        Vue.util.warn('Options are expected to be provided via prop or slot', this);\n      }\n    },\n  },\n};\n</script>\n","<template>\n  <dt-select-menu\n    :label=\"label\"\n    :options=\"options\"\n    :size=\"size\"\n    :description=\"description\"\n    :show-messages=\"showMessages\"\n    :messages=\"messages\"\n    :name=\"name\"\n    :value=\"value\"\n    :disabled=\"disabled\"\n    :label-class=\"labelClass\"\n    :description-class=\"descriptionClass\"\n    :select-class=\"selectClass\"\n    :option-class=\"optionClass\"\n    :messages-class=\"messagesClass\"\n    :label-child-props=\"labelChildProps\"\n    :description-child-props=\"descriptionChildProps\"\n    :option-child-props=\"optionChildProps\"\n    :messages-child-props=\"messagesChildProps\"\n    @input=\"onInput\"\n    @change=\"onChange\"\n  >\n    <template\n      v-if=\"labelSlot\"\n      slot=\"label\"\n    >\n      <span v-html=\"labelSlot\" />\n    </template>\n    <template\n      v-if=\"descriptionSlot\"\n      slot=\"description\"\n    >\n      <span v-html=\"descriptionSlot\" />\n    </template>\n    <html-fragment\n      v-if=\"defaultSlot\"\n      :html=\"defaultSlot\"\n    />\n  </dt-select-menu>\n</template>\n\n<script>\nimport DtSelectMenu from './select_menu.vue';\nimport { htmlFragment } from '@/common/utils';\n\nexport default {\n  name: 'DtSelectMenuDefault',\n  components: { DtSelectMenu, htmlFragment },\n};\n</script>\n","<template>\n  <div\n    id=\"components-select-menu--variants-container\"\n    class=\"d-d-flex d-fd-column d-stack32 d-p32\"\n  >\n    <!-- Default -->\n    <dt-select-menu\n      id=\"default\"\n      name=\"default\"\n      label=\"Default\"\n      :options=\"options\"\n    />\n    <!-- Default -->\n\n    <!-- With Description -->\n    <dt-select-menu\n      id=\"with-description\"\n      name=\"with-description\"\n      label=\"With\"\n      description=\"Description\"\n      :options=\"options\"\n    />\n    <!-- With Description -->\n\n    <!-- With Slotted Label -->\n    <dt-select-menu\n      id=\"with-slotted-label\"\n      name=\"with-slotted-label\"\n      :options=\"options\"\n    >\n      <template slot=\"label\">\n        With Slotted Label\n      </template>\n    </dt-select-menu>\n    <!-- With Slotted Label -->\n\n    <!-- With Slotted Description -->\n    <dt-select-menu\n      id=\"with-slotted-description\"\n      name=\"with-slotted-description\"\n      label=\"With\"\n      :options=\"options\"\n    >\n      <template slot=\"description\">\n        Slotted Description\n      </template>\n    </dt-select-menu>\n    <!-- With Slotted Description -->\n\n    <!-- With Slotted Options -->\n    <dt-select-menu\n      id=\"with-slotted-options\"\n      name=\"with-slotted-options\"\n      label=\"With Slotted Options\"\n    >\n      <option\n        v-for=\"option in options\"\n        :key=\"`with-slotted-options-${option.value}`\"\n        :value=\"option.value\"\n      >\n        {{ option.label }}\n      </option>\n    </dt-select-menu>\n    <!-- With Slotted Options -->\n\n    <!-- With Error Message -->\n    <dt-select-menu\n      id=\"with-error-message\"\n      name=\"with-error-message\"\n      label=\"With Error Message\"\n      :options=\"options\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n    />\n    <!-- With Error Message -->\n\n    <!-- With Error Messages Hidden -->\n    <dt-select-menu\n      id=\"with-error-messages-hidden\"\n      name=\"with-error-messages-hidden\"\n      label=\"With Error Messages Hidden\"\n      :options=\"options\"\n      :messages=\"[{ message: 'Error', type: VALIDATION_MESSAGE_TYPES.ERROR }]\"\n      :show-messages=\"false\"\n    />\n    <!-- With Error Messages Hidden -->\n\n    <!-- With Success Message -->\n    <dt-select-menu\n      id=\"with-success-message\"\n      name=\"with-success-message\"\n      label=\"With Success Message\"\n      :options=\"options\"\n      :messages=\"[{ message: 'Success', type: VALIDATION_MESSAGE_TYPES.SUCCESS }]\"\n    />\n    <!-- With Success Message -->\n\n    <!-- With Warning Message -->\n    <dt-select-menu\n      id=\"with-warning-message\"\n      name=\"with-warning-message\"\n      label=\"With Warning Message\"\n      :options=\"options\"\n      :messages=\"[{ message: 'Warning', type: VALIDATION_MESSAGE_TYPES.WARNING }]\"\n    />\n    <!-- With Warning Message -->\n\n    <!-- Disabled -->\n    <dt-select-menu\n      id=\"disabled\"\n      name=\"disabled\"\n      label=\"Disabled\"\n      :options=\"options\"\n      disabled\n    />\n    <!-- Disabled -->\n\n    <!-- Extra Small -->\n    <dt-select-menu\n      id=\"extra-small\"\n      name=\"extra-small\"\n      label=\"Extra Small\"\n      :options=\"options\"\n      size=\"xs\"\n    />\n    <!-- Extra Small -->\n\n    <!-- Small -->\n    <dt-select-menu\n      id=\"small\"\n      name=\"small\"\n      label=\"Small\"\n      :options=\"options\"\n      size=\"sm\"\n    />\n    <!-- Small -->\n\n    <!-- Large -->\n    <dt-select-menu\n      id=\"large\"\n      name=\"large\"\n      label=\"Large\"\n      :options=\"options\"\n      size=\"lg\"\n    />\n    <!-- Large -->\n\n    <!-- Extra Large -->\n    <dt-select-menu\n      id=\"extra-large\"\n      name=\"extra-large\"\n      label=\"Extra Large\"\n      :options=\"options\"\n      size=\"xl\"\n    />\n    <!-- Extra Large -->\n  </div>\n</template>\n\n<script>\nimport { VALIDATION_MESSAGE_TYPES } from '@/common/constants';\nimport DtSelectMenu from './select_menu.vue';\n\nexport default {\n  name: 'DtSelectMenuVariants',\n\n  components: { DtSelectMenu },\n\n  beforeCreate () {\n    this.VALIDATION_MESSAGE_TYPES = VALIDATION_MESSAGE_TYPES;\n  },\n};\n</script>\n"],"names":["SELECT_SIZE_MODIFIERS","SELECT_STATE_MODIFIERS","hasValidOptionIndex","option","hasValidOptionValue","hasValidOptionLabel","optionsValidator","options","_sfc_main","DtValidationMessages","MessagesMixin","s","LABEL_SIZE_MODIFIERS","DESCRIPTION_SIZE_MODIFIERS","event","getValidationState","getUniqueString","value","_a","Vue","DtSelectMenu","htmlFragment","VALIDATION_MESSAGE_TYPES"],"mappings":"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"}