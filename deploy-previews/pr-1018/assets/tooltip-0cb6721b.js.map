{"version":3,"file":"tooltip-0cb6721b.js","sources":["../../components/tooltip/tooltip_constants.js","../../components/tooltip/tooltip.vue"],"sourcesContent":["/*\n* Tippy directions - https://atomiks.github.io/tippyjs/v6/all-props/#placement\n* */\nimport { BASE_TIPPY_DIRECTIONS, TIPPY_STICKY_VALUES } from '../popover/tippy_utils';\n\nexport const TOOLTIP_DIRECTIONS = [\n  ...BASE_TIPPY_DIRECTIONS,\n];\n\nexport const TOOLTIP_DELAY_MS = 300;\n\nexport const TOOLTIP_KIND_MODIFIERS = {\n  hover: `d-tooltip--hover`,\n  show: `d-tooltip--show`,\n  inverted: `d-tooltip--inverted`,\n  hide: `d-tooltip--hide`,\n};\n\nexport const TOOLTIP_STICKY_VALUES = [\n  ...TIPPY_STICKY_VALUES,\n];\n\nexport const TOOLTIP_HIDE_ON_CLICK_VARIANTS = [true, false, 'toggle'];\n","<template>\n  <div data-qa=\"dt-tooltip-container\">\n    <a\n      ref=\"anchor\"\n      tabindex=\"-1\"\n      role=\"presentation\"\n      data-qa=\"dt-tooltip-anchor\"\n      @focusin=\"onEnterAnchor\"\n      @focusout=\"onLeaveAnchor\"\n      @mouseenter=\"onEnterAnchor\"\n      @mouseleave=\"onLeaveAnchor\"\n      @keydown.esc=\"onLeaveAnchor\"\n    >\n      <!-- @slot Slot for the anchor element -->\n      <slot\n        name=\"anchor\"\n      />\n    </a>\n    <dt-lazy-show\n      :id=\"id\"\n      ref=\"content\"\n      :show=\"isShown && (!!message.trim() || hasSlotContent($slots.default))\"\n      role=\"tooltip\"\n      aria-hidden=\"false\"\n      data-qa=\"dt-tooltip\"\n      :appear=\"contentAppear\"\n      :transition=\"transition\"\n      :class=\"[\n        'd-tooltip',\n        `d-tooltip__arrow-tippy--${currentPlacement}`,\n        {\n          [ TOOLTIP_KIND_MODIFIERS.inverted ]: inverted,\n        },\n        contentClass,\n      ]\"\n      v-on=\"tooltipListeners\"\n    >\n      <!-- In case when transitionend event doesn't work correct (for ex. tooltip component with custom trigger) -->\n      <!-- after-leave event can be used instead of transitionend -->\n      <!-- @slot Slot for the content, defaults to message prop -->\n      <slot>\n        {{ message }}\n      </slot>\n    </dt-lazy-show>\n  </div>\n</template>\n\n<script>\nimport {\n  TOOLTIP_KIND_MODIFIERS,\n  TOOLTIP_DIRECTIONS,\n  TOOLTIP_STICKY_VALUES,\n  TOOLTIP_DELAY_MS,\n} from './tooltip_constants';\nimport { getUniqueString, hasSlotContent } from '@/common/utils';\nimport DtLazyShow from '../lazy_show/lazy_show.vue';\nimport {\n  createTippy,\n  getAnchor,\n  getPopperOptions,\n} from '../popover/tippy_utils';\n\n/**\n * A tooltip is a floating label that briefly explains an action, function, or an element.\n * Its content is exclusively text and shouldn't be vital information for users.\n * If richer media is desired, consider using a popover instead.\n * @see https://dialpad.design/components/tooltip.html\n */\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'DtTooltip',\n  components: {\n    DtLazyShow,\n  },\n\n  props: {\n    /**\n     * The id of the tooltip\n     */\n    id: {\n      type: String,\n      default () { return getUniqueString(); },\n    },\n\n    /**\n     * If the popover does not fit in the direction described by \"placement\",\n     * it will attempt to change its direction to the \"fallbackPlacements\"\n     * if defined, otherwise it will automatically position to a new location\n     * as it sees best fit. See\n     * <a\n     *   class=\"d-link\"\n     *   href=\"https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements\"\n     *   target=\"_blank\"\n     * >\n     *   Popper.js docs\n     * </a>\n     * */\n    fallbackPlacements: {\n      type: Array,\n      default: () => ['auto'],\n    },\n\n    /**\n     * If true, applies inverted styles to the tooltip\n     * @values true, false\n     */\n    inverted: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     *  Displaces the tooltip from its reference element\n     *  by the specified number of pixels. See\n     *  <a\n     *    class=\"d-link\"\n     *    href=\"https://atomiks.github.io/tippyjs/v6/all-props/#offset\"\n     *    target=\"_blank\"\n     *  >\n     *    Tippy.js docs\n     *  </a>\n     */\n    offset: {\n      type: Array,\n      default: () => [0, -4],\n    },\n\n    /**\n     * The direction the popover displays relative to the anchor. See\n     * <a\n     *   class=\"d-link\"\n     *   href=\"https://atomiks.github.io/tippyjs/v6/all-props/#placement\"\n     *   target=\"_blank\"\n     * >\n     *   Tippy.js docs\n     * </a>\n     * @values top, top-start, top-end,\n     * right, right-start, right-end,\n     * left, left-start, left-end,\n     * bottom, bottom-start, bottom-end,\n     * auto, auto-start, auto-end\n     */\n    placement: {\n      type: String,\n      default: 'top',\n      validator (placement) {\n        return TOOLTIP_DIRECTIONS.includes(placement);\n      },\n    },\n\n    /**\n     * If the tooltip sticks to the anchor. This is usually not needed, but can be needed\n     * if the reference element's position is animating, or to automatically update the popover\n     * position in those cases the DOM layout changes the reference element's position.\n     * `true` enables it, `reference` only checks the \"reference\" rect for changes and `popper` only\n     * checks the \"popper\" rect for changes. See\n     * <a\n     *   class=\"d-link\"\n     *   href=\"https://atomiks.github.io/tippyjs/v6/all-props/#sticky\"\n     *   target=\"_blank\"\n     * >\n     *   Tippy.js docs\n     * </a>\n     * @values true, false, reference, popper\n     */\n    sticky: {\n      type: [Boolean, String],\n      default: false,\n      validator: (sticky) => {\n        return TOOLTIP_STICKY_VALUES.includes(sticky);\n      },\n    },\n\n    /**\n     * Additional css classes for the tooltip content element.\n     * Can accept all of String, Object, and Array, i.e. has the\n     * same api as Vue's built-in handling of the class attribute.\n     */\n    contentClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    /**\n     * A provided message for the tooltip content\n     */\n    message: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Controls whether the tooltip is shown. Leaving this null will have the tooltip trigger on mouseover by default.\n     * If you set this value, the default mouseover behavior will be disabled and you can control it as you need.\n     * Supports .sync modifier\n     * @values true, false\n     */\n    show: {\n      type: Boolean,\n      default: null,\n    },\n\n    /**\n     * Named transition when the content display is toggled.\n     * @see DtLazyShow\n     */\n    transition: {\n      type: String,\n      default: 'fade',\n    },\n\n    /**\n     * Whether to apply transition on initial render in the content lazy show component.\n     * @values true, false\n     */\n    contentAppear: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether the tooltip will have a delay when being focused or moused over.\n     * @values true, false\n     */\n    delay: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  emits: [\n    /**\n     * Event fired to sync the show prop with the parent component\n     * @event update:show\n     */\n    'update:show',\n\n    /**\n     * Emitted when tooltip is shown or hidden\n     *\n     * @event shown\n     * @type {Boolean}\n     */\n    'shown',\n  ],\n\n  data () {\n    return {\n      TOOLTIP_KIND_MODIFIERS,\n      hasSlotContent,\n      tip: null,\n\n      inTimer: null,\n\n      // Internal state for whether the tooltip is shown. Changing the prop\n      // will update this.\n      isShown: false,\n\n      // this is where the placement currently is, this can be different than\n      // the placement prop when there is not enough available room for the tip\n      // to display and it uses a fallback placement.\n      currentPlacement: this.placement,\n    };\n  },\n\n  computed: {\n    tooltipListeners () {\n      return {\n        'after-leave': () => {\n          this.onLeaveTransitionComplete();\n        },\n\n        'after-enter': () => {\n          this.onEnterTransitionComplete();\n        },\n      };\n    },\n\n    tippyProps () {\n      return {\n        offset: this.offset,\n        appendTo: this.anchorEl?.getRootNode()?.querySelector('body'),\n        interactive: false,\n        trigger: 'manual',\n        placement: this.placement,\n        sticky: this.sticky,\n        popperOptions: getPopperOptions({\n          fallbackPlacements: this.fallbackPlacements,\n          hasHideModifierEnabled: true,\n          onChangePlacement: this.onChangePlacement,\n        }),\n      };\n    },\n  },\n\n  watch: {\n\n    tippyProps: {\n      handler: 'setProps',\n      deep: true,\n    },\n\n    show: {\n      handler: function (show) {\n        if (show !== null) {\n          this.isShown = show;\n        }\n      },\n\n      immediate: true,\n    },\n\n    isShown (isShown) {\n      if (isShown) {\n        this.setProps();\n        this.tip.show();\n      } else {\n        this.tip.hide();\n      }\n    },\n\n    sticky (sticky) {\n      this.tip.setProps({\n        sticky,\n      });\n    },\n  },\n\n  mounted () {\n    this.tip = createTippy(getAnchor(this.$refs.anchor), this.initOptions());\n\n    // immediate watcher fires before mounted, so have this here in case\n    // show prop was initially set to true.\n    if (this.isShown) {\n      this.tip.show();\n    }\n  },\n\n  beforeUnmount () {\n    if (this.tip) {\n      this.tip?.destroy();\n    }\n  },\n\n  methods: {\n    calculateAnchorZindex () {\n      // if a modal is currently active render at modal-element z-index, otherwise at tooltip z-index\n      if (this.$el.getRootNode()\n        .querySelector('.d-modal[aria-hidden=\"false\"], .d-modal--transparent[aria-hidden=\"false\"]') ||\n        // Special case because we don't have any dialtone drawer component yet. Render at 651 when\n        // anchor of popover is within a drawer.\n        this.$el.closest('.d-zi-drawer')) {\n        return 651;\n      } else {\n        return 400;\n      }\n    },\n\n    hasVisibleFocus () {\n      return getAnchor(this.$refs.anchor).matches(':focus-visible');\n    },\n\n    onEnterAnchor (e) {\n      if (this.delay) {\n        this.inTimer = setTimeout(function (event) {\n          return this.triggerShow(event);\n        }.bind(this, e), TOOLTIP_DELAY_MS);\n      } else {\n        return this.triggerShow(e);\n      }\n    },\n\n    triggerShow (e) {\n      if (e.type === 'focusin') {\n        // only show tooltips on visible focus when triggered via focus.\n        // when the user is using the mouse they only want tooltips to display\n        // on mouseover.\n        //\n        // Example: anchor of a popover is a button with tooltip.\n        // closing it with the mouse would trigger the tooltip to display as\n        // the anchor is focused on close. Not what we want.\n        if (this.show === null && this.hasVisibleFocus()) {\n          this.isShown = true;\n        }\n      } else {\n        if (this.show === null) this.isShown = true;\n      }\n    },\n\n    onLeaveAnchor () {\n      clearTimeout(this.inTimer);\n      return this.triggerHide();\n    },\n\n    triggerHide () {\n      if (this.show === null) this.isShown = false;\n    },\n\n    onChangePlacement (placement) {\n      this.currentPlacement = placement;\n    },\n\n    onLeaveTransitionComplete () {\n      this.tip?.unmount();\n      this.$emit('shown', false);\n      if (this.show !== null) {\n        this.$emit('update:show', false);\n      }\n    },\n\n    onEnterTransitionComplete () {\n      this.$emit('shown', true);\n      if (this.show !== null) {\n        this.$emit('update:show', true);\n      }\n    },\n\n    setProps () {\n      if (this.tip && this.tip.setProps) {\n        this.tip.setProps({\n          ...this.tippyProps,\n          zIndex: this.calculateAnchorZindex(),\n        });\n      }\n    },\n\n    onMount () {\n      this.setProps();\n    },\n\n    initOptions () {\n      return {\n        contentElement: this.$refs.content.$el,\n        allowHTML: true,\n        zIndex: this.calculateAnchorZindex(),\n        onMount: this.onMount,\n        ...this.tippyProps,\n      };\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.tippy-box[data-popper-reference-hidden],\n.tippy-box[data-popper-escaped] {\n  .d-tooltip {\n    visibility: hidden;\n    pointer-events: none;\n  }\n}\n</style>\n"],"names":["TOOLTIP_DIRECTIONS","BASE_TIPPY_DIRECTIONS","TOOLTIP_DELAY_MS","TOOLTIP_KIND_MODIFIERS","TOOLTIP_STICKY_VALUES","TIPPY_STICKY_VALUES","_sfc_main","DtLazyShow","getUniqueString","placement","sticky","hasSlotContent","_b","_a","getPopperOptions","show","isShown","createTippy","getAnchor","event","_hoisted_1","_openBlock","_createElementBlock","_createElementVNode","$options","args","_createCommentVNode","_renderSlot","_ctx","_createVNode","_component_dt_lazy_show","_mergeProps","$props","$data","_toHandlers"],"mappings":"kWAKY,MAACA,EAAqB,CAChC,GAAGC,CACL,EAEaC,EAAmB,IAEnBC,EAAyB,CACpC,MAAO,mBACP,KAAM,kBACN,SAAU,sBACV,KAAM,iBACR,EAEaC,EAAwB,CACnC,GAAGC,CACL,ECgDA,MAAKC,EAAU,CAEb,KAAM,YACN,WAAY,CACV,WAAAC,CACD,EAED,MAAO,CAIL,GAAI,CACF,KAAM,OACN,SAAW,CAAE,OAAOC,EAAe,CAAK,CACzC,EAeD,mBAAoB,CAClB,KAAM,MACN,QAAS,IAAM,CAAC,MAAM,CACvB,EAMD,SAAU,CACR,KAAM,QACN,QAAS,EACV,EAaD,OAAQ,CACN,KAAM,MACN,QAAS,IAAM,CAAC,EAAG,EAAE,CACtB,EAiBD,UAAW,CACT,KAAM,OACN,QAAS,MACT,UAAWC,EAAW,CACpB,OAAOT,EAAmB,SAASS,CAAS,CAC7C,CACF,EAiBD,OAAQ,CACN,KAAM,CAAC,QAAS,MAAM,EACtB,QAAS,GACT,UAAYC,GACHN,EAAsB,SAASM,CAAM,CAE/C,EAOD,aAAc,CACZ,KAAM,CAAC,OAAQ,OAAQ,KAAK,EAC5B,QAAS,EACV,EAKD,QAAS,CACP,KAAM,OACN,QAAS,EACV,EAQD,KAAM,CACJ,KAAM,QACN,QAAS,IACV,EAMD,WAAY,CACV,KAAM,OACN,QAAS,MACV,EAMD,cAAe,CACb,KAAM,QACN,QAAS,EACV,EAMD,MAAO,CACL,KAAM,QACN,QAAS,EACV,CACF,EAED,MAAO,CAKL,cAQA,OACD,EAED,MAAQ,CACN,MAAO,CACL,uBAAAP,EACA,eAAAQ,EACA,IAAK,KAEL,QAAS,KAIT,QAAS,GAKT,iBAAkB,KAAK,UAE1B,EAED,SAAU,CACR,kBAAoB,CAClB,MAAO,CACL,cAAe,IAAM,CACnB,KAAK,0BAAyB,CAC/B,EAED,cAAe,IAAM,CACnB,KAAK,0BAAyB,CAC/B,EAEJ,EAED,YAAc,SACZ,MAAO,CACL,OAAQ,KAAK,OACb,UAAUC,GAAAC,EAAA,KAAK,WAAL,YAAAA,EAAe,gBAAf,YAAAD,EAA8B,cAAc,QACtD,YAAa,GACb,QAAS,SACT,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,cAAeE,EAAiB,CAC9B,mBAAoB,KAAK,mBACzB,uBAAwB,GACxB,kBAAmB,KAAK,iBAC1B,CAAC,EAEJ,CACF,EAED,MAAO,CAEL,WAAY,CACV,QAAS,WACT,KAAM,EACP,EAED,KAAM,CACJ,QAAS,SAAUC,EAAM,CACnBA,IAAS,OACX,KAAK,QAAUA,EAElB,EAED,UAAW,EACZ,EAED,QAASC,EAAS,CACZA,GACF,KAAK,SAAQ,EACb,KAAK,IAAI,QAET,KAAK,IAAI,MAEZ,EAED,OAAQN,EAAQ,CACd,KAAK,IAAI,SAAS,CAChB,OAAAA,CACF,CAAC,CACF,CACF,EAED,SAAW,CACT,KAAK,IAAMO,EAAYC,EAAU,KAAK,MAAM,MAAM,EAAG,KAAK,YAAW,CAAE,EAInE,KAAK,SACP,KAAK,IAAI,MAEZ,EAED,eAAiB,OACX,KAAK,OACPL,EAAA,KAAK,MAAL,MAAAA,EAAU,UAEb,EAED,QAAS,CACP,uBAAyB,CAEvB,OAAI,KAAK,IAAI,YAAY,EACtB,cAAc,2EAA2E,GAG1F,KAAK,IAAI,QAAQ,cAAc,EACxB,IAEA,GAEV,EAED,iBAAmB,CACjB,OAAOK,EAAU,KAAK,MAAM,MAAM,EAAE,QAAQ,gBAAgB,CAC7D,EAED,cAAe,EAAG,CAChB,GAAI,KAAK,MACP,KAAK,QAAU,WAAW,SAAUC,EAAO,CACzC,OAAO,KAAK,YAAYA,CAAK,CAC9B,EAAC,KAAK,KAAM,CAAC,EAAGjB,CAAgB,MAEjC,QAAO,KAAK,YAAY,CAAC,CAE5B,EAED,YAAa,EAAG,CACV,EAAE,OAAS,UAQT,KAAK,OAAS,MAAQ,KAAK,gBAAe,IAC5C,KAAK,QAAU,IAGb,KAAK,OAAS,OAAM,KAAK,QAAU,GAE1C,EAED,eAAiB,CACf,oBAAa,KAAK,OAAO,EAClB,KAAK,aACb,EAED,aAAe,CACT,KAAK,OAAS,OAAM,KAAK,QAAU,GACxC,EAED,kBAAmBO,EAAW,CAC5B,KAAK,iBAAmBA,CACzB,EAED,2BAA6B,QAC3BI,EAAA,KAAK,MAAL,MAAAA,EAAU,UACV,KAAK,MAAM,QAAS,EAAK,EACrB,KAAK,OAAS,MAChB,KAAK,MAAM,cAAe,EAAK,CAElC,EAED,2BAA6B,CAC3B,KAAK,MAAM,QAAS,EAAI,EACpB,KAAK,OAAS,MAChB,KAAK,MAAM,cAAe,EAAI,CAEjC,EAED,UAAY,CACN,KAAK,KAAO,KAAK,IAAI,UACvB,KAAK,IAAI,SAAS,CAChB,GAAG,KAAK,WACR,OAAQ,KAAK,sBAAuB,CACtC,CAAC,CAEJ,EAED,SAAW,CACT,KAAK,SAAQ,CACd,EAED,aAAe,CACb,MAAO,CACL,eAAgB,KAAK,MAAM,QAAQ,IACnC,UAAW,GACX,OAAQ,KAAK,sBAAuB,EACpC,QAAS,KAAK,QACd,GAAG,KAAK,WAEX,CACF,CACH,EAvbOO,EAAA,CAAA,UAAQ,sBAAsB,oDAAnC,OAAAC,EAAA,EAAAC,EA2CM,MA3CNF,EA2CM,CA1CJG,EAeI,IAAA,CAdF,IAAI,SACJ,SAAS,KACT,KAAK,eACL,UAAQ,oBACP,8BAASC,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,GACtB,+BAAUD,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,GACvB,iCAAYD,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,GACzB,iCAAYD,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,GACzB,gCAAaD,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,EAAA,CAAA,KAAA,CAAA,KAE3BC,EAA0C,qCAAA,EAC1CC,EAEEC,EAAA,OAAA,QAAA,QAEJC,EAyBeC,EAzBfC,EAyBe,CAxBZ,GAAIC,EAAE,GACP,IAAI,UACH,KAAMC,EAAO,UAAA,CAAA,CAAOD,EAAO,QAAC,KAAI,GAAMC,EAAc,eAACL,EAAM,OAAC,OAAO,GACpE,KAAK,UACL,cAAY,QACZ,UAAQ,aACP,OAAQI,EAAa,cACrB,WAAYA,EAAU,WACtB,MAAK,wCAA4DC,EAAgB,qBAA0BA,EAAsB,uBAAC,QAAQ,EAAID,EAAQ,UAAqBA,EAAY,aAQxL,EAAAE,EAAMV,EAAgB,gBAAA,CAAA,EAAA,WAEtB,IAA8G,CAA9GE,EAA8G,yGAAA,EAC9GA,EAA+D,0DAAA,EAC/DA,EAA6D,wDAAA,EAC7DC,EAEOC,sBAFP,IAEO,KADFI,EAAO,OAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}