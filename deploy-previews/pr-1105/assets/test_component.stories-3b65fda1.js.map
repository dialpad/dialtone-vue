{"version":3,"file":"test_component.stories-3b65fda1.js","sources":["../../components/test_component/test_component.vue","../../components/test_component/test_component_default.story.vue","../../components/test_component/test_component_variants.story.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      {{ genericProp }}\n    </div>\n    <div>\n      <!-- @slot description of the default slot -->\n      <slot>\n        The default slot\n      </slot>\n    </div>\n    <div>\n      <!-- @slot description of the named slot -->\n      <slot name=\"namedSlot\" />\n    </div>\n    <button @click=\"$emit('generic-event')\">Click to fire generic-event</button>\n  </div>\n</template>\n\n<script>\nimport {} from './test_component_constants';\n\nexport default {\n  name: 'DtTestComponent',\n\n  components: {},\n\n  mixins: [],\n\n  /* inheritAttrs: false is generally an option we want to set on library\n    components. This allows any attributes passed in that are not recognized\n    as props to be passed down to another element or component using v-bind:$attrs\n    more info: https://vuejs.org/v2/api/#inheritAttrs */\n  // inheritAttrs: false,\n\n  props: {\n    /**\n     * description of this generic prop\n     */\n    genericProp: {\n      type: String,\n      default: 'a generic prop'\n    }\n  },\n\n  emits: [\n    /**\n     * Event fired when something happens\n     *\n     * @event generic-event\n     * @type {Boolean}\n     */\n    'generic-event'\n  ],\n\n  data () {\n    return {};\n  },\n\n  computed: {},\n\n  watch: {},\n\n  methods: {},\n};\n</script>\n\n<style lang=\"less\">\n\n</style>\n","<!-- Use this template story to allow the user control the component's props and slots -->\n<template>\n  <!--\n    We can bind the data that the user entered into the storybook controls to props by using a property of the same name\n    as the storybook control defined in the corresponding `.story.js` file.\n  -->\n  <dt-test-component\n    :generic-prop=\"$attrs.genericProp\"\n    @generic-event=\"$attrs.onGenericEvent\"\n  >\n    <!--\n      We can also bind any slot data that the user has entered into the storybook controls. In this example we\n      conditionally render slots using a custom storybook control defined in the corresponding `.story.js`.\n\n      The preferred naming scheme for storybook slot controls uses the following format `<SLOT_NAME>Slot`.\n\n      We use this storybook control naming scheme to prevent conflicts between controls for props and slots with the\n      same name.\n    -->\n    <template v-if=\"defaultSlot\">\n      <span v-html=\"defaultSlot\" />\n    </template>\n    <template\n      v-if=\"namedSlot\"\n      #namedSlot\n    >\n      <span v-html=\"namedSlot\" />\n    </template>\n  </dt-test-component>\n</template>\n\n<script>\nimport DtTestComponent from './test_component.vue';\n\nexport default {\n  name: 'DtTestComponentDefault',\n  components: { DtTestComponent },\n};\n</script>\n","<!-- Use this template story to allow the user control the component's props and slots -->\n<template>\n  <!--\n    We can bind the data that the user entered into the storybook controls to props by using a property of the same name\n    as the storybook control defined in the corresponding `.story.js` file.\n  -->\n  <dt-test-component\n    :generic-prop=\"$attrs.genericProp\"\n    @generic-event=\"$attrs.onGenericEvent\"\n  >\n    <!--\n      We can also bind any slot data that the user has entered into the storybook controls. In this example we\n      conditionally render slots using a custom storybook control defined in the corresponding `.story.js`.\n\n      The preferred naming scheme for storybook slot controls uses the following format `<SLOT_NAME>Slot`.\n\n      We use this storybook control naming scheme to prevent conflicts between controls for props and slots with the\n      same name.\n    -->\n    <template v-if=\"defaultSlot\">\n      <span v-html=\"defaultSlot\" />\n    </template>\n    <template\n      v-if=\"namedSlot\"\n      #namedSlot\n    >\n      <span v-html=\"namedSlot\" />\n    </template>\n  </dt-test-component>\n</template>\n\n<script>\nimport DtTestComponent from './test_component.vue';\n\nexport default {\n  name: 'DtTestComponentVariants',\n  components: { DtTestComponent },\n};\n</script>\n"],"names":["_sfc_main","_createElementBlock","_createElementVNode","$props","_createCommentVNode","_renderSlot","_ctx","DtTestComponent","_createVNode","_component_dt_test_component","_hoisted_2"],"mappings":"wOAsBA,MAAKA,EAAU,CACb,KAAM,kBAEN,WAAY,CAAE,EAEd,OAAQ,CAAE,EAQV,MAAO,CAIL,YAAa,CACX,KAAM,OACN,QAAS,gBACX,CACD,EAED,MAAO,CAOL,eACD,EAED,MAAQ,CACN,MAAO,EACR,EAED,SAAU,CAAE,EAEZ,MAAO,CAAE,EAET,QAAS,CAAE,CACb,qCA/DEC,EAeM,MAAA,KAAA,CAdJC,EAEM,aADDC,EAAW,WAAA,EAAA,CAAA,EAEhBD,EAKM,MAAA,KAAA,CAJJE,EAA8C,yCAAA,EAC9CC,EAEOC,sBAFP,IAEO,GAFD,oBAEN,MAEFJ,EAGM,MAAA,KAAA,CAFJE,EAA4C,uCAAA,EAC5CC,EAAyBC,EAAA,OAAA,WAAA,IAE3BJ,EAA4E,SAAA,CAAnE,uBAAOI,EAAK,MAAA,eAAA,IAAmB,6BAA2B,2sBCmBvE,MAAKN,EAAU,CACb,KAAM,yBACN,WAAY,CAAE,gBAAAO,CAAiB,CACjC,8GAnCEH,EAGG;AAAA;AAAA;AAAA,GAAA,EACHI,EAsBoBC,EAAA,CArBjB,eAAcH,EAAM,OAAC,YACrB,eAAeA,EAAM,OAAC,6BAWvB,IAEW,CAFKA,EAAW,iBACzBL,EAA6B,OAAA,OAAvB,UAAQK,EAAW,6CAGnBA,EAAS,gBACd,iBAED,IAA2B,CAA3BJ,EAA2B,OAAA,CAArB,UAAQI,EAAS,WAAA,KAAA,EAAAI,CAAA,8aCQ7B,MAAKV,EAAU,CACb,KAAM,0BACN,WAAY,CAAE,gBAAAO,CAAiB,CACjC,8GAnCEH,EAGG;AAAA;AAAA;AAAA,GAAA,EACHI,EAsBoBC,EAAA,CArBjB,eAAcH,EAAM,OAAC,YACrB,eAAeA,EAAM,OAAC,6BAWvB,IAEW,CAFKA,EAAW,iBACzBL,EAA6B,OAAA,OAAvB,UAAQK,EAAW,6CAGnBA,EAAS,gBACd,iBAED,IAA2B,CAA3BJ,EAA2B,OAAA,CAArB,UAAQI,EAAS,WAAA,KAAA,EAAAI,CAAA;;;;;;"}