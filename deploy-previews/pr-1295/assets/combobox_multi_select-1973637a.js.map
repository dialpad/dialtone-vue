{"version":3,"file":"combobox_multi_select-1973637a.js","sources":["../../recipes/comboboxes/combobox_multi_select/combobox_multi_select_story_constants.js","../../recipes/comboboxes/combobox_multi_select/combobox_multi_select.vue"],"sourcesContent":["// The item list for default story\nexport const ITEMS_LIST_DATA = [\n  { id: 'item1', value: 'item1', type: 'MAINLINE' },\n  { id: 'item2', value: 'item2', type: 'MAINLINE' },\n  { id: 'item3', value: 'item3', type: 'MAINLINE' },\n  { id: 'item4', value: 'item4', type: 'MAINLINE' },\n  { id: 'item5', value: 'item5', type: 'MAINLINE' },\n  { id: 'item6', value: 'item6', type: 'MAINLINE' },\n  { id: 'item7', value: 'item7', type: 'MAINLINE' },\n  { id: 'item8', value: 'item8', type: 'Other' },\n  { id: 'item9', value: 'item9', type: 'MAINLINE' },\n  { id: 'item10', value: 'item10', type: 'MAINLINE' },\n  { id: 'item11', value: 'item11', type: 'MAINLINE' },\n  { id: 'item12', value: 'item12', type: 'Other' },\n  { id: 'item13', value: 'item13', type: 'MAINLINE' },\n  { id: 'item14', value: 'item14', type: 'MAINLINE' },\n  { id: 'item15', value: 'item15', type: 'MAINLINE' },\n  { id: 'item16', value: 'item16', type: 'MAINLINE' },\n  { id: 'item17', value: 'item17', type: 'MAINLINE' },\n  { id: 'item18', value: 'item18', type: 'Other' },\n  { id: 'item19', value: 'item19', type: 'MAINLINE' },\n  { id: 'item20', value: 'item20', type: 'MAINLINE' },\n  { id: 'item21', value: 'item21', type: 'MAINLINE' },\n  { id: 'item22', value: 'item22', type: 'Other' },\n];\n\nexport const MULTI_SELECT_SIZES = {\n  // Chip has no 'lg' and 'xl' size. So we don't support that in multi-select.\n  EXTRA_SMALL: 'xs',\n  SMALL: 'sm',\n  DEFAULT: 'md',\n};\n\nexport const CHIP_SIZES = {\n  xs: 'xs',\n  sm: 'xs',\n  md: 'sm',\n};\n\nexport const CHIP_TOP_POSITION = {\n  xs: 1.4,\n  sm: 0.4,\n  md: 0.2,\n};\n","<!-- eslint-disable max-lines -->\n<template>\n  <dt-recipe-combobox-with-popover\n    ref=\"comboboxWithPopover\"\n    :label=\"label\"\n    :show-list=\"showList\"\n    :max-height=\"listMaxHeight\"\n    :popover-offset=\"popoverOffset\"\n    :has-suggestion-list=\"hasSuggestionList\"\n    :visually-hidden-close-label=\"visuallyHiddenCloseLabel\"\n    :visually-hidden-close=\"visuallyHiddenClose\"\n    content-width=\"anchor\"\n    :append-to=\"appendTo\"\n    :transition=\"transition\"\n    @select=\"onComboboxSelect\"\n  >\n    <template #input=\"{ onInput }\">\n      <span\n        ref=\"inputSlotWrapper\"\n        class=\"d-ps-relative d-d-block\"\n      >\n        <span\n          ref=\"chipsWrapper\"\n          class=\"d-ps-absolute d-mx2 d-pl1\"\n        >\n          <dt-chip\n            v-for=\"item in selectedItems\"\n            ref=\"chips\"\n            :key=\"item\"\n            :label-class=\"['d-chip__label']\"\n            :class=\"['d-mt4', 'd-mx2', 'd-zi-base1']\"\n            :close-button-props=\"{ ariaLabel: 'close' }\"\n            :size=\"CHIP_SIZES[size]\"\n            v-on=\"chipListeners\"\n            @keyup.backspace=\"onChipRemove(item)\"\n            @close=\"onChipRemove(item)\"\n          >\n            {{ item }}\n          </dt-chip>\n        </span>\n\n        <dt-input\n          ref=\"input\"\n          v-model=\"value\"\n          class=\"d-fl-grow1\"\n          :aria-label=\"label\"\n          :label=\"labelVisible ? label : ''\"\n          :description=\"description\"\n          :placeholder=\"inputPlaceHolder\"\n          :show-messages=\"showInputMessages\"\n          :messages=\"inputMessages\"\n          :size=\"size\"\n          v-on=\"inputListeners\"\n          @input=\"onInput\"\n        />\n\n        <dt-validation-messages\n          :validation-messages=\"maxSelectedMessage\"\n          :show-messages=\"showValidationMessages\"\n        />\n      </span>\n    </template>\n\n    <!-- @slot slot for popover header -->\n    <template\n      v-if=\"hasSlotContent($slots.header)\"\n      #header\n    >\n      <div\n\n        ref=\"header\"\n      >\n        <slot\n          name=\"header\"\n        />\n      </div>\n    </template>\n\n    <!-- @slot slot for popover list -->\n    <template #list>\n      <div\n        ref=\"list\"\n        @mousedown.prevent\n      >\n        <slot\n          v-if=\"!loading\"\n          name=\"list\"\n        />\n        <div\n          v-else\n          class=\"d-ta-center d-py16\"\n        >\n          {{ loadingMessage }}\n        </div>\n      </div>\n    </template>\n\n    <!-- @slot slot for popover footer -->\n    <template\n      v-if=\"hasSlotContent($slots.footer)\"\n      #footer\n    >\n      <div\n        ref=\"footer\"\n      >\n        <slot\n          name=\"footer\"\n        />\n      </div>\n    </template>\n  </dt-recipe-combobox-with-popover>\n</template>\n\n<script>\nimport DtRecipeComboboxWithPopover from '@/recipes/comboboxes/combobox_with_popover/combobox_with_popover.vue';\nimport DtInput from '@/components/input/input.vue';\nimport DtChip from '@/components/chip/chip.vue';\nimport DtValidationMessages from '@/components/validation_messages/validation_messages.vue';\nimport { validationMessageValidator } from '@/common/validators';\nimport { hasSlotContent } from '@/common/utils';\nimport {\n  POPOVER_APPEND_TO_VALUES,\n} from '@/components/popover/popover_constants';\nimport {\n  MULTI_SELECT_SIZES,\n  CHIP_SIZES,\n  CHIP_TOP_POSITION,\n} from './combobox_multi_select_story_constants';\nimport SrOnlyCloseButtonMixin from '../../../common/mixins/sr_only_close_button';\n\nexport default {\n  name: 'DtRecipeComboboxMultiSelect',\n\n  components: {\n    DtRecipeComboboxWithPopover,\n    DtInput,\n    DtChip,\n    DtValidationMessages,\n  },\n\n  mixins: [SrOnlyCloseButtonMixin],\n\n  props: {\n    /**\n     * String to use for the input label.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * Determines visibility of input label.\n     * @values true, false\n     */\n    labelVisible: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Description for the input\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Input placeholder\n     */\n    placeholder: {\n      type: String,\n      default: 'Select one or start typing',\n    },\n\n    /**\n     * Input validation messages\n     */\n    inputMessages: {\n      type: Array,\n      default: () => [],\n      validator: inputMessages => {\n        return validationMessageValidator(inputMessages);\n      },\n    },\n\n    /**\n     * Show input validation message\n     */\n    showInputMessages: {\n      type: Boolean,\n      default: true,\n    },\n\n    // @TODO: https://dialpad.atlassian.net/browse/DP-52324\n    // type: {\n    //   type: String,\n    //   values: ['input', 'select'],\n    //   default: 'select',\n    // },\n\n    /**\n     * Determines if the list is loading\n     */\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * The message when the list is loading\n     */\n    loadingMessage: {\n      type: String,\n      default: 'loading...',\n    },\n\n    /**\n     * Determines when to show the list element and also controls the aria-expanded attribute.\n     * Leaving this null will have the combobox trigger on input focus by default.\n     * If you set this value, the default trigger behavior will be disabled and you can\n     * control it as you need.\n     */\n    showList: {\n      type: Boolean,\n      default: null,\n    },\n\n    /**\n     * Determines maximum height for the popover before overflow.\n     * Possible units rem|px|em\n     */\n    listMaxHeight: {\n      type: String,\n      default: '300px',\n    },\n\n    /**\n     * The selected items\n     */\n    selectedItems: {\n      type: Array,\n      default: function () { return []; },\n    },\n\n    /**\n     * Would be the maximum number of selections you can make. 0 is unlimited\n     */\n    maxSelected: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * Max select message when the max selections is exceeded with the structure:\n     * `[{\"message\": string, \"type\": VALIDATION_MESSAGE_TYPES }]`\n     */\n    maxSelectedMessage: {\n      type: Array,\n      default: function () { return []; },\n    },\n\n    /**\n     * Displays the list when the combobox is focused, before the user has typed anything.\n     * When this is enabled the list will not close after selection.\n     */\n    hasSuggestionList: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Size of the chip, one of `xs`, `sm`, `md`\n     */\n    size: {\n      type: String,\n      default: 'md',\n      validator: (t) => Object.values(MULTI_SELECT_SIZES).includes(t),\n    },\n\n    /**\n     * Sets the element to which the popover is going to append to.\n     * 'body' will append to the nearest body (supports shadow DOM).\n     * @values 'body', 'parent', HTMLElement,\n     */\n    appendTo: {\n      type: [HTMLElement, String],\n      default: 'body',\n      validator: appendTo => {\n        return POPOVER_APPEND_TO_VALUES.includes(appendTo) ||\n            (appendTo instanceof HTMLElement);\n      },\n    },\n\n    /**\n     * Named transition when the content display is toggled.\n     * @see DtLazyShow\n     */\n    transition: {\n      type: String,\n      default: 'fade',\n    },\n  },\n\n  emits: [\n    /**\n     * Native input event\n     *\n     * @event input\n     * @type {String }\n     */\n    'input',\n\n    /**\n     * Event fired when item selected\n     *\n     * @event select\n     * @type {Number}\n     */\n    'select',\n\n    /**\n     * Event fired when item removed\n     *\n     * @event remove\n     * @type {String}\n     */\n    'remove',\n\n    /**\n     * Event fired when max selected items limit is reached\n     *\n     * @event max-selected\n     * @type {Object}\n     */\n    'max-selected',\n\n    /**\n     * Native keyup event\n     *\n     * @event keyup\n     * @type {KeyboardEvent}\n      */\n    'keyup',\n  ],\n\n  data () {\n    return {\n      value: '',\n      popoverOffset: [0, 4],\n      showValidationMessages: false,\n      initialInputPadding: {},\n      resizeWindowObserver: null,\n      originalInputSize: null,\n      CHIP_SIZES,\n      hasSlotContent,\n    };\n  },\n\n  computed: {\n    inputPlaceHolder () {\n      return this.selectedItems?.length > 0 ? '' : this.placeholder;\n    },\n\n    chipListeners () {\n      return {\n        keyup: event => {\n          this.onChipKeyup(event);\n          this.$emit('keyup', event);\n        },\n      };\n    },\n\n    inputListeners () {\n      return {\n        input: event => {\n          this.$emit('input', event);\n          if (this.hasSuggestionList) {\n            this.showComboboxList();\n          }\n        },\n\n        keyup: event => {\n          this.onInputKeyup(event);\n          this.$emit('keyup', event);\n        },\n\n        click: event => {\n          if (this.hasSuggestionList) {\n            this.showComboboxList();\n          }\n        },\n      };\n    },\n  },\n\n  watch: {\n    selectedItems: {\n      deep: true,\n      handler: async function () {\n        this.initSelectedItems();\n      },\n    },\n\n    async label () {\n      await this.$nextTick();\n      // Adjust the chips position if label changed\n      this.setChipsTopPosition();\n    },\n\n    async description () {\n      await this.$nextTick();\n      // Adjust the chips position if description changed\n      this.setChipsTopPosition();\n    },\n\n    size: {\n      async handler () {\n        await this.$nextTick();\n        const input = this.getInput();\n        this.revertInputPadding(input);\n        this.originalInputSize = input.getBoundingClientRect().height;\n        this.setInputPadding();\n        this.setChipsTopPosition();\n      },\n    },\n  },\n\n  mounted () {\n    // Recalculate chip position and input padding when resizing window\n    this.resizeWindowObserver = new ResizeObserver(async () => {\n      this.setChipsTopPosition();\n      this.setInputPadding();\n    });\n    this.resizeWindowObserver.observe(document.body);\n\n    this.initSelectedItems();\n  },\n\n  beforeUnmount () {\n    this.resizeWindowObserver?.unobserve(document.body);\n  },\n\n  methods: {\n    async initSelectedItems () {\n      await this.$nextTick();\n      this.setInputPadding();\n      this.setChipsTopPosition();\n      this.setInputMinWidth();\n      this.checkMaxSelected();\n    },\n\n    onChipRemove (item) {\n      this.$emit('remove', item);\n      this.$refs.input?.focus();\n    },\n\n    onComboboxSelect (i) {\n      this.value = '';\n      this.$emit('select', i);\n    },\n\n    showComboboxList () {\n      if (this.showList != null) { return; }\n      this.$refs.comboboxWithPopover?.showComboboxList();\n    },\n\n    closeComboboxList () {\n      if (this.showList != null) { return; }\n      this.$refs.comboboxWithPopover?.closeComboboxList();\n    },\n\n    getChipButtons () {\n      return this.$refs.chips && this.$refs.chips.map(chip => chip.$el.querySelector('button'));\n    },\n\n    getChips () {\n      return this.$refs.chips && this.$refs.chips.map(chip => chip.$el);\n    },\n\n    getLastChipButton () {\n      return this.$refs.chips && this.getChipButtons()[this.getChipButtons().length - 1];\n    },\n\n    getLastChip () {\n      return this.$refs.chips && this.getChips()[this.getChips().length - 1];\n    },\n\n    getFirstChip () {\n      return this.$refs.chips && this.getChips()[0];\n    },\n\n    getInput () {\n      return this.$refs.input?.$refs.input;\n    },\n\n    onChipKeyup (event) {\n      const key = event.code?.toLowerCase();\n      if (key === 'arrowleft') {\n        // Move to the previous chip\n        this.navigateBetweenChips(event.target, true);\n      } else if (key === 'arrowright') {\n        if (event.target.id === this.getLastChipButton().id) {\n          // Move to the input if it's the last chip\n          this.moveFromChipToInput();\n        } else {\n          // Move to the next chip\n          this.navigateBetweenChips(event.target, false);\n        }\n      }\n    },\n\n    onInputKeyup (event) {\n      const key = event.code?.toLowerCase();\n      // If the cursor is at the start of the text,\n      // press 'backspace' or 'left' focuses the last chip\n      if (this.selectedItems.length > 0 && event.target.selectionStart === 0) {\n        if (key === 'backspace' || key === 'arrowleft') {\n          this.moveFromInputToChip();\n        }\n      }\n    },\n\n    moveFromInputToChip () {\n      this.getLastChipButton().focus();\n      this.$refs.input?.blur();\n      this.closeComboboxList();\n    },\n\n    moveFromChipToInput () {\n      this.getLastChipButton().blur();\n      this.$refs.input?.focus();\n      this.showComboboxList();\n    },\n\n    navigateBetweenChips (target, toLeft) {\n      const from = this.getChipButtons().indexOf(target);\n      const to = toLeft ? from - 1 : from + 1;\n      if (to < 0 || to >= this.$refs.chips?.length) {\n        return;\n      }\n      this.getChipButtons()[from].blur();\n      this.getChipButtons()[to].focus();\n      this.closeComboboxList();\n    },\n\n    setChipsTopPosition () {\n      // To place the chips in the input box\n      // The chip \"top\" position should be the same line as the input box\n      const input = this.getInput();\n      if (!input) return;\n      const inputSlotWrapper = this.$refs.inputSlotWrapper;\n      const top = input.getBoundingClientRect().top -\n                  inputSlotWrapper.getBoundingClientRect().top;\n      const chipsWrapper = this.$refs.chipsWrapper;\n      chipsWrapper.style.top = (top - CHIP_TOP_POSITION[this.size]) + 'px';\n    },\n\n    setInputPadding () {\n      const lastChip = this.getLastChip();\n      const input = this.getInput();\n      const chipsWrapper = this.$refs.chipsWrapper;\n      if (!input) return;\n      this.revertInputPadding(input);\n      this.popoverOffset = [0, 4];\n      if (!lastChip) return;\n\n      // Get the position of the last chip\n      // The input cursor should be the same \"top\" as that chip and next besides it\n      const left = lastChip.offsetLeft + this.getFullWidth(lastChip);\n      input.style.paddingLeft = left + 'px';\n\n      // Get the chip size minus the 4px padding\n      const chipsSize = chipsWrapper.getBoundingClientRect().height - 4;\n\n      // Get lastChip offsetTop plus 2px of the input padding.\n      const top = lastChip.offsetTop + 2;\n\n      // Add padding to Top only if the chips need more space\n      if (chipsSize > this.originalInputSize) {\n        input.style.paddingTop = `${top}px`;\n      }\n    },\n\n    revertInputPadding (input) {\n      input.style.paddingLeft = '';\n      input.style.paddingTop = '';\n      input.style.paddingBottom = '';\n    },\n\n    getFullWidth (el) {\n      const styles = window.getComputedStyle(el);\n      return el.offsetWidth + parseInt(styles.marginLeft) + parseInt(styles.marginRight);\n    },\n\n    setInputMinWidth () {\n      // Ensure the width of the input is \"slightly bigger\" than the width of a single chip\n      const firstChip = this.getFirstChip();\n      const input = this.getInput();\n      if (!input) return;\n      if (firstChip) {\n        // Add 4px buffer for typing room\n        input.style.minWidth = (this.getFullWidth(firstChip) + 4) + 'px';\n      } else {\n        input.style.minWidth = '';\n      }\n    },\n\n    checkMaxSelected () {\n      if (this.maxSelected === 0) return;\n      if (this.selectedItems.length > this.maxSelected) {\n        this.showValidationMessages = true;\n        this.$emit('max-selected');\n      } else {\n        this.showValidationMessages = false;\n      }\n    },\n  },\n};\n</script>\n"],"names":["ITEMS_LIST_DATA","MULTI_SELECT_SIZES","CHIP_SIZES","CHIP_TOP_POSITION","_sfc_main","DtRecipeComboboxWithPopover","DtInput","DtChip","DtValidationMessages","SrOnlyCloseButtonMixin","inputMessages","validationMessageValidator","t","appendTo","POPOVER_APPEND_TO_VALUES","hasSlotContent","_a","event","input","item","i","chip","key","target","toLeft","from","to","inputSlotWrapper","top","chipsWrapper","lastChip","left","chipsSize","el","styles","firstChip","_hoisted_3","_hoisted_5","_createBlock","_component_dt_recipe_combobox_with_popover","$props","$data","_ctx","$options","_withCtx","onInput","_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","_openBlock","_component_dt_chip","_mergeProps","_toHandlers","_withKeys","$event","_createVNode","_component_dt_input","_component_dt_validation_messages","_hoisted_4","_toDisplayString","_renderSlot"],"mappings":"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"}