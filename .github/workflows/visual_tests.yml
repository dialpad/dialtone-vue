name: Visual Tests

on:
  push:
    branches: [ staging, staging-vue3 ]
  pull_request:
    types: [ labeled, synchronize ]
  pull_request_review:
    types: [submitted]

env:
  NODE_MODULES_CACHE_VERSION: v2
  STORYBOOK_ROOT: ./storybook

jobs:

  label_when_approved:
    if: github.event_name == 'pull_request_review'
    runs-on: ubuntu-latest
    steps:
      - name: Set Label When Approved
        uses: TobKed/label-when-approved-action@v1.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: 'visual-test-ready'


  visual_tests:
    if: github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'visual-test-ready')

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    runs-on: ubuntu-latest

    steps:
      - name: Check out branch
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Use Library Cache
        id: library-cache
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules/
            ~/.npm
          key: ${{ format('{0}-dialtone-vue-library-node-modules-{1}-{2}', runner.os, env.NODE_MODULES_CACHE_VERSION, hashFiles(format('package-lock.json'))) }}

      - name: Use Documentation Cache
        id: doc-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.STORYBOOK_ROOT }}/node_modules/
          key: ${{ format('{0}-dialtone-vue-documentation-node-modules-{1}-{2}', runner.os, env.NODE_MODULES_CACHE_VERSION, hashFiles(format('{0}/package-lock.json', env.STORYBOOK_ROOT))) }}

      - name: Install Library Dependencies
        if: steps.library-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Docs Dependencies
        if: steps.doc-cache.outputs.cache-hit != 'true'
        run: npm run storybook:install

      - name: Build Storybook
        run: npm run storybook:build

      - name: Run Visual Tests
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_TARGET_BRANCH: ${{ github.base_ref }}
        run: npx percy storybook --config percy.config.js --verbose storybook/compiled
