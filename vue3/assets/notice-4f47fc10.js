import{D as b}from"./icon-cde06ed8.js";import{o as a,e as u,i as o,d,j as m,a as s,q as D,t as V,f as B,b as v,w as r,m as w,n as O}from"./vue.esm-bundler-8a039e44.js";import{h as _}from"./utils-8607998d.js";import{_ as f}from"./_plugin-vue_export-helper-c27b6911.js";import{D as x}from"./button-99271aa3.js";import{a as P,S as g}from"./sr_only_close_button-27ef53a8.js";const C=["base","error","info","success","warning"],$=["alert","alertdialog","status"],H=new Map([["info","info"],["success","check-circle"],["warning","alert-triangle"],["error","alert-circle"],["base","bell"]]),k={name:"DtNoticeIcon",components:{DtIcon:b},props:{kind:{type:String,default:"base",validate(e){return C.includes(e)}}},data(){return{hasSlotContent:_}},computed:{defaultIcon(){return H.get(this.kind)}}},j={key:0,"aria-hidden":"true",class:"d-notice__icon"};function L(e,i,t,p,l,n){const c=s("dt-icon");return n.defaultIcon||l.hasSlotContent(e.$slots.default)?(a(),u("div",j,[o(e.$slots,"default",{},()=>[d(c,{name:n.defaultIcon,size:"400"},null,8,["name"])])])):m("",!0)}const E=f(k,[["render",L]]);k.__docgenInfo={displayName:"DtNoticeIcon",exportName:"default",description:"",tags:{},props:[{name:"kind",description:"Kind of icon",tags:{},values:["base","error","info","success","warning"],type:{name:"string"},defaultValue:{func:!1,value:"'base'"}}],slots:[{name:"default",description:"Slot for the main content"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/notice/notice_icon.vue"]};const I={name:"DtNoticeContent",props:{title:{type:String,default:""},titleId:{type:String,default:void 0},contentId:{type:String,default:void 0}},data(){return{hasSlotContent:_}}},q={class:"d-notice__content","data-qa":"notice-content"},T=["id"],F=["id"];function U(e,i,t,p,l,n){return a(),u("div",q,[t.title||l.hasSlotContent(e.$slots.titleOverride)?(a(),u("p",{key:0,id:t.titleId,class:"d-notice__title","data-qa":"notice-content-title"},[o(e.$slots,"titleOverride",{},()=>[D(V(t.title),1)])],8,T)):m("",!0),B("p",{id:t.contentId,class:"d-notice__message","data-qa":"notice-content-message"},[o(e.$slots,"default")],8,F)])}const A=f(I,[["render",U]]);I.__docgenInfo={displayName:"DtNoticeContent",exportName:"default",description:"",tags:{},props:[{name:"title",description:"Title header of the notice. This can be left blank to remove the title from the notice entirely.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"titleId",description:`ID for the title element of the component. Useful for aria-describedby
or aria-labelledby or any other reason you may need an id to refer to the title.`,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"contentId",description:`ID for the content element of the component. Useful for aria-describedby
or aria-labelledby or any other reason you may need an id to refer to the content.`,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}}],slots:[{name:"titleOverride",description:"Slot for the title"},{name:"default",description:"Slot for main content"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/notice/notice_content.vue"]};const S={name:"DtNoticeAction",components:{DtIcon:b,DtButton:x,SrOnlyCloseButton:P},mixins:[g],props:{closeButtonProps:{type:Object,default:()=>({})},hideClose:{type:Boolean,default:!1}},emits:["close"],created(){!this.hideClose&&!this.closeButtonProps.ariaLabel&&console.error("Invalid props: you must pass in closeButtonProps.ariaLabel if the close button is displayed.")},mounted(){this.hideClose||(this.lastFocusedElement=document.activeElement)},beforeUnmount(){var e;(e=this.lastFocusedElement)==null||e.focus()},methods:{close(){this.$emit("close")}}},K={class:"d-notice__actions","data-qa":"notice-content-actions"};function z(e,i,t,p,l,n){const c=s("dt-icon"),h=s("dt-button"),y=s("sr-only-close-button");return a(),u("div",K,[o(e.$slots,"default"),t.hideClose?m("",!0):(a(),v(h,w({key:0,ref:"closeButton","data-qa":"dt-notice-action-close-button",size:"sm",importance:"clear",circle:"","aria-label":t.closeButtonProps.ariaLabel?t.closeButtonProps.ariaLabel:"Close"},t.closeButtonProps,{onClick:n.close}),{icon:r(()=>[d(c,{name:"close",size:"200"})]),_:1},16,["aria-label","onClick"])),e.showVisuallyHiddenClose?(a(),v(y,{key:1,"visually-hidden-close-label":e.visuallyHiddenCloseLabel,onClose:n.close},null,8,["visually-hidden-close-label","onClose"])):m("",!0)])}const R=f(S,[["render",z]]);S.__docgenInfo={description:"",displayName:"DtNoticeAction",tags:{},exportName:"default",props:[{name:"visuallyHiddenClose",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"If true, a hidden close button is included for screen readers",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"visuallyHiddenCloseLabel",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"Label for the visually hidden close button\nRequired if visuallyHiddenClose is set to `true`",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"closeButtonProps",description:"Props for the notice close button.",type:{name:"object"},defaultValue:{func:!1,value:"{}"}},{name:"hideClose",description:"Hides the close button from the notice",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"close",description:"Close button click event"}],slots:[{name:"default",description:"Slot for main content"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/common/mixins/sr_only_close_button.js","/home/runner/work/dialtone-vue/dialtone-vue/components/notice/notice_action.vue"]};const N={name:"DtNotice",components:{DtNoticeIcon:E,DtNoticeContent:A,DtNoticeAction:R},mixins:[g],props:{titleId:{type:String,default:void 0},contentId:{type:String,default:void 0},title:{type:String,default:""},role:{type:String,default:"status",validate(e){return $.includes(e)}},important:{type:Boolean,default:!1},kind:{type:String,default:"base",validate(e){return C.includes(e)}},closeButtonProps:{type:Object,default:()=>({})},hideClose:{type:Boolean,default:!1}},emits:["close","click"],computed:{noticeClass(){return["d-notice",{error:"d-notice--error",info:"d-notice--info",success:"d-notice--success",warning:"d-notice--warning",base:"d-notice--base"}[this.kind],{"d-notice--important":this.important}]}}};function M(e,i,t,p,l,n){const c=s("dt-notice-icon"),h=s("dt-notice-content"),y=s("dt-notice-action");return a(),u("aside",{class:O(n.noticeClass),"data-qa":"notice"},[d(c,{kind:t.kind},{default:r(()=>[o(e.$slots,"icon")]),_:3},8,["kind"]),d(h,{"title-id":t.titleId,"content-id":t.contentId,title:t.title,role:t.role},{titleOverride:r(()=>[o(e.$slots,"titleOverride")]),default:r(()=>[o(e.$slots,"default")]),_:3},8,["title-id","content-id","title","role"]),d(y,{"hide-close":t.hideClose,"close-button-props":t.closeButtonProps,"visually-hidden-close":e.visuallyHiddenClose,"visually-hidden-close-label":e.visuallyHiddenCloseLabel,onClose:i[0]||(i[0]=G=>e.$emit("close"))},{default:r(()=>[o(e.$slots,"action")]),_:3},8,["hide-close","close-button-props","visually-hidden-close","visually-hidden-close-label"])],2)}const ee=f(N,[["render",M]]);N.__docgenInfo={description:"A notice is an informational and assistive message that appears inline with content.",displayName:"DtNotice",tags:{see:[{description:"https://dialpad.design/components/notice.html",title:"see"}]},exportName:"default",props:[{name:"visuallyHiddenClose",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"If true, a hidden close button is included for screen readers",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"visuallyHiddenCloseLabel",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"Label for the visually hidden close button\nRequired if visuallyHiddenClose is set to `true`",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"titleId",description:`Sets an ID on the title element of the component. Useful for aria-describedby
or aria-labelledby or any other reason you may need an id to refer to the title.`,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"contentId",description:`Sets an ID on the content element of the component. Useful for aria-describedby
or aria-labelledby or any other reason you may need an id to refer to the content.`,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"title",description:"Title header of the notice. This can be left blank to remove the title from the notice entirely.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"role",description:`Provides a role for the notice. 'status' is used to communicate a message. 'alert' is used to communicate an
important message that does not contain any interactive elements. 'alertdialog' is used to communicate an
important message that does contain interactive elements.`,tags:{},values:["alert","alertdialog","status"],type:{name:"string"},defaultValue:{func:!1,value:"'status'"}},{name:"important",description:`Used in scenarios where the message needs to visually dominate the screen.
This will also change the aria role from status to alert.`,tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"kind",description:"Severity level of the notice, sets the icon and background",tags:{},values:["base","error","info","success","warning"],type:{name:"string"},defaultValue:{func:!1,value:"'base'"}},{name:"closeButtonProps",description:"Props for the notice close button.",type:{name:"object"},defaultValue:{func:!1,value:"{}"}},{name:"hideClose",description:"Hides the close button from the notice",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"close",description:"Close button click event"},{name:"click",description:"Native button click event",type:{names:["PointerEvent | KeyboardEvent"]}}],slots:[{name:"icon",description:"Slot for custom icon"},{name:"titleOverride",description:"Allows you to override the title, only use this if you need"},{name:"default",description:"the main textual content of the notice"},{name:"action",description:"Enter a possible action for the user to take, such as a link to another page"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/common/mixins/sr_only_close_button.js","/home/runner/work/dialtone-vue/dialtone-vue/components/notice/notice.vue"]};export{E as D,C as N,A as a,R as b,ee as c,$ as d};
//# sourceMappingURL=notice-4f47fc10.js.map
