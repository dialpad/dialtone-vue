{"version":3,"file":"toggle.stories-f704ad24.js","sources":["../../components/toggle/toggle_constants.js","../../components/toggle/toggle.vue","../../components/toggle/toggle_default.story.vue","../../components/toggle/toggle_variants.story.vue"],"sourcesContent":["export const TOGGLE_SIZE_MODIFIERS = {\n  sm: 'd-toggle--small',\n  md: '',\n};\n\nexport const TOGGLE_CHECKED_VALUES = [false, true, 'mixed'];\n\nexport default {\n  TOGGLE_SIZE_MODIFIERS,\n};\n","<template>\n  <div class=\"d-d-flex d-ai-center\">\n    <label\n      v-if=\"hasSlotContent($slots.default)\"\n      :class=\"labelClass\"\n      :for=\"id\"\n      v-bind=\"labelChildProps\"\n      data-qa=\"toggle-label\"\n    >\n      <!-- @slot Slot for the main content -->\n      <slot />\n    </label>\n    <button\n      :id=\"id\"\n      :role=\"toggleRole\"\n      type=\"button\"\n      :aria-checked=\"internalChecked.toString()\"\n      :disabled=\"disabled\"\n      :aria-disabled=\"disabled.toString()\"\n      :class=\"toggleClasses\"\n      v-bind=\"inputListeners\"\n    >\n      <span\n        v-if=\"showIcon\"\n        class=\"d-toggle__inner\"\n      />\n    </button>\n  </div>\n</template>\n\n<script>\nimport { warn } from 'vue';\nimport { getUniqueString, hasSlotContent } from '@/common/utils';\nimport { TOGGLE_CHECKED_VALUES, TOGGLE_SIZE_MODIFIERS } from '@/components/toggle/toggle_constants';\n\n/**\n * A toggle (or \"switch\") is a button control element that allows the user to make a binary (on/off) selection.\n * @see https://dialpad.design/components/toggle.html\n */\nexport default {\n\n  name: 'DtToggle',\n\n  inheritAttrs: false,\n\n  model: {\n    prop: 'checked',\n    event: 'change',\n  },\n\n  props: {\n\n    /**\n     * The id of the toggle\n     */\n    id: {\n      type: String,\n      default () { return getUniqueString(); },\n    },\n\n    /**\n     * Disables the toggle interactions\n     * @values true, false\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Value of the toggle\n     * @model checked\n     * @values true, false, 'mixed'\n     */\n    checked: {\n      type: [Boolean, String],\n      default: false,\n      validator: (v) => TOGGLE_CHECKED_VALUES.includes(v),\n    },\n\n    /**\n     * Whether the component toggles on click. If you set this to false it means you will handle the toggling manually\n     * via the checked prop or v-model. Change events will still be triggered.\n     * @values true, false\n     */\n    toggleOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * The size of the toggle.\n     * @values sm, md\n     */\n    size: {\n      type: String,\n      default: 'md',\n      validator: (s) => Object.keys(TOGGLE_SIZE_MODIFIERS).includes(s),\n    },\n\n    /**\n     * Shows the icon\n     * @values true, false\n     */\n    showIcon: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Used to customize the label container\n     */\n    labelClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * A set of props that are passed into the label container\n     */\n    labelChildProps: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  emits: [\n    /**\n     * Toggle change event\n     *\n     * @event change\n     * @type {Boolean}\n     * @model change\n     */\n    'change',\n  ],\n\n  data () {\n    return {\n      internalChecked: this.checked,\n      hasSlotContent,\n    };\n  },\n\n  computed: {\n    inputListeners () {\n      return {\n        ...this.$attrs,\n        onClick: _ => this.toggleCheckedValue(),\n      };\n    },\n\n    isIndeterminate () {\n      return this.internalChecked === 'mixed';\n    },\n\n    toggleRole () {\n      return this.isIndeterminate ? 'checkbox' : 'switch';\n    },\n\n    toggleClasses () {\n      return [\n        'd-toggle',\n        TOGGLE_SIZE_MODIFIERS[this.size],\n        {\n          'd-toggle--checked': this.internalChecked === true,\n          'd-toggle--disabled': this.disabled,\n          'd-toggle--indeterminate': this.isIndeterminate,\n        },\n      ];\n    },\n  },\n\n  watch: {\n    checked (newChecked) {\n      this.internalChecked = newChecked;\n    },\n  },\n\n  mounted () {\n    this.runValidations();\n  },\n\n  methods: {\n    toggleCheckedValue () {\n      this.$emit('change', !this.internalChecked);\n\n      if (this.toggleOnClick) {\n        this.internalChecked = !this.internalChecked;\n      }\n    },\n\n    hasSlotLabel () {\n      return !!(this.$slots.default);\n    },\n\n    runValidations () {\n      this.validateInputLabels(this.hasSlotLabel(), this.$attrs['aria-label']);\n    },\n\n    validateInputLabels (hasLabel, ariaLabel) {\n      if (!hasLabel && !ariaLabel) {\n        warn(\n          'You must provide an aria-label when there is no label passed',\n          this,\n        );\n      }\n    },\n  },\n};\n</script>\n","<template>\n  <dt-toggle\n    :checked=\"$attrs.checked\"\n    :disabled=\"$attrs.disabled\"\n    :size=\"$attrs.size\"\n    :show-icon=\"$attrs.showIcon\"\n    :label-class=\"$attrs.labelClass\"\n    :label-child-props=\"$attrs.labelChildProps\"\n    :toggle-on-click=\"$attrs.toggleOnClick\"\n    @change=\"$attrs.onChange\"\n  >\n    <span\n      v-if=\"defaultSlot\"\n      v-html=\"defaultSlot\"\n    />\n  </dt-toggle>\n</template>\n\n<script>\nimport DtToggle from './toggle.vue';\n\nexport default {\n  name: 'ToggleDefault',\n  components: { DtToggle },\n};\n</script>\n","<template>\n  <div id=\"components-toggle--variants-container\">\n    <!-- Unchecked Initially -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      label=\"Unchecked Initial\"\n    >\n      Checked Initial\n    </dt-toggle>\n\n    <!-- Checked Initially -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      label=\"Checked Initial\"\n      :checked=\"true\"\n    >\n      Checked Initial\n    </dt-toggle>\n\n    <!-- Indeterminate -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      checked=\"mixed\"\n    >\n      Indeterminate\n    </dt-toggle>\n\n    <!-- Checked Disabled -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      :checked=\"true\"\n      :disabled=\"true\"\n    >\n      Disabled Checked\n    </dt-toggle>\n\n    <!-- Unchecked Disabled -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      :disabled=\"true\"\n    >\n      Disabled Unchecked\n    </dt-toggle>\n\n    <!-- Indeterminate Disabled -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      checked=\"mixed\"\n      :disabled=\"true\"\n    >\n      Indeterminate Disabled\n    </dt-toggle>\n\n    <!-- With Flex grow -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-d-flex d-fl-grow1\"\n    >\n      With Flex Grow\n    </dt-toggle>\n\n    <!-- With Slots -->\n    <dt-toggle\n      class=\"d-mt6\"\n    >\n      <div class=\"d-mr6\">\n        With Slot Label\n      </div>\n    </dt-toggle>\n\n    <!-- With v-model -->\n    <dt-toggle\n      v-model=\"vModelValue\"\n      class=\"d-mt6\"\n    >\n      <div class=\"d-mr6\">\n        With V-Model\n      </div>\n    </dt-toggle>\n\n    <!-- Without icon -->\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      :show-icon=\"false\"\n    >\n      Without icon\n    </dt-toggle>\n\n    <dt-toggle\n      class=\"d-mt6\"\n      label-class=\"d-mr6\"\n      label=\"Small size\"\n      size=\"sm\"\n    >\n      Small size\n    </dt-toggle>\n  </div>\n</template>\n\n<script>\nimport DtToggle from './toggle.vue';\n\nexport default {\n  name: 'ToggleVariants',\n  components: { DtToggle },\n\n  data () {\n    return {\n      vModelValue: false,\n    };\n  },\n};\n</script>\n"],"names":["TOGGLE_SIZE_MODIFIERS","TOGGLE_CHECKED_VALUES","_sfc_main","getUniqueString","v","s","hasSlotContent","_","newChecked","hasLabel","ariaLabel","_hoisted_1","_openBlock","_createElementBlock","$data","_ctx","_mergeProps","$props","_renderSlot","_createElementVNode","$options","_hoisted_4","DtToggle","_createBlock","_component_dt_toggle","_hoisted_2","_hoisted_3","_createVNode","$event"],"mappings":"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"}