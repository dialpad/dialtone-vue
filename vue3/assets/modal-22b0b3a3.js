import{D as I}from"./button-86b4d8a0.js";import{D as A}from"./icon-a0437632.js";import{u as s,b as m,w as f,m as y,x as O,o as t,p as l,f as i,z as V,A as h,k as d,g as r,y as b,d as B,v as D,e as E,T}from"./vue.esm-bundler-3a08a304.js";import{M as j}from"./modal-f96ddab9.js";import{g as x,E as c,h as M}from"./utils-9b223a5d.js";import{D as N}from"./lazy_show-619994b0.js";import{a as F,S as L}from"./sr_only_close_button-5ac00187.js";import{N as P}from"./notice-0a41d5e7.js";import{_ as z}from"./_plugin-vue_export-helper-c27b6911.js";const p={default:"",danger:"d-modal--danger"},g={default:"",full:"d-modal--full"},_={error:"d-modal__banner--critical",info:"d-modal__banner--info",success:"d-modal__banner--success",warning:"d-modal__banner--warning",base:"d-modal__banner--general"},v={name:"DtModal",components:{DtLazyShow:N,DtButton:I,DtIcon:A,SrOnlyCloseButton:F},mixins:[j,L],props:{closeButtonProps:{type:Object,required:!0,validator:e=>!!e.ariaLabel},copy:{type:String,default:""},describedById:{type:String,default:""},labelledById:{type:String,default:function(){return x()}},show:{type:Boolean,default:!1},title:{type:String,default:""},bannerTitle:{type:String,default:""},kind:{type:String,default:"default",validator:e=>Object.keys(p).includes(e)},size:{type:String,default:"default",validator:e=>Object.keys(g).includes(e)},modalClass:{type:[String,Object,Array],default:""},dialogClass:{type:[String,Object,Array],default:""},contentClass:{type:[String,Object,Array],default:""},bannerKind:{type:String,default:"warning",validate(e){return P.includes(e)}},bannerClass:{type:[String,Object,Array],default:""},hideClose:{type:Boolean,default:!1},closeOnClick:{type:Boolean,default:!0},fixedHeaderFooter:{type:Boolean,default:!0}},emits:["click","keydown","update:show"],data(){return{MODAL_KIND_MODIFIERS:p,MODAL_SIZE_MODIFIERS:g,MODAL_BANNER_KINDS:_,EVENT_KEYNAMES:c,hasSlotContent:M}},computed:{modalListeners(){return{click:e=>{this.closeOnClick&&(e.target===e.currentTarget&&this.close(),this.$emit("click",e))},keydown:e=>{switch(e.code){case c.esc:case c.escape:this.close();break;case c.tab:this.trapFocus(e);break}this.$emit("keydown",e)},"after-enter":e=>{e.target===e.currentTarget&&this.setFocusAfterTransition()}}},open(){return`${!this.show}`},hasFooterSlot(){return!!this.$slots.footer},bannerKindClass(){return _[this.bannerKind]}},watch:{show:{immediate:!0,handler(e){var u;e?this.previousActiveElement=document.activeElement:((u=this.previousActiveElement)==null||u.focus(),this.previousActiveElement=null)}},$props:{immediate:!0,deep:!0,handler(){this.validateProps()}}},methods:{close(){this.$emit("update:show",!1)},setFocusAfterTransition(){this.focusFirstElement()},trapFocus(e){this.show&&this.focusTrappedTabPress(e)},validateProps(){this.hideClose&&!this.visuallyHiddenClose&&console.error(`If hideClose prop is true, visuallyHiddenClose and visuallyHiddenCloseLabel props
        need to be set so the component always includes a close button`)}}},H=["aria-describedby","aria-labelledby"],q=["id"],K=["id"],R={key:4,class:"d-modal__footer"};function U(e,u,a,W,o,n){const C=s("dt-icon"),w=s("dt-button"),S=s("sr-only-close-button"),k=s("dt-lazy-show");return t(),m(k,y({transition:"d-zoom",show:a.show,class:["d-modal",o.MODAL_KIND_MODIFIERS[a.kind],o.MODAL_SIZE_MODIFIERS[a.size],a.modalClass],"data-qa":"dt-modal","aria-hidden":n.open},O(n.modalListeners)),{default:f(()=>[a.show&&(o.hasSlotContent(e.$slots.banner)||a.bannerTitle)?(t(),l("div",{key:0,"data-qa":"dt-modal-banner",class:d(["d-modal__banner",a.bannerClass,n.bannerKindClass])},[i(e.$slots,"banner",{},()=>[V(h(a.bannerTitle),1)])],2)):r("",!0),b(T,{appear:"",name:"d-modal__dialog"},{default:f(()=>[B(E("div",{class:d(["d-modal__dialog",{"d-modal__dialog--scrollable":a.fixedHeaderFooter},a.dialogClass]),role:"dialog","aria-modal":"true","aria-describedby":a.describedById,"aria-labelledby":a.labelledById},[o.hasSlotContent(e.$slots.header)?(t(),l("div",{key:0,id:a.labelledById,class:"d-modal__header","data-qa":"dt-modal-title"},[i(e.$slots,"header")],8,q)):(t(),l("h2",{key:1,id:a.labelledById,class:"d-modal__header","data-qa":"dt-modal-title"},h(a.title),9,K)),o.hasSlotContent(e.$slots.default)?(t(),l("div",{key:2,class:d(["d-modal__content",a.contentClass]),"data-qa":"dt-modal-copy"},[i(e.$slots,"default")],2)):(t(),l("p",{key:3,class:d(["d-modal__content",a.contentClass]),"data-qa":"dt-modal-copy"},h(a.copy),3)),n.hasFooterSlot?(t(),l("footer",R,[i(e.$slots,"footer")])):r("",!0),a.hideClose?r("",!0):(t(),m(w,y({key:5,class:"d-modal__close",circle:"",size:"lg",importance:"clear","aria-label":a.closeButtonProps.ariaLabel},a.closeButtonProps,{onClick:n.close}),{icon:f(()=>[b(C,{name:"close",size:"400"})]),_:1},16,["aria-label","onClick"])),e.showVisuallyHiddenClose?(t(),m(S,{key:6,"visually-hidden-close-label":e.visuallyHiddenCloseLabel,onClose:n.close},null,8,["visually-hidden-close-label","onClose"])):r("",!0)],10,H),[[D,a.show]])]),_:3})]),_:3},16,["show","class","aria-hidden"])}const te=z(v,[["render",U]]);v.__docgenInfo={description:`Modals focus the userâ€™s attention exclusively on one task or piece of information
via a window that sits on top of the page content.`,displayName:"DtModal",tags:{see:[{description:"https://dialpad.design/components/modal.html",title:"see"}]},exportName:"default",props:[{name:"visuallyHiddenClose",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"If true, a hidden close button is included for screen readers",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"visuallyHiddenCloseLabel",mixin:{name:"Sr-Only close button mixin",path:"../../common/mixins/sr_only_close_button.js"},description:"Label for the visually hidden close button\nRequired if visuallyHiddenClose is set to `true`",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"closeButtonProps",description:`A set of props to be passed into the modal's close button.
Requires an 'ariaLabel' property.`,type:{name:"object"},required:!0},{name:"copy",description:"Body text to display as the modal's main content.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"describedById",description:`Id to use for the dialog's aria-describedby.
Recommended only if the dialog content itself isn't enough to give full context,
as screen readers should recite the dialog contents by default before any aria-description.`,type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"labelledById",description:"Id to use for the dialog's aria-labelledby.",type:{name:"string"},defaultValue:{func:!0,value:"function () { return getUniqueString(); }"}},{name:"show",description:`Whether the modal should be shown.
Parent component can sync on this value to control the modal's visibility.`,tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"title",description:"Title text to display in the modal header.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"bannerTitle",description:"Title text to display in the modal banner.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"kind",description:"The theme of the modal. kind - default or danger,",tags:{},values:["default","danger"],type:{name:"string"},defaultValue:{func:!1,value:"'default'"}},{name:"size",description:"The size of the modal. size - default or full,",tags:{},values:["default","full"],type:{name:"string"},defaultValue:{func:!1,value:"'default'"}},{name:"modalClass",description:`Additional class name for the root modal element.
Can accept String, Object, and Array, i.e. has the
same API as Vue's built-in handling of the class attribute.`,type:{name:"string|object|array"},defaultValue:{func:!1,value:"''"}},{name:"dialogClass",description:`Additional class name for the dialog element within the modal.
Can accept String, Object, and Array, i.e. has the
same API as Vue's built-in handling of the class attribute.`,type:{name:"string|object|array"},defaultValue:{func:!1,value:"''"}},{name:"contentClass",description:`Additional class name for the content element within the modal.
Can accept String, Object, and Array, i.e. has the
same API as Vue's built-in handling of the class attribute.`,type:{name:"string|object|array"},defaultValue:{func:!1,value:"''"}},{name:"bannerKind",description:"Sets the color of the banner.",tags:{},values:["base","error","info","success","warning"],type:{name:"string"},defaultValue:{func:!1,value:"'warning'"}},{name:"bannerClass",description:`Additional class name for the banner element within the modal.
Can accept String, Object, and Array, i.e. has the
same API as Vue's built-in handling of the class attribute.`,type:{name:"string|object|array"},defaultValue:{func:!1,value:"''"}},{name:"hideClose",description:"Hides the close button on the modal",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"closeOnClick",description:"Whether the modal will close when you click outside of the dialog on the overlay.",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"fixedHeaderFooter",description:"Scrollable modal that allows scroll the modal content keeping the header and footer fixed",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"true"}}],events:[{name:"click",description:"Native button click event",type:{names:["PointerEvent | KeyboardEvent"]}},{name:"keydown",description:"Native keydown event",type:{names:["KeyboardEvent"]}},{name:"update:show",description:`The modal will emit a "false" boolean value for this event when the user performs a modal-closing action.
Parent components can sync on this value to create a 2-way binding to control modal visibility.`,type:{names:["Boolean"]}}],slots:[{name:"banner",description:"Slot for the banner, defaults to bannerTitle prop"},{name:"header",description:'Slot for dialog header section, taking the place of any "title" text prop'},{name:"default",description:'Default slot for dialog body section, taking the place of any "copy" text prop'},{name:"footer",description:"Slot for dialog footer content, often containing cancel and confirm buttons."}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/common/mixins/modal.js","/home/runner/work/dialtone-vue/dialtone-vue/common/mixins/sr_only_close_button.js","/home/runner/work/dialtone-vue/dialtone-vue/components/modal/modal.vue"]};export{te as D,g as M,p as a};
//# sourceMappingURL=modal-22b0b3a3.js.map
