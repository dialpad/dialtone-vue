{"version":3,"file":"breadcrumbs.stories-d83d406f.js","sources":["../../components/breadcrumbs/breadcrumbs_constants.js","../../components/breadcrumbs/breadcrumb_item.vue","../../components/breadcrumbs/breadcrumbs.vue","../../components/breadcrumbs/breadcrumbs_default.story.vue","../../components/breadcrumbs/breadcrumbs_variants.story.vue"],"sourcesContent":["export const BREADCRUMB_ITEM_SELECTED_MODIFIER = 'd-breadcrumbs__item--selected';\nexport const BREADCRUMBS_INVERTED_MODIFIER = 'd-breadcrumbs--inverted';\n","<template>\n  <li\n    data-qa=\"dt-breadcrumb-item\"\n    :class=\"[\n      'd-breadcrumbs__item',\n      { [BREADCRUMB_ITEM_SELECTED_MODIFIER]: selected },\n    ]\"\n  >\n    <dt-link\n      :kind=\"linkKind\"\n      :aria-current=\"ariaCurrent\"\n      data-qa=\"breadcrumb-item\"\n      v-bind=\"$attrs\"\n    >\n      <!-- @slot default slot for breadcrumb item's label -->\n      <slot>\n        {{ label }}\n      </slot>\n    </dt-link>\n  </li>\n</template>\n\n<script>\nimport { BREADCRUMB_ITEM_SELECTED_MODIFIER } from './breadcrumbs_constants';\nimport { DtLink } from '../link';\nimport { INVERTED, MUTED } from '../link/link_constants';\n\nexport default {\n  name: 'DtBreadcrumbItem',\n\n  components: {\n    DtLink,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Passed through to link. If true, applies inverted styles to the link.\n     */\n    inverted: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Applies selected styles to the breadcrumb\n     */\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Describes the breadcrumb. Overridden by default slot\n     */\n    label: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      BREADCRUMB_ITEM_SELECTED_MODIFIER,\n    };\n  },\n\n  computed: {\n    linkKind () {\n      return this.inverted ? INVERTED : MUTED;\n    },\n\n    ariaCurrent () {\n      return this.selected ? 'location' : undefined;\n    },\n  },\n};\n</script>\n","<template>\n  <nav\n    :aria-label=\"ariaLabel\"\n    data-qa=\"dt-breadcrumbs\"\n    :class=\"[\n      'd-breadcrumbs',\n      { [BREADCRUMBS_INVERTED_MODIFIER]: inverted },\n    ]\"\n  >\n    <ol>\n      <!-- @slot default slot for breadcrumbs content -->\n      <slot>\n        <dt-breadcrumb-item\n          v-for=\"(item, index) in breadcrumbs\"\n          :key=\"getBreadcrumbItemKey(index)\"\n          :inverted=\"inverted\"\n          v-bind=\"item\"\n        />\n      </slot>\n    </ol>\n  </nav>\n</template>\n\n<script>\nimport { BREADCRUMBS_INVERTED_MODIFIER } from './breadcrumbs_constants';\nimport DtBreadcrumbItem from './breadcrumb_item.vue';\nimport util from '@/common/utils';\n\n/**\n * Breadcrumbs are links used to provide context for the currently-viewed page\n * and where it is located within the overall site structure.\n * @see https://dialpad.design/components/breadcrumbs.html\n */\nexport default {\n  name: 'DtBreadcrumbs',\n\n  components: {\n    DtBreadcrumbItem,\n  },\n\n  props: {\n    /**\n     * A provided list of breadcrumbs. Overridden by default slot\n     */\n    breadcrumbs: {\n      type: Array,\n      default: () => [],\n      validate (breadcrumbs) {\n        return breadcrumbs.every(({ href, label }) => {\n          return href !== undefined && label !== undefined;\n        });\n      },\n    },\n\n    /**\n     * Passed through to link. If true, applies inverted styles to the link.\n     * @values true, false\n     */\n    inverted: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Descriptive label for the navigation content.\n     */\n    ariaLabel: {\n      type: String,\n      default: 'breadcrumb',\n    },\n  },\n\n  data () {\n    return {\n      BREADCRUMBS_INVERTED_MODIFIER,\n    };\n  },\n\n  methods: {\n    getBreadcrumbItemKey (index) {\n      return `breadcrumbs-item-${index}-${util.getUniqueString()}`;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[\n      {\n        'd-bgc-purple-600': $attrs.inverted,\n      },\n    ]\"\n  >\n    <dt-breadcrumbs\n      class=\"d-py16 d-px12\"\n      :breadcrumbs=\"$attrs.breadcrumbs\"\n      :inverted=\"$attrs.inverted\"\n    >\n      <html-fragment\n        v-if=\"defaultSlot\"\n        :html=\"defaultSlot\"\n      />\n    </dt-breadcrumbs>\n  </div>\n</template>\n\n<script>\nimport DtBreadcrumbs from './breadcrumbs.vue';\nimport { htmlFragment } from '@/common/utils';\n\nexport default {\n  name: 'DtBreadcrumbsDefault',\n  components: { DtBreadcrumbs, htmlFragment },\n};\n</script>\n","<template>\n  <div>\n    <dt-breadcrumbs\n      class=\"d-py16 d-px12\"\n      :breadcrumbs=\"$attrs.breadcrumbs\"\n    />\n    <div class=\"d-bgc-purple-600 d-py16 d-px12\">\n      <dt-breadcrumbs\n        inverted\n        :breadcrumbs=\"$attrs.breadcrumbs\"\n      />\n    </div>\n\n    <dt-breadcrumbs\n      class=\"d-py16 d-px12\"\n    >\n      <dt-breadcrumb-item\n        v-for=\"(breadcrumb, idx) in $attrs.breadcrumbs\"\n        :key=\"breadcrumb.label + idx\"\n        v-bind=\"breadcrumb\"\n      />\n    </dt-breadcrumbs>\n  </div>\n</template>\n\n<script>\nimport DtBreadcrumbs from './breadcrumbs.vue';\nimport DtBreadcrumbItem from './breadcrumb_item.vue';\n\nexport default {\n  name: 'DtBreadcrumbsVariants',\n  components: { DtBreadcrumbs, DtBreadcrumbItem },\n};\n</script>\n"],"names":["BREADCRUMB_ITEM_SELECTED_MODIFIER","BREADCRUMBS_INVERTED_MODIFIER","_sfc_main","DtLink","INVERTED","MUTED","_createElementBlock","_normalizeClass","$data","$props","_createVNode","_component_dt_link","_mergeProps","$options","_ctx","_renderSlot","DtBreadcrumbItem","breadcrumbs","href","label","index","util","_createElementVNode","_openBlock","_Fragment","_renderList","item","_createBlock","_component_dt_breadcrumb_item","DtBreadcrumbs","htmlFragment","_component_dt_breadcrumbs","_component_html_fragment","_hoisted_1","breadcrumb","idx"],"mappings":"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"}