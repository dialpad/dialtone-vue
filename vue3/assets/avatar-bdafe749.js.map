{"version":3,"file":"avatar-bdafe749.js","sources":["../../components/avatar/avatar_constants.js","../../components/avatar/avatar.vue"],"sourcesContent":["export const AVATAR_SIZE_MODIFIERS = {\n  xs: 'd-avatar--xs',\n  sm: 'd-avatar--sm',\n  md: 'd-avatar--md',\n  lg: 'd-avatar--lg',\n  xl: 'd-avatar--xl',\n};\n\nexport const AVATAR_KIND_MODIFIERS = {\n  default: '',\n  icon: 'd-avatar__icon',\n  initials: 'd-avatar__initials',\n};\n\nexport const AVATAR_PRESENCE_SIZE_MODIFIERS = {\n  md: 'd-avatar__presence--md',\n  lg: 'd-avatar__presence--lg',\n};\n\nexport const AVATAR_PRESENCE_STATES = {\n  NONE: '',\n  BUSY: 'busy',\n  AWAY: 'away',\n  OFFLINE: 'offline',\n  ACTIVE: 'active',\n};\n\nexport const AVATAR_ICON_SIZES = {\n  xs: '100',\n  sm: '200',\n  md: '400',\n  lg: '500',\n  xl: '600',\n};\n\nexport const AVATAR_ANGLES = [45, -45, 90, -90, 135, -135, 180, -180];\n\nexport const GRADIENT_COLORS = {\n  with100: ['purple-100', 'magenta-100', 'gold-100', 'blue-100'],\n  with200: ['purple-200', 'magenta-200', 'gold-200', 'blue-200'],\n};\n\nexport const MAX_GRADIENT_COLORS = 3;\nexport const MAX_GRADIENT_COLORS_100 = 2;\n\nexport const AVATAR_GROUP_VALIDATOR = (group) => group > 1;\n\nexport default {\n  AVATAR_KIND_MODIFIERS,\n  AVATAR_SIZE_MODIFIERS,\n  AVATAR_ICON_SIZES,\n  AVATAR_ANGLES,\n  AVATAR_GROUP_VALIDATOR,\n};\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"avatarClasses\"\n    :style=\"initialKindStyle\"\n    data-qa=\"dt-avatar\"\n  >\n    <div\n      ref=\"canvas\"\n      :class=\"[canvasClass, 'd-avatar__canvas']\"\n    >\n      <!-- @slot Slot for avatar content -->\n      <slot v-if=\"showDefaultSlot\" />\n      <span\n        v-if=\"showInitials\"\n        class=\"d-ps-absolute d-zi-base\"\n        :class=\"AVATAR_KIND_MODIFIERS.initials\"\n      >\n        {{ formattedInitials }}\n      </span>\n    </div>\n    <div\n      v-if=\"overlayIcon || overlayText\"\n      :class=\"overlayClasses\"\n    >\n      <dt-icon\n        v-if=\"overlayIcon\"\n        class=\"d-fc-white d-w100p\"\n        :name=\"overlayIcon\"\n      />\n      <p\n        v-else-if=\"overlayText\"\n        class=\"d-fs-200 d-fw-bold d-fc-white d-w100p d-ta-center\"\n      >\n        {{ overlayText }}\n      </p>\n    </div>\n    <span\n      v-if=\"showGroup\"\n      class=\"d-avatar__count d-zi-base\"\n      data-qa=\"dt-avatar-count\"\n    >{{ formattedGroup }}</span>\n    <dt-presence\n      v-if=\"presence && !showGroup\"\n      :presence=\"presence\"\n      class=\"d-zi-base\"\n      :class=\"[\n        'd-avatar__presence',\n        AVATAR_PRESENCE_SIZE_MODIFIERS[size],\n      ]\"\n      v-bind=\"presenceProps\"\n      data-qa=\"dt-presence\"\n    />\n  </div>\n</template>\n\n<script>\nimport { warn } from 'vue';\nimport { getUniqueString, getRandomElement } from '@/common/utils';\nimport { DtPresence } from '../presence';\nimport { DtIcon } from '@/components/icon';\nimport seedrandom from 'seedrandom';\nimport {\n  AVATAR_KIND_MODIFIERS,\n  AVATAR_SIZE_MODIFIERS,\n  AVATAR_PRESENCE_SIZE_MODIFIERS,\n  AVATAR_PRESENCE_STATES,\n  AVATAR_ANGLES,\n  GRADIENT_COLORS,\n  MAX_GRADIENT_COLORS,\n  MAX_GRADIENT_COLORS_100,\n  AVATAR_GROUP_VALIDATOR,\n} from './avatar_constants';\n\n/**\n * An avatar is a visual representation of a user or object.\n * @see https://dialpad.design/components/avatar.html\n */\nexport default {\n  name: 'DtAvatar',\n  components: { DtPresence, DtIcon },\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Id of the avatar content wrapper element\n     */\n    id: {\n      type: String,\n      default () { return getUniqueString(); },\n    },\n\n    /**\n     * Pass in a seed to get the random color generation based on that string. For example if you pass in a\n     * user ID as the string it will return the same randomly generated colors every time for that user.\n     */\n    seed: {\n      type: String,\n      default: undefined,\n    },\n\n    /**\n     * The size of the avatar\n     * @values xs, sm, md, lg, xl\n     */\n    size: {\n      type: String,\n      default: 'md',\n      validator: (size) => Object.keys(AVATAR_SIZE_MODIFIERS).includes(size),\n    },\n\n    /**\n     * Used to customize the avatar container\n     */\n    avatarClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Set classes on the avatar canvas. Wrapper around the core avatar image.\n     */\n    canvasClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Determines whether to show the presence indicator for\n     * Avatar - accepts PRESENCE_STATES values: 'busy', 'away', 'offline',\n     * or 'active'. By default, it's null and nothing is shown.\n     * @values null, busy, away, offline, active\n     */\n    presence: {\n      type: String,\n      default: AVATAR_PRESENCE_STATES.NONE,\n      validator: (state) => {\n        return Object.values(AVATAR_PRESENCE_STATES).includes(state);\n      },\n    },\n\n    /**\n     * A set of props to be passed into the presence component.\n     */\n    presenceProps: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    /**\n     * Initials to be shown in the avatar. Used as fallback if image fails to load.\n     */\n    initials: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Determines whether to show a gradient background for the avatar.\n     */\n    gradient: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Determines whether to show a group avatar.\n     * Limit to 2 digits max, more than 99 will be rendered as “99+”.\n     * if the number is 1 or less it would just show the regular avatar as if group had not been set.\n     */\n    group: {\n      type: Number,\n      default: undefined,\n      validator: (group) => AVATAR_GROUP_VALIDATOR(group),\n    },\n\n    /**\n     * The icon that overlays the avatar\n     */\n    overlayIcon: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * The text that overlays the avatar\n     */\n    overlayText: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Used to customize the avatar overlay\n     */\n    overlayClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      // initials, image or icon\n      kind: null,\n      AVATAR_SIZE_MODIFIERS,\n      AVATAR_KIND_MODIFIERS,\n      AVATAR_PRESENCE_SIZE_MODIFIERS,\n      imageLoadedSuccessfully: null,\n      slottedInitials: '',\n      formattedInitials: '',\n      initializing: false,\n    };\n  },\n\n  computed: {\n    avatarClasses () {\n      return [\n        'd-avatar',\n        AVATAR_SIZE_MODIFIERS[this.validatedSize],\n        this.avatarClass,\n        {\n          'd-avatar--no-gradient': !this.gradient,\n          'd-avatar--group': this.showGroup,\n        },\n      ];\n    },\n\n    overlayClasses () {\n      return [\n        'd-bgc-black-900 d-o70 d-ps-absolute d-w100p d-h100p d-d-flex d-ai-center d-bar-circle d-zi-base',\n        this.overlayClass,\n      ];\n    },\n\n    showDefaultSlot () {\n      return this.kind !== 'initials' ||\n      (this.kind === 'image' && this.imageLoadedSuccessfully === true);\n    },\n\n    showInitials () {\n      return this.kind === 'initials' ||\n      (this.kind === 'image' && this.initials && this.imageLoadedSuccessfully !== true);\n    },\n\n    showGroup () {\n      return AVATAR_GROUP_VALIDATOR(this.group);\n    },\n\n    initialKindStyle () {\n      const randomGradientColorStops = this.randomizeGradientColorStops();\n      return {\n        '--avatar-gradient-angle': `${this.randomizeGradientAngle()}deg`,\n        '--avatar-gradient-stop-1': `var(--${randomGradientColorStops[0]})`,\n        '--avatar-gradient-stop-2': `var(--${randomGradientColorStops[1]})`,\n        '--avatar-gradient-stop-3': `var(--${randomGradientColorStops[2]})`,\n      };\n    },\n\n    formattedGroup () {\n      return this.group > 99 ? '99+' : this.group;\n    },\n\n    validatedSize () {\n      // TODO: Group only supports xs size for now. Remove this when we support other sizes.\n      return this.group ? 'xs' : this.size;\n    },\n  },\n\n  mounted () {\n    this.init();\n  },\n\n  updated () {\n    this.init();\n  },\n\n  methods: {\n    async init () {\n      if (this.initializing) return;\n      this.kind = null;\n      await this.$nextTick();\n      const firstChild = this.$refs.canvas?.children[0] || this.$refs.canvas;\n      this.formatInitials(this.initials);\n      if (firstChild) {\n        this.setKind(firstChild);\n        this.kindHandler(firstChild);\n      }\n      this.initializing = true;\n      await this.$nextTick();\n      this.initializing = false;\n    },\n\n    // eslint-disable-next-line complexity\n    kindHandler (el) {\n      switch (this.kind) {\n        case 'image':\n          el.classList.add('d-avatar__image');\n          this.validateImageAttrsPresence();\n          this.setImageListeners(el);\n          break;\n        case 'icon':\n          el.classList.add(AVATAR_KIND_MODIFIERS.icon);\n          break;\n        case 'initials':\n          if (!el.textContent) return;\n          this.slottedInitials = el.textContent;\n          this.formatInitials(this.slottedInitials.trim() || this.initials);\n          break;\n      }\n    },\n\n    setImageListeners (el) {\n      el.addEventListener('load', () => this._loadedImageEventHandler(el), { once: true });\n      el.addEventListener('error', () => this._erroredImageEventHandler(el), { once: true });\n    },\n\n    formatInitials (initials) {\n      if (!initials || this.validatedSize === 'xs') {\n        this.formattedInitials = '';\n      } else if (this.validatedSize === 'sm') {\n        this.formattedInitials = initials.trim()[0];\n      } else {\n        this.formattedInitials = initials.trim().slice(0, 2);\n      }\n    },\n\n    setKind (element) {\n      if (this.isIconType(element)) { this.kind = 'icon'; return; }\n      if (this.isImageType(element)) { this.kind = 'image'; return; }\n      this.kind = 'initials';\n    },\n\n    isIconType (element) {\n      return element?.tagName?.toUpperCase() === 'SVG';\n    },\n\n    isImageType (element) {\n      return element?.tagName?.toUpperCase() === 'IMG';\n    },\n\n    randomizeGradientAngle () {\n      return getRandomElement(AVATAR_ANGLES, this.seed);\n    },\n\n    randomizeGradientColorStops () {\n      const colors = new Set();\n\n      let count = 0;\n      // get 3 unique colors, 2 from colorsWith100 and one from colorsWith200\n      while (colors.size < MAX_GRADIENT_COLORS) {\n        // add count to the seed since we are looking for 3 unique colors. If the seed makes it always\n        // return the same color we'll get an infinite loop.\n        const seedForColor = this.seed === undefined ? undefined : this.seed + count.toString();\n        if (colors.size === MAX_GRADIENT_COLORS_100) {\n          colors.add(getRandomElement(GRADIENT_COLORS.with200, seedForColor));\n        } else {\n          colors.add(getRandomElement(GRADIENT_COLORS.with100, seedForColor));\n        }\n        count++;\n      }\n      const rng = seedrandom(this.seed);\n      return Array.from(colors).sort(() => 0.5 - rng()); // shuffle colors\n    },\n\n    validateImageAttrsPresence () {\n      const isSrcMissing = !this.$refs.canvas.children[0].getAttribute('src');\n\n      // If alt set to empty string consider it valid, as this is a valid case if the\n      // image is already described by something else (ex: visible description)\n      // eslint-disable-next-line no-unneeded-ternary\n      const isAltMissing = this.$refs.canvas.children[0].getAttribute('alt') === null;\n\n      if (isSrcMissing || isAltMissing) {\n        warn('src and alt attributes are required for image avatars', this);\n      }\n    },\n\n    _loadedImageEventHandler (el) {\n      this.imageLoadedSuccessfully = true;\n      el.classList.remove('d-d-none');\n      el.classList.add('d-avatar--image-loaded');\n    },\n\n    _erroredImageEventHandler (el) {\n      this.imageLoadedSuccessfully = false;\n      el.classList.remove('d-avatar--image-loaded');\n      el.classList.add('d-d-none');\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.d-avatar--image-loaded {\n  background-color: transparent;\n  background-image: unset;\n}\n</style>\n"],"names":["AVATAR_SIZE_MODIFIERS","AVATAR_KIND_MODIFIERS","AVATAR_PRESENCE_SIZE_MODIFIERS","AVATAR_PRESENCE_STATES","AVATAR_ICON_SIZES","AVATAR_ANGLES","GRADIENT_COLORS","MAX_GRADIENT_COLORS","MAX_GRADIENT_COLORS_100","AVATAR_GROUP_VALIDATOR","group","_sfc_main","DtPresence","DtIcon","getUniqueString","size","state","randomGradientColorStops","firstChild","_a","el","initials","element","getRandomElement","colors","count","seedForColor","rng","seedrandom","_createElementBlock","$props","$options","_createElementVNode","_renderSlot","_ctx","_normalizeClass","$data","_createBlock","_component_dt_icon","_hoisted_2","_toDisplayString","_hoisted_3","_openBlock","_component_dt_presence","_mergeProps"],"mappings":"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"}