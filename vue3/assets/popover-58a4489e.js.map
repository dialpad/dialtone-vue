{"version":3,"file":"popover-58a4489e.js","sources":["../../components/popover/popover_constants.js","../../components/popover/popover_header_footer.vue","../../components/popover/popover.vue"],"sourcesContent":["import { BASE_TIPPY_DIRECTIONS, TIPPY_STICKY_VALUES } from './tippy_utils';\n\nexport const POPOVER_PADDING_CLASSES = {\n  none: undefined,\n  small: 'd-p4',\n  medium: 'd-p8',\n  large: 'd-p16',\n};\nexport const POPOVER_HEADER_FOOTER_PADDING_CLASSES = {\n  none: undefined,\n  small: 'd-pl4',\n  medium: 'd-pl8',\n  large: 'd-pl16',\n};\nexport const POPOVER_ROLES = ['dialog', 'menu', 'listbox', 'tree', 'grid'];\nexport const POPOVER_CONTENT_WIDTHS = ['', 'anchor'];\nexport const POPOVER_INITIAL_FOCUS_STRINGS = ['none', 'dialog', 'first'];\nexport const POPOVER_APPEND_TO_VALUES = ['parent', 'body'];\nexport const POPOVER_STICKY_VALUES = [\n  ...TIPPY_STICKY_VALUES,\n];\nexport const POPOVER_DIRECTIONS = [\n  ...BASE_TIPPY_DIRECTIONS,\n];\n","<template>\n  <div\n    data-qa=\"dt-popover-header-footer\"\n    :class=\"{\n      'd-popover__header': type === 'header',\n      'd-popover__footer': type === 'footer',\n    }\"\n  >\n    <div\n      v-if=\"hasSlotContent($slots.content)\"\n      data-qa=\"dt-popover-header-footer-content\"\n      :class=\"['d-to-ellipsis', 'd-w100p', contentClass]\"\n    >\n      <!-- @slot Slot for main content -->\n      <slot name=\"content\" />\n    </div>\n    <dt-button\n      v-if=\"showCloseButton\"\n      ref=\"popover__close-button\"\n      data-qa=\"dt-popover-close\"\n      class=\"d-p6 d-mr6 d-bc-transparent\"\n      importance=\"outlined\"\n      kind=\"muted\"\n      circle\n      v-bind=\"closeButtonProps\"\n      @click=\"$emit('close')\"\n    >\n      <template #icon>\n        <dt-icon\n          name=\"close\"\n          size=\"300\"\n        />\n      </template>\n    </dt-button>\n  </div>\n</template>\n\n<script>\nimport { DtButton } from '@/components/button';\nimport { DtIcon } from '@/components/icon';\nimport { hasSlotContent } from '@/common/utils';\n\nexport default {\n  name: 'PopoverHeaderFooter',\n  components: {\n    DtButton,\n    DtIcon,\n  },\n\n  props: {\n    // eslint-disable-next-line vue/require-default-prop\n    type: {\n      type: String,\n      validator: function (value) {\n        return ['header', 'footer'].includes(value);\n      },\n    },\n\n    /**\n     * Additional class name for the content wrapper element.\n     */\n    contentClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Determines visibility for close button\n     * @values true, false\n     */\n    showCloseButton: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * A set of props to be passed into the popover's header close button.\n     * Requires an 'ariaLabel' property.\n     */\n    closeButtonProps: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  emits: [\n    /**\n     * Emitted when popover is closed\n     *\n     * @event close\n     * @type { Boolean }\n     */\n    'close',\n  ],\n\n  data () {\n    return {\n      hasSlotContent,\n    };\n  },\n\n  methods: {\n    focusCloseButton () {\n      const closeButton = this.$refs['popover__close-button']?.$el;\n      closeButton?.focus();\n    },\n  },\n};\n</script>\n","<template>\n  <div>\n    <Teleport\n      v-if=\"modal && isOpen\"\n      to=\"body\"\n    >\n      <div\n        class=\"d-modal--transparent\"\n        :aria-hidden=\"modal && isOpen ? 'false' : 'true'\"\n        @click.prevent.stop\n      />\n    </Teleport>\n    <component\n      :is=\"elementType\"\n      ref=\"popover\"\n      :class=\"['d-popover', { 'd-popover__anchor--opened': isOpen }]\"\n      data-qa=\"dt-popover-container\"\n    >\n      <!-- eslint-disable-next-line vuejs-accessibility/no-static-element-interactions -->\n      <div\n        :id=\"!ariaLabelledby && labelledBy\"\n        ref=\"anchor\"\n        data-qa=\"dt-popover-anchor\"\n        :tabindex=\"openOnContext ? 0 : undefined\"\n        @click.capture=\"defaultToggleOpen\"\n        @contextmenu=\"onContext\"\n        @keydown.up.prevent=\"onArrowKeyPress\"\n        @keydown.down.prevent=\"onArrowKeyPress\"\n        @keydown.escape.capture=\"closePopover\"\n        @keydown.enter=\"$emit('keydown', $event)\"\n        @keydown.space=\"$emit('keydown', $event)\"\n      >\n        <!-- @slot Anchor element that activates the popover. Usually a button. -->\n        <slot\n          name=\"anchor\"\n          :attrs=\"{\n            'aria-expanded': isOpen.toString(),\n            'aria-controls': id,\n            'aria-haspopup': role,\n          }\"\n        />\n      </div>\n      <dt-lazy-show\n        :id=\"id\"\n        ref=\"content\"\n        :role=\"role\"\n        data-qa=\"dt-popover\"\n        :aria-hidden=\"`${!isOpen}`\"\n        :aria-labelledby=\"labelledBy\"\n        :aria-label=\"ariaLabel\"\n        :aria-modal=\"`${!modal}`\"\n        :transition=\"transition\"\n        :show=\"isOpen\"\n        :appear=\"toAppear\"\n        :class=\"['d-popover__dialog', { 'd-popover__dialog--modal': modal }, dialogClass]\"\n        :style=\"{\n          'max-height': calculatedMaxHeight,\n          'max-width': maxWidth,\n        }\"\n        :css=\"$attrs.css\"\n        :tabindex=\"contentTabindex\"\n        v-on=\"popoverListeners\"\n      >\n        <popover-header-footer\n          v-if=\"hasSlotContent($slots.headerContent) || showCloseButton\"\n          ref=\"popover__header\"\n          :class=\"POPOVER_HEADER_FOOTER_PADDING_CLASSES[padding]\"\n          :content-class=\"headerClass\"\n          type=\"header\"\n          :show-close-button=\"showCloseButton\"\n          :close-button-props=\"closeButtonProps\"\n          @close=\"closePopover\"\n        >\n          <template #content>\n            <!-- @slot Slot for popover header content -->\n            <slot\n              name=\"headerContent\"\n              :close=\"closePopover\"\n            />\n          </template>\n        </popover-header-footer>\n        <div\n          ref=\"popover__content\"\n          data-qa=\"dt-popover-content\"\n          :class=\"[\n            'd-popover__content',\n            POPOVER_PADDING_CLASSES[padding],\n            contentClass,\n          ]\"\n        >\n          <!-- @slot Slot for the content that is displayed in the popover when it is open. -->\n          <slot\n            name=\"content\"\n            :close=\"closePopover\"\n          />\n        </div>\n        <popover-header-footer\n          v-if=\"hasSlotContent($slots.footerContent)\"\n          ref=\"popover__footer\"\n          type=\"footer\"\n          :class=\"POPOVER_HEADER_FOOTER_PADDING_CLASSES[padding]\"\n          :content-class=\"footerClass\"\n        >\n          <template #content>\n            <!-- @slot Slot for the footer content. -->\n            <slot\n              name=\"footerContent\"\n              :close=\"closePopover\"\n            />\n          </template>\n        </popover-header-footer>\n        <sr-only-close-button\n          v-if=\"showVisuallyHiddenClose\"\n          :visually-hidden-close-label=\"visuallyHiddenCloseLabel\"\n          @close=\"closePopover\"\n        />\n      </dt-lazy-show>\n    </component>\n  </div>\n</template>\n\n<script>\n/* eslint-disable max-lines */\nimport {\n  POPOVER_APPEND_TO_VALUES,\n  POPOVER_CONTENT_WIDTHS,\n  POPOVER_HEADER_FOOTER_PADDING_CLASSES,\n  POPOVER_INITIAL_FOCUS_STRINGS,\n  POPOVER_PADDING_CLASSES,\n  POPOVER_ROLES,\n  POPOVER_STICKY_VALUES,\n} from './popover_constants';\nimport { getUniqueString, hasSlotContent, isOutOfViewPort } from '@/common/utils';\nimport DtLazyShow from '../lazy_show/lazy_show.vue';\nimport ModalMixin from '../../common/mixins/modal.js';\nimport { createTippy, getPopperOptions } from './tippy_utils';\nimport PopoverHeaderFooter from './popover_header_footer.vue';\nimport SrOnlyCloseButtonMixin from '../../common/mixins/sr_only_close_button';\nimport SrOnlyCloseButton from '@/common/sr_only_close_button.vue';\n\n/**\n * A Popover displays a content overlay when its anchor element is activated.\n * @see https://dialpad.design/components/popover.html\n */\nexport default {\n  name: 'DtPopover',\n\n  /********************\n   * CHILD COMPONENTS *\n   ********************/\n  components: {\n    SrOnlyCloseButton,\n    DtLazyShow,\n    PopoverHeaderFooter,\n  },\n\n  mixins: [ModalMixin, SrOnlyCloseButtonMixin],\n\n  props: {\n    /**\n     * Controls whether the popover is shown. Leaving this null will have the popover trigger on click by default.\n     * If you set this value, the default trigger behavior will be disabled, and you can control it as you need.\n     * Supports v-model\n     * @values null, true, false\n     */\n    open: {\n      type: Boolean,\n      default: null,\n    },\n\n    /**\n     * Opens the popover on right click (context menu). If you set this value to `true`,\n     * the default trigger behavior will be disabled.\n     * @values true, false\n     */\n    openOnContext: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Element type (tag name) of the root element of the component.\n     */\n    elementType: {\n      type: String,\n      default: 'div',\n    },\n\n    /**\n     * Named transition when the content display is toggled.\n     * @see DtLazyShow\n     */\n    transition: {\n      type: String,\n      default: 'fade',\n    },\n\n    /**\n     * ARIA role for the content of the popover. Defaults to \"dialog\".\n     * <a href=\"https://www.w3.org/TR/wai-aria/#aria-haspopup\" target=\"_blank\">aria-haspopup</a>\n     */\n    role: {\n      type: String,\n      default: 'dialog',\n      validator: (role) => {\n        return POPOVER_ROLES.includes(role);\n      },\n    },\n\n    /**\n     * ID of the element that serves as the label for the popover content.\n     * Defaults to the \"anchor\" element; this exists to provide a different\n     * ID of the label element if, for example, the anchor slot contains\n     * other items that do not serve as a label. You should provide this\n     * or ariaLabel, but not both.\n     */\n    ariaLabelledby: {\n      type: String,\n      default: null,\n    },\n\n    /**\n     * Descriptive label for the popover content. You should provide this\n     * or ariaLabelledby, but not both.\n     */\n    ariaLabel: {\n      type: String,\n      default: null,\n    },\n\n    /**\n     * A set of props to be passed into the popover's header close button.\n     * Requires an 'ariaLabel' property, when the header popover is visible\n     */\n    closeButtonProps: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    /**\n     * Padding size class for the popover content.\n     * @values none, small, medium, large\n     */\n    padding: {\n      type: String,\n      default: 'large',\n      validator: (padding) => {\n        return Object.keys(POPOVER_PADDING_CLASSES).some((item) => item === padding);\n      },\n    },\n\n    /**\n     * Additional class name for the content wrapper element.\n     */\n    contentClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Width configuration for the popover content. When its value is 'anchor',\n     * the popover content will have the same width as the anchor.\n     * @values null, anchor\n     */\n    contentWidth: {\n      type: String,\n      default: '',\n      validator: contentWidth => POPOVER_CONTENT_WIDTHS.includes(contentWidth),\n    },\n\n    /**\n     * Whether to apply transition on initial render in the content lazy show component.\n     */\n    contentAppear: {\n      type: Boolean,\n      default: null,\n    },\n\n    /**\n     * Tabindex value for the content. Passing null, no tabindex attribute will be set.\n     */\n    contentTabindex: {\n      type: Number || null,\n      default: -1,\n    },\n\n    /**\n     * External anchor id to use in those cases the anchor can't be provided via the slot.\n     * For instance, using the combobox's input as the anchor for the popover.\n     */\n    externalAnchor: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * The id of the tooltip\n     */\n    id: {\n      type: String,\n      default () { return getUniqueString(); },\n    },\n\n    /**\n     *  Displaces the content box from its anchor element\n     *  by the specified number of pixels. See\n     *  <a href=\"https://atomiks.github.io/tippyjs/v6/all-props/#offset\" target=\"_blank\">Tippy.js docs</a>\n     */\n    offset: {\n      type: Array,\n      default: () => [0, 4],\n    },\n\n    /**\n     * Determines if the popover hides upon clicking the\n     * anchor or outside of the content box.\n     * @values true, false\n     */\n    hideOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Determines modal state. If enabled popover has a modal overlay\n     * preventing interaction with elements below it, but it is invisible.\n     * @values true, false\n     */\n    modal: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * If the popover does not fit in the direction described by \"placement\",\n     * it will attempt to change it's direction to the \"fallbackPlacements\".\n     * See <a href=\"https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements\" target=\"_blank\">Popper.js docs</a>\n     * */\n    fallbackPlacements: {\n      type: Array,\n      default: () => {\n        return ['auto'];\n      },\n    },\n\n    /**\n     * The direction the popover displays relative to the anchor.\n     * See <a href=\"https://atomiks.github.io/tippyjs/v6/all-props/#placement\" target=\"_blank\">Tippy.js docs</a>\n     * @values top, top-start, top-end,\n     * right, right-start, right-end,\n     * left, left-start, left-end,\n     * bottom, bottom-start, bottom-end,\n     * auto, auto-start, auto-end\n     */\n    placement: {\n      type: String,\n      default: 'bottom-end',\n    },\n\n    /**\n     * If set to false the dialog will display over top of the anchor when there is insufficient space.\n     * If set to true it will never move from its position relative to the anchor and will clip instead.\n     * See <a href=\"https://popper.js.org/docs/v2/modifiers/prevent-overflow/#tether\" target=\"_blank\">Popper.js docs</a>\n     * @values true, false\n     */\n    tether: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * If the popover sticks to the anchor. This is usually not needed, but can be needed\n     * if the reference element's position is animating, or to automatically update the popover\n     * position in those cases the DOM layout changes the reference element's position.\n     * `true` enables it, `reference` only checks the \"reference\" rect for changes and `popper` only\n     * checks the \"popper\" rect for changes.\n     * See <a href=\"https://atomiks.github.io/tippyjs/v6/all-props/#sticky\" target=\"_blank\">Tippy.js docs</a>\n     * @values true, false, reference, popper\n     */\n    sticky: {\n      type: [Boolean, String],\n      default: false,\n      validator: (sticky) => {\n        return POPOVER_STICKY_VALUES.includes(sticky);\n      },\n    },\n\n    /**\n     * Determines maximum height for the popover before overflow.\n     * Possible units rem|px|em\n     */\n    maxHeight: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Determines maximum width for the popover before overflow.\n     * Possible units rem|px|%|em\n     */\n    maxWidth: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * Determines visibility for close button\n     * @values true, false\n     */\n    showCloseButton: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Additional class name for the header content wrapper element.\n     */\n    headerClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Additional class name for the footer content wrapper element.\n     */\n    footerClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * Additional class name for the dialog element.\n     */\n    dialogClass: {\n      type: [String, Array, Object],\n      default: '',\n    },\n\n    /**\n     * The element that is focused when the popover is opened. This can be an\n     * HTMLElement within the popover, a string starting with '#' which will\n     * find the element by ID. 'first' which will automatically focus\n     * the first element, or 'dialog' which will focus the dialog window itself.\n     * If the dialog is modal this prop cannot be 'none'.\n     * @values none, dialog, first\n     */\n    initialFocusElement: {\n      type: [String, HTMLElement],\n      default: 'first',\n      validator: initialFocusElement => {\n        return POPOVER_INITIAL_FOCUS_STRINGS.includes(initialFocusElement) ||\n          (initialFocusElement instanceof HTMLElement) ||\n          initialFocusElement.startsWith('#');\n      },\n    },\n\n    /**\n     * If the popover should open pressing up or down arrow key on the anchor element.\n     * This can be set when not passing open prop.\n     * @values true, false\n     */\n    openWithArrowKeys: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Sets the element to which the popover is going to append to.\n     * 'body' will append to the nearest body (supports shadow DOM).\n     * @values 'body', 'parent', HTMLElement,\n     */\n    appendTo: {\n      type: [HTMLElement, String],\n      default: 'body',\n      validator: appendTo => {\n        return POPOVER_APPEND_TO_VALUES.includes(appendTo) ||\n            (appendTo instanceof HTMLElement);\n      },\n    },\n  },\n\n  emits: [\n    /**\n     * Native keydown event\n     *\n     * @event keydown\n     * @type {KeyboardEvent}\n     */\n    'keydown',\n\n    /**\n     * Event fired to sync the open prop with the parent component\n     * @event update:open\n     */\n    'update:open',\n\n    /**\n     * Emitted when popover is shown or hidden\n     *\n     * @event opened\n     * @type {Boolean | Array}\n     */\n    'opened',\n  ],\n\n  data () {\n    return {\n      POPOVER_PADDING_CLASSES,\n      POPOVER_HEADER_FOOTER_PADDING_CLASSES,\n      intersectionObserver: null,\n      isOutsideViewport: false,\n      isOpen: false,\n      toAppear: false,\n      anchorEl: null,\n      popoverContentEl: null,\n      hasSlotContent,\n    };\n  },\n\n  computed: {\n    popoverListeners () {\n      return {\n        keydown: event => {\n          this.onKeydown(event);\n        },\n\n        'after-leave': event => {\n          this.onLeaveTransitionComplete();\n        },\n\n        'after-enter': event => {\n          this.onEnterTransitionComplete();\n        },\n      };\n    },\n\n    calculatedMaxHeight () {\n      if (this.isOutsideViewport && this.modal) {\n        return `calc(100vh - var(--space-300))`;\n      }\n      return this.maxHeight;\n    },\n\n    labelledBy () {\n      // aria-labelledby should be set only if aria-labelledby is passed as a prop, or if\n      // there is no aria-label and the labelledby should point to the anchor.\n      return this.ariaLabelledby || (!this.ariaLabel && getUniqueString('DtPopover__anchor'));\n    },\n  },\n\n  watch: {\n    $props: {\n      immediate: true,\n      deep: true,\n      handler () {\n        this.validateProps();\n      },\n    },\n\n    modal (modal) {\n      this.tip?.setProps({\n        zIndex: modal ? 650 : this.calculateAnchorZindex(),\n      });\n    },\n\n    offset (offset) {\n      this.tip?.setProps({\n        offset,\n      });\n    },\n\n    sticky (sticky) {\n      this.tip?.setProps({\n        sticky,\n      });\n    },\n\n    fallbackPlacements () {\n      this.tip?.setProps({\n        popperOptions: this.popperOptions(),\n      });\n    },\n\n    tether () {\n      this.tip?.setProps({\n        popperOptions: this.popperOptions(),\n      });\n    },\n\n    placement (placement) {\n      this.tip?.setProps({\n        placement,\n      });\n    },\n\n    open: {\n      handler: function (open) {\n        if (open !== null) {\n          this.isOpen = open;\n        }\n        if (open === true) {\n          this.toAppear = true;\n        }\n      },\n\n      immediate: true,\n    },\n\n    contentAppear: {\n      handler: function (contentAppear) {\n        if (contentAppear !== null) {\n          this.toAppear = contentAppear;\n        }\n      },\n    },\n\n    isOpen (isOpen, isPrev) {\n      if (isOpen) {\n        this.initTippyInstance();\n        this.tip.show();\n      } else if (!isOpen && isPrev !== isOpen) {\n        this.removeEventListeners();\n        this.tip.hide();\n      }\n    },\n  },\n\n  mounted () {\n    const externalAnchorEl = this.externalAnchor\n      ? this.$refs.anchor.getRootNode().querySelector(`#${this.externalAnchor}`)\n      : null;\n    this.anchorEl = externalAnchorEl ?? this.$refs.anchor.children[0];\n    this.popoverContentEl = this.$refs.content.$el;\n\n    if (this.isOpen) {\n      this.initTippyInstance();\n      this.tip.show();\n    }\n\n    // rootMargin here must be greater than the margin of the height we are setting in calculatedMaxHeight which\n    // currently is var(--space-300) (4px). If not the intersectionObserver will continually trigger in an infinite\n    // loop.\n    // threshold 1.0 makes this trigger every time the dialog \"touches\" the edge of the viewport.\n    this.intersectionObserver = new IntersectionObserver(this.hasIntersectedViewport);\n    this.intersectionObserver.observe(this.popoverContentEl);\n  },\n\n  beforeUnmount () {\n    this.tip?.destroy();\n    this.intersectionObserver.disconnect();\n    this.removeReferences();\n    this.removeEventListeners();\n  },\n\n  /******************\n   *     METHODS    *\n   ******************/\n  methods: {\n\n    hasIntersectedViewport (entries) {\n      const dialog = entries?.[0]?.target;\n      if (!dialog) return;\n      const isOut = isOutOfViewPort(dialog);\n      this.isOutsideViewport = isOut.bottom || isOut.top;\n    },\n\n    popperOptions () {\n      return getPopperOptions({\n        fallbackPlacements: this.fallbackPlacements,\n        tether: this.tether,\n        hasHideModifierEnabled: true,\n      });\n    },\n\n    validateProps () {\n      if (this.modal && this.initialFocusElement === 'none') {\n        console.error('If the popover is modal you must set the ' +\n        'initialFocusElement prop. Possible values: \"dialog\", \"first\", HTMLElement');\n      }\n    },\n\n    calculateAnchorZindex () {\n      // if a modal is currently active render at modal-element z-index, otherwise at popover z-index\n      if (this.$el.getRootNode()\n        .querySelector('.d-modal[aria-hidden=\"false\"], .d-modal--transparent[aria-hidden=\"false\"]') ||\n        // Special case because we don't have any dialtone drawer component yet. Render at 650 when\n        // anchor of popover is within a drawer.\n        this.anchorEl.closest('.d-zi-drawer')) {\n        return 650;\n      } else {\n        return 300;\n      }\n    },\n\n    defaultToggleOpen (e) {\n      if (this.openOnContext) { return; }\n\n      // Only use default toggle behaviour if the user has not set the open prop.\n      // Check that the anchor element specifically was clicked.\n      if (this.open === null || this.open === undefined) {\n        if ((!this.anchorEl.contains(e.target) && !this.anchorEl.isEqualNode(e.target)) || this.anchorEl?.disabled) {\n          return;\n        }\n\n        this.toggleOpen();\n      }\n    },\n\n    async onContext (event) {\n      if (!this.openOnContext) { return; }\n\n      event.preventDefault();\n\n      this.isOpen = true;\n      await this.$nextTick();\n      this.tip.setProps({\n        placement: 'right-start',\n        getReferenceClientRect: () => ({\n          width: 0,\n          height: 0,\n          top: event.clientY,\n          bottom: event.clientY,\n          left: event.clientX,\n          right: event.clientX,\n        }),\n      });\n    },\n\n    toggleOpen () {\n      this.isOpen = !this.isOpen;\n    },\n\n    onArrowKeyPress (e) {\n      if (this.open !== null) { return; }\n      if (this.openWithArrowKeys && this.anchorEl.contains(e.target)) {\n        if (!this.isOpen) {\n          this.isOpen = true;\n        }\n      }\n\n      this.$emit('keydown', e);\n    },\n\n    addEventListeners () {\n      window.addEventListener('dt-popover-close', this.closePopover);\n      // align popover content width when contentWidth is 'anchor'\n      if (this.contentWidth === 'anchor') {\n        window.addEventListener('resize', this.onResize);\n      }\n    },\n\n    removeEventListeners () {\n      window.removeEventListener('dt-popover-close', this.closePopover);\n      if (this.contentWidth === 'anchor') {\n        window.removeEventListener('resize', this.onResize);\n      }\n    },\n\n    closePopover () {\n      this.isOpen = false;\n    },\n\n    /*\n    * Prevents scrolling outside of the currently opened modal popover by:\n    *   - when anchor is not within another popover: setting the body to overflow: hidden\n    *   - when anchor is within another popover: set the popover dialog container to it's non-modal z-index\n    *     since it is no longer the active modal. This puts it underneath the overlay and prevents scrolling.\n    **/\n    preventScrolling () {\n      if (this.modal) {\n        const element = this.anchorEl.closest('body, .tippy-box');\n        if (element.tagName.toLowerCase() === 'body') {\n          element.classList.add('d-of-hidden');\n          this.tip.setProps({ offset: this.offset });\n        } else {\n          element.classList.add('d-zi-popover');\n        }\n      }\n    },\n\n    /*\n    * Resets the prevent scrolling properties set in preventScrolling() back to normal.\n    **/\n    enableScrolling () {\n      const element = this.anchorEl.closest('body, .tippy-box');\n      if (!element) return;\n      if (element.tagName?.toLowerCase() === 'body') {\n        element.classList.remove('d-of-hidden');\n        this.tip.setProps({ offset: this.offset });\n      } else {\n        element.classList.remove('d-zi-popover');\n      }\n    },\n\n    removeReferences () {\n      this.anchorEl = null;\n      this.popoverContentEl = null;\n      this.tip = null;\n    },\n\n    async onShow () {\n      if (this.contentWidth === 'anchor') {\n        await this.setPopoverContentAnchorWidth();\n      }\n\n      if (this.contentWidth === null) {\n        this.popoverContentEl.style.width = 'auto';\n      }\n\n      this.addEventListeners();\n    },\n\n    async onLeaveTransitionComplete () {\n      if (this.modal) {\n        await this.focusFirstElement(this.$refs.anchor);\n        // await next tick in case the user wants to change focus themselves.\n        await this.$nextTick();\n        this.enableScrolling();\n      }\n      this.tip?.unmount();\n      this.$emit('opened', false);\n      if (this.open !== null) {\n        this.$emit('update:open', false);\n      }\n    },\n\n    async onEnterTransitionComplete () {\n      this.focusInitialElement();\n      // await next tick in case the user wants to change focus themselves.\n      await this.$nextTick();\n      this.preventScrolling();\n      this.$emit('opened', true, this.$refs.popover__content);\n      if (this.open !== null) {\n        this.$emit('update:open', true);\n      }\n    },\n\n    focusInitialElement () {\n      if (this.initialFocusElement === 'dialog') {\n        this.$refs.content.$el.focus();\n      }\n      // find by ID\n      if (this.initialFocusElement.startsWith('#')) {\n        this.focusInitialElementById();\n      }\n      if (this.initialFocusElement === 'first') {\n        this.focusFirstElementIfNeeded(this.$refs.popover__content);\n      }\n      if (this.initialFocusElement instanceof HTMLElement) {\n        this.initialFocusElement.focus();\n      }\n    },\n\n    focusInitialElementById () {\n      const result = this.$refs.content?.$el?.querySelector(this.initialFocusElement);\n      if (result) {\n        result.focus();\n      } else {\n        console.warn('Could not find the element specified in dt-popover prop \"initialFocusElement\". ' +\n          'Defaulting to focusing the dialog.');\n      }\n      result ? result.focus() : this.$refs.content?.$el.focus();\n    },\n\n    onResize () {\n      this.closePopover();\n    },\n\n    onClickOutside () {\n      if (!this.hideOnClick) return;\n      // If a popover is opened inside of this one, do not hide on click out\n      const innerModals = this.popoverContentEl.querySelector('.d-popover__anchor--opened');\n      if (!innerModals) {\n        this.closePopover();\n      }\n    },\n\n    onKeydown (e) {\n      if (e.key === 'Tab') {\n        if (this.modal) {\n          this.focusTrappedTabPress(e, this.popoverContentEl);\n        }\n      }\n      if (e.key === 'Escape') {\n        this.closePopover();\n      }\n\n      this.$emit('keydown', e);\n    },\n\n    async setPopoverContentAnchorWidth () {\n      await this.$nextTick();\n      this.popoverContentEl.style.width = `${this.anchorEl.clientWidth}px`;\n    },\n\n    focusFirstElementIfNeeded (domEl) {\n      const focusableElements = this._getFocusableElements(domEl, true);\n      if (focusableElements.length !== 0) {\n        this.focusFirstElement(domEl);\n      } else if (this.showCloseButton) {\n        this.$refs.popover__header?.focusCloseButton();\n      } else {\n        // if there are no focusable elements at all focus the dialog itself\n        this.$refs.content?.$el.focus();\n      }\n    },\n\n    initTippyInstance () {\n      this.tip = createTippy(this.anchorEl, {\n        popperOptions: this.popperOptions(),\n        contentElement: this.popoverContentEl,\n        placement: this.placement,\n        offset: this.offset,\n        sticky: this.sticky,\n        appendTo: this.appendTo === 'body' ? this.anchorEl?.getRootNode()?.querySelector('body') : this.appendTo,\n        interactive: true,\n        trigger: 'manual',\n        // We have to manage hideOnClick functionality manually to handle\n        // popover within popover situations.\n        hideOnClick: false,\n        zIndex: this.modal ? 650 : this.calculateAnchorZindex(),\n        onClickOutside: this.onClickOutside,\n        onShow: this.onShow,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.tippy-box[data-popper-reference-hidden],\n.tippy-box[data-popper-escaped] {\n  .d-popover__dialog {\n    visibility: hidden;\n    pointer-events: none;\n  }\n}\n</style>\n"],"names":["POPOVER_PADDING_CLASSES","POPOVER_HEADER_FOOTER_PADDING_CLASSES","POPOVER_ROLES","POPOVER_CONTENT_WIDTHS","POPOVER_INITIAL_FOCUS_STRINGS","POPOVER_APPEND_TO_VALUES","POPOVER_STICKY_VALUES","TIPPY_STICKY_VALUES","POPOVER_DIRECTIONS","BASE_TIPPY_DIRECTIONS","_sfc_main","DtButton","DtIcon","value","hasSlotContent","closeButton","_a","_createElementBlock","_normalizeClass","$props","$data","_ctx","_renderSlot","_openBlock","_createBlock","_component_dt_button","_mergeProps","_createVNode","_component_dt_icon","SrOnlyCloseButton","DtLazyShow","PopoverHeaderFooter","ModalMixin","SrOnlyCloseButtonMixin","role","padding","item","contentWidth","getUniqueString","sticky","initialFocusElement","appendTo","event","modal","offset","placement","open","contentAppear","isOpen","isPrev","externalAnchorEl","entries","dialog","isOut","isOutOfViewPort","getPopperOptions","element","result","_b","_c","domEl","createTippy","_Teleport","_createElementVNode","_resolveDynamicComponent","$options","args","_cache","_withKeys","$event","_component_dt_lazy_show","_toHandlers","_component_popover_header_footer","_component_sr_only_close_button"],"mappings":"8kBAEY,MAACA,EAA0B,CACrC,KAAM,OACN,MAAO,OACP,OAAQ,OACR,MAAO,OACT,EACaC,EAAwC,CACnD,KAAM,OACN,MAAO,QACP,OAAQ,QACR,MAAO,QACT,EACaC,EAAgB,CAAC,SAAU,OAAQ,UAAW,OAAQ,MAAM,EAC5DC,EAAyB,CAAC,GAAI,QAAQ,EACtCC,EAAgC,CAAC,OAAQ,SAAU,OAAO,EAC1DC,EAA2B,CAAC,SAAU,MAAM,EAC5CC,EAAwB,CACnC,GAAGC,CACL,EACaC,GAAqB,CAChC,GAAGC,CACL,ECmBKC,EAAU,CACb,KAAM,sBACN,WAAY,CACV,SAAAC,EACA,OAAAC,CACD,EAED,MAAO,CAEL,KAAM,CACJ,KAAM,OACN,UAAW,SAAUC,EAAO,CAC1B,MAAO,CAAC,SAAU,QAAQ,EAAE,SAASA,CAAK,CAC3C,CACF,EAKD,aAAc,CACZ,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,QAAS,EACV,EAMD,gBAAiB,CACf,KAAM,QACN,QAAS,EACV,EAMD,iBAAkB,CAChB,KAAM,OACN,QAAS,IAAM,CAAE,CAClB,CACF,EAED,MAAO,CAOL,OACD,EAED,MAAQ,CACN,MAAO,CACL,eAAAC,EAEH,EAED,QAAS,CACP,kBAAoB,OAClB,MAAMC,GAAcC,EAAA,KAAK,MAAM,uBAAuB,IAAlC,YAAAA,EAAqC,IACzDD,GAAA,MAAAA,EAAa,OACd,CACF,CACH,2EA1GEE,EAiCM,MAAA,CAhCJ,UAAQ,2BACP,MAAKC,EAAA,qBAA+BC,EAAI,OAAA,6BAA0CA,EAAI,OAAA,aAM/EC,EAAc,eAACC,EAAM,OAAC,OAAO,OADrCJ,EAOM,MAAA,OALJ,UAAQ,mCACP,mCAAoCE,EAAY,YAAA,CAAA,IAGjDG,EAAuBD,EAAA,OAAA,SAAA,gBAGjBF,EAAe,iBADvBI,IAAAC,EAiBYC,EAjBZC,EAiBY,OAfV,IAAI,wBACJ,UAAQ,mBACR,MAAM,8BACN,WAAW,WACX,KAAK,QACL,OAAA,IACQP,EAAgB,iBAAA,CACvB,uBAAOE,EAAK,MAAA,OAAA,MAEF,OACT,IAGE,CAHFM,EAGEC,EAAA,CAFA,KAAK,QACL,KAAK;yWCkHf,MAAKlB,EAAU,CACb,KAAM,YAKN,WAAY,CACV,kBAAAmB,EACA,WAAAC,EACA,oBAAAC,CACD,EAED,OAAQ,CAACC,EAAYC,CAAsB,EAE3C,MAAO,CAOL,KAAM,CACJ,KAAM,QACN,QAAS,IACV,EAOD,cAAe,CACb,KAAM,QACN,QAAS,EACV,EAKD,YAAa,CACX,KAAM,OACN,QAAS,KACV,EAMD,WAAY,CACV,KAAM,OACN,QAAS,MACV,EAMD,KAAM,CACJ,KAAM,OACN,QAAS,SACT,UAAYC,GACHhC,EAAc,SAASgC,CAAI,CAErC,EASD,eAAgB,CACd,KAAM,OACN,QAAS,IACV,EAMD,UAAW,CACT,KAAM,OACN,QAAS,IACV,EAMD,iBAAkB,CAChB,KAAM,OACN,QAAS,KAAO,CAAA,EACjB,EAMD,QAAS,CACP,KAAM,OACN,QAAS,QACT,UAAYC,GACH,OAAO,KAAKnC,CAAuB,EAAE,KAAMoC,GAASA,IAASD,CAAO,CAE9E,EAKD,aAAc,CACZ,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,QAAS,EACV,EAOD,aAAc,CACZ,KAAM,OACN,QAAS,GACT,UAAWE,GAAgBlC,EAAuB,SAASkC,CAAY,CACxE,EAKD,cAAe,CACb,KAAM,QACN,QAAS,IACV,EAKD,gBAAiB,CACf,KAAM,QAAU,KAChB,QAAS,EACV,EAMD,eAAgB,CACd,KAAM,OACN,QAAS,EACV,EAKD,GAAI,CACF,KAAM,OACN,SAAW,CAAE,OAAOC,EAAe,CAAK,CACzC,EAOD,OAAQ,CACN,KAAM,MACN,QAAS,IAAM,CAAC,EAAG,CAAC,CACrB,EAOD,YAAa,CACX,KAAM,QACN,QAAS,EACV,EAOD,MAAO,CACL,KAAM,QACN,QAAS,EACV,EAOD,mBAAoB,CAClB,KAAM,MACN,QAAS,IACA,CAAC,MAAM,CAEjB,EAWD,UAAW,CACT,KAAM,OACN,QAAS,YACV,EAQD,OAAQ,CACN,KAAM,QACN,QAAS,EACV,EAWD,OAAQ,CACN,KAAM,CAAC,QAAS,MAAM,EACtB,QAAS,GACT,UAAYC,GACHjC,EAAsB,SAASiC,CAAM,CAE/C,EAMD,UAAW,CACT,KAAM,OACN,QAAS,EACV,EAMD,SAAU,CACR,KAAM,OACN,QAAS,EACV,EAMD,gBAAiB,CACf,KAAM,QACN,QAAS,EACV,EAKD,YAAa,CACX,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,QAAS,EACV,EAKD,YAAa,CACX,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,QAAS,EACV,EAKD,YAAa,CACX,KAAM,CAAC,OAAQ,MAAO,MAAM,EAC5B,QAAS,EACV,EAUD,oBAAqB,CACnB,KAAM,CAAC,OAAQ,WAAW,EAC1B,QAAS,QACT,UAAWC,GACFpC,EAA8B,SAASoC,CAAmB,GAC9DA,aAA+B,aAChCA,EAAoB,WAAW,GAAG,CAEvC,EAOD,kBAAmB,CACjB,KAAM,QACN,QAAS,EACV,EAOD,SAAU,CACR,KAAM,CAAC,YAAa,MAAM,EAC1B,QAAS,OACT,UAAWC,GACFpC,EAAyB,SAASoC,CAAQ,GAC5CA,aAAoB,WAE5B,CACF,EAED,MAAO,CAOL,UAMA,cAQA,QACD,EAED,MAAQ,CACN,MAAO,CACL,wBAAAzC,EACA,sCAAAC,EACA,qBAAsB,KACtB,kBAAmB,GACnB,OAAQ,GACR,SAAU,GACV,SAAU,KACV,iBAAkB,KAClB,eAAAa,EAEH,EAED,SAAU,CACR,kBAAoB,CAClB,MAAO,CACL,QAAS4B,GAAS,CAChB,KAAK,UAAUA,CAAK,CACrB,EAED,cAAeA,GAAS,CACtB,KAAK,0BAAyB,CAC/B,EAED,cAAeA,GAAS,CACtB,KAAK,0BAAyB,CAC/B,EAEJ,EAED,qBAAuB,CACrB,OAAI,KAAK,mBAAqB,KAAK,MAC1B,iCAEF,KAAK,SACb,EAED,YAAc,CAGZ,OAAO,KAAK,gBAAmB,CAAC,KAAK,WAAaJ,EAAgB,mBAAmB,CACtF,CACF,EAED,MAAO,CACL,OAAQ,CACN,UAAW,GACX,KAAM,GACN,SAAW,CACT,KAAK,cAAa,CACnB,CACF,EAED,MAAOK,EAAO,QACZ3B,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,OAAQ2B,EAAQ,IAAM,KAAK,sBAAuB,CACpD,EACD,EAED,OAAQC,EAAQ,QACd5B,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,OAAA4B,CACF,EACD,EAED,OAAQL,EAAQ,QACdvB,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,OAAAuB,CACF,EACD,EAED,oBAAsB,QACpBvB,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,cAAe,KAAK,cAAe,CACrC,EACD,EAED,QAAU,QACRA,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,cAAe,KAAK,cAAe,CACrC,EACD,EAED,UAAW6B,EAAW,QACpB7B,EAAA,KAAK,MAAL,MAAAA,EAAU,SAAS,CACjB,UAAA6B,CACF,EACD,EAED,KAAM,CACJ,QAAS,SAAUC,EAAM,CACnBA,IAAS,OACX,KAAK,OAASA,GAEZA,IAAS,KACX,KAAK,SAAW,GAEnB,EAED,UAAW,EACZ,EAED,cAAe,CACb,QAAS,SAAUC,EAAe,CAC5BA,IAAkB,OACpB,KAAK,SAAWA,EAEnB,CACF,EAED,OAAQC,EAAQC,EAAQ,CAClBD,GACF,KAAK,kBAAiB,EACtB,KAAK,IAAI,QACA,CAACA,GAAUC,IAAWD,IAC/B,KAAK,qBAAoB,EACzB,KAAK,IAAI,OAEZ,CACF,EAED,SAAW,CACT,MAAME,EAAmB,KAAK,eAC1B,KAAK,MAAM,OAAO,YAAa,EAAC,cAAc,IAAI,KAAK,gBAAgB,EACvE,KACJ,KAAK,SAAWA,GAAoB,KAAK,MAAM,OAAO,SAAS,CAAC,EAChE,KAAK,iBAAmB,KAAK,MAAM,QAAQ,IAEvC,KAAK,SACP,KAAK,kBAAiB,EACtB,KAAK,IAAI,QAOX,KAAK,qBAAuB,IAAI,qBAAqB,KAAK,sBAAsB,EAChF,KAAK,qBAAqB,QAAQ,KAAK,gBAAgB,CACxD,EAED,eAAiB,QACflC,EAAA,KAAK,MAAL,MAAAA,EAAU,UACV,KAAK,qBAAqB,aAC1B,KAAK,iBAAgB,EACrB,KAAK,qBAAoB,CAC1B,EAKD,QAAS,CAEP,uBAAwBmC,EAAS,OAC/B,MAAMC,GAASpC,EAAAmC,GAAA,YAAAA,EAAU,KAAV,YAAAnC,EAAc,OAC7B,GAAI,CAACoC,EAAQ,OACb,MAAMC,EAAQC,EAAgBF,CAAM,EACpC,KAAK,kBAAoBC,EAAM,QAAUA,EAAM,GAChD,EAED,eAAiB,CACf,OAAOE,EAAiB,CACtB,mBAAoB,KAAK,mBACzB,OAAQ,KAAK,OACb,uBAAwB,EAC1B,CAAC,CACF,EAED,eAAiB,CACX,KAAK,OAAS,KAAK,sBAAwB,QAC7C,QAAQ,MAAM,oHAC6D,CAE9E,EAED,uBAAyB,CAEvB,OAAI,KAAK,IAAI,YAAY,EACtB,cAAc,2EAA2E,GAG1F,KAAK,SAAS,QAAQ,cAAc,EAC7B,IAEA,GAEV,EAED,kBAAmB,EAAG,OACpB,GAAI,MAAK,gBAIL,KAAK,OAAS,MAAQ,KAAK,OAAS,QAAW,CACjD,GAAK,CAAC,KAAK,SAAS,SAAS,EAAE,MAAM,GAAK,CAAC,KAAK,SAAS,YAAY,EAAE,MAAM,IAAMvC,EAAA,KAAK,WAAL,MAAAA,EAAe,SAChG,OAGF,KAAK,WAAU,EAElB,EAED,MAAM,UAAW0B,EAAO,CACjB,KAAK,gBAEVA,EAAM,eAAc,EAEpB,KAAK,OAAS,GACd,MAAM,KAAK,YACX,KAAK,IAAI,SAAS,CAChB,UAAW,cACX,uBAAwB,KAAO,CAC7B,MAAO,EACP,OAAQ,EACR,IAAKA,EAAM,QACX,OAAQA,EAAM,QACd,KAAMA,EAAM,QACZ,MAAOA,EAAM,OACf,EACF,CAAC,EACF,EAED,YAAc,CACZ,KAAK,OAAS,CAAC,KAAK,MACrB,EAED,gBAAiB,EAAG,CACd,KAAK,OAAS,OACd,KAAK,mBAAqB,KAAK,SAAS,SAAS,EAAE,MAAM,IACtD,KAAK,SACR,KAAK,OAAS,KAIlB,KAAK,MAAM,UAAW,CAAC,EACxB,EAED,mBAAqB,CACnB,OAAO,iBAAiB,mBAAoB,KAAK,YAAY,EAEzD,KAAK,eAAiB,UACxB,OAAO,iBAAiB,SAAU,KAAK,QAAQ,CAElD,EAED,sBAAwB,CACtB,OAAO,oBAAoB,mBAAoB,KAAK,YAAY,EAC5D,KAAK,eAAiB,UACxB,OAAO,oBAAoB,SAAU,KAAK,QAAQ,CAErD,EAED,cAAgB,CACd,KAAK,OAAS,EACf,EAQD,kBAAoB,CAClB,GAAI,KAAK,MAAO,CACd,MAAMc,EAAU,KAAK,SAAS,QAAQ,kBAAkB,EACpDA,EAAQ,QAAQ,YAAW,IAAO,QACpCA,EAAQ,UAAU,IAAI,aAAa,EACnC,KAAK,IAAI,SAAS,CAAE,OAAQ,KAAK,MAAK,CAAG,GAEzCA,EAAQ,UAAU,IAAI,cAAc,EAGzC,EAKD,iBAAmB,OACjB,MAAMA,EAAU,KAAK,SAAS,QAAQ,kBAAkB,EACnDA,MACDxC,EAAAwC,EAAQ,UAAR,YAAAxC,EAAiB,iBAAkB,QACrCwC,EAAQ,UAAU,OAAO,aAAa,EACtC,KAAK,IAAI,SAAS,CAAE,OAAQ,KAAK,MAAK,CAAG,GAEzCA,EAAQ,UAAU,OAAO,cAAc,EAE1C,EAED,kBAAoB,CAClB,KAAK,SAAW,KAChB,KAAK,iBAAmB,KACxB,KAAK,IAAM,IACZ,EAED,MAAM,QAAU,CACV,KAAK,eAAiB,UACxB,MAAM,KAAK,+BAGT,KAAK,eAAiB,OACxB,KAAK,iBAAiB,MAAM,MAAQ,QAGtC,KAAK,kBAAiB,CACvB,EAED,MAAM,2BAA6B,OAC7B,KAAK,QACP,MAAM,KAAK,kBAAkB,KAAK,MAAM,MAAM,EAE9C,MAAM,KAAK,YACX,KAAK,gBAAe,IAEtBxC,EAAA,KAAK,MAAL,MAAAA,EAAU,UACV,KAAK,MAAM,SAAU,EAAK,EACtB,KAAK,OAAS,MAChB,KAAK,MAAM,cAAe,EAAK,CAElC,EAED,MAAM,2BAA6B,CACjC,KAAK,oBAAmB,EAExB,MAAM,KAAK,YACX,KAAK,iBAAgB,EACrB,KAAK,MAAM,SAAU,GAAM,KAAK,MAAM,gBAAgB,EAClD,KAAK,OAAS,MAChB,KAAK,MAAM,cAAe,EAAI,CAEjC,EAED,qBAAuB,CACjB,KAAK,sBAAwB,UAC/B,KAAK,MAAM,QAAQ,IAAI,MAAK,EAG1B,KAAK,oBAAoB,WAAW,GAAG,GACzC,KAAK,wBAAuB,EAE1B,KAAK,sBAAwB,SAC/B,KAAK,0BAA0B,KAAK,MAAM,gBAAgB,EAExD,KAAK,+BAA+B,aACtC,KAAK,oBAAoB,OAE5B,EAED,yBAA2B,WACzB,MAAMyC,GAASC,GAAA1C,EAAA,KAAK,MAAM,UAAX,YAAAA,EAAoB,MAApB,YAAA0C,EAAyB,cAAc,KAAK,qBACvDD,EACFA,EAAO,MAAK,EAEZ,QAAQ,KAAK,mHACyB,EAExCA,EAASA,EAAO,SAAUE,EAAA,KAAK,MAAM,UAAX,MAAAA,EAAoB,IAAI,OACnD,EAED,UAAY,CACV,KAAK,aAAY,CAClB,EAED,gBAAkB,CAChB,GAAI,CAAC,KAAK,YAAa,OAEH,KAAK,iBAAiB,cAAc,4BAA4B,GAElF,KAAK,aAAY,CAEpB,EAED,UAAW,EAAG,CACR,EAAE,MAAQ,OACR,KAAK,OACP,KAAK,qBAAqB,EAAG,KAAK,gBAAgB,EAGlD,EAAE,MAAQ,UACZ,KAAK,aAAY,EAGnB,KAAK,MAAM,UAAW,CAAC,CACxB,EAED,MAAM,8BAAgC,CACpC,MAAM,KAAK,YACX,KAAK,iBAAiB,MAAM,MAAQ,GAAG,KAAK,SAAS,eACtD,EAED,0BAA2BC,EAAO,SACN,KAAK,sBAAsBA,EAAO,EAAI,EAC1C,SAAW,EAC/B,KAAK,kBAAkBA,CAAK,EACnB,KAAK,iBACd5C,EAAA,KAAK,MAAM,kBAAX,MAAAA,EAA4B,oBAG5B0C,EAAA,KAAK,MAAM,UAAX,MAAAA,EAAoB,IAAI,OAE3B,EAED,mBAAqB,SACnB,KAAK,IAAMG,EAAY,KAAK,SAAU,CACpC,cAAe,KAAK,cAAe,EACnC,eAAgB,KAAK,iBACrB,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,SAAU,KAAK,WAAa,QAASH,GAAA1C,EAAA,KAAK,WAAL,YAAAA,EAAe,gBAAf,YAAA0C,EAA8B,cAAc,QAAU,KAAK,SAChG,YAAa,GACb,QAAS,SAGT,YAAa,GACb,OAAQ,KAAK,MAAQ,IAAM,KAAK,sBAAuB,EACvD,eAAgB,KAAK,eACrB,OAAQ,KAAK,MACf,CAAC,CACF,CACF,CACH,8JA75BEzC,EAqHM,MAAA,KAAA,CAnHIE,EAAA,OAASC,EAAM,YADvBI,EASWsC,EAAA,OAPT,GAAG,SAEHC,EAIE,MAAA,CAHA,MAAM,uBACL,cAAa5C,EAAK,OAAIC,EAAM,OAAA,QAAA,OAC5B,sBAAD,IAAmB,CAAA,EAAA,CAAA,UAAA,MAAA,CAAA,2BAGvBG,EAAA,EAAAC,EAyGYwC,EAxGL7C,EAAW,WAAA,EAAA,CAChB,IAAI,UACH,kDAAoDC,EAAM,MAAA,CAAA,CAAA,EAC3D,UAAQ,mCAGR,IAsBM,CAtBN2C,EAsBM,MAAA,CArBH,GAAE,CAAG5C,EAAc,gBAAI8C,EAAU,WAClC,IAAI,SACJ,UAAQ,oBACP,SAAU9C,EAAa,cAAA,EAAO,0CACf8C,EAAiB,mBAAAA,EAAA,kBAAA,GAAAC,CAAA,GAChC,kCAAaD,EAAS,WAAAA,EAAA,UAAA,GAAAC,CAAA,GACtB,UAAO,yBAAaD,EAAe,iBAAAA,EAAA,gBAAA,GAAAC,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,IAAA,CAAA,2BACbD,EAAe,iBAAAA,EAAA,gBAAA,GAAAC,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,MAAA,CAAA,GAEtBC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAAC,GAAAhD,EAAA,gBAAiBgD,CAAM,EAAA,CAAA,OAAA,CAAA,GACvBF,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAAC,GAAAhD,EAAA,gBAAiBgD,CAAM,EAAA,CAAA,OAAA,CAAA,2CAFdJ,EAAY,cAAAA,EAAA,aAAA,GAAAC,CAAA,EAAA,CAAA,QAAA,CAAA,KAKrC5C,EAOED,EAAA,OAAA,SAAA,CALC,MAAK,CAAiC,gBAAAD,EAAA,OAAO,SAAQ,kBAAiCD,EAAE,mBAA+BA,EAAI,eAOhIQ,EA0Ee2C,EA1Ef5C,EA0Ee,CAzEZ,GAAIP,EAAE,GACP,IAAI,UACH,KAAMA,EAAI,KACX,UAAQ,aACP,kBAAiBC,EAAM,SACvB,kBAAiB6C,EAAU,WAC3B,aAAY9C,EAAS,UACrB,iBAAgBA,EAAK,QACrB,WAAYA,EAAU,WACtB,KAAMC,EAAM,OACZ,OAAQA,EAAQ,SAChB,MAAK,CAAA,oBAAA,CAAA,2BAAsDD,EAAK,KAAA,EAAIA,EAAW,WAAA,EAC/E,MAAK,cAA4B8C,EAAmB,gCAAyB9C,EAAQ,UAIrF,IAAKE,EAAM,OAAC,IACZ,SAAUF,EAAe,eAC1B,EAAAoD,EAAMN,EAAgB,gBAAA,CAAA,EAAA,WAEtB,IAiBwB,CAhBhB7C,EAAA,eAAeC,EAAA,OAAO,aAAa,GAAKF,EAAe,qBAD/DK,EAiBwBgD,EAAA,OAftB,IAAI,kBACH,MAAKtD,EAAEE,EAAqC,sCAACD,EAAO,OAAA,CAAA,EACpD,gBAAeA,EAAW,YAC3B,KAAK,SACJ,oBAAmBA,EAAe,gBAClC,qBAAoBA,EAAgB,iBACpC,QAAO8C,EAAY,eAET,UAET,IAGE,CAHF3C,EAGED,EAAA,OAAA,gBAAA,CADC,MAAO4C,EAAY,aAAA,mGAI1BF,EAcM,MAAA,CAbJ,IAAI,mBACJ,UAAQ,qBACP,MAAK7C,EAAA,sBAAkDE,EAAA,wBAAwBD,EAAO,OAAA,EAAeA,EAAY,iBAOlHG,EAGED,EAAA,OAAA,UAAA,CADC,MAAO4C,EAAY,aAAA,MAIhB7C,EAAc,eAACC,EAAM,OAAC,aAAa,OAD3CG,EAcwBgD,EAAA,OAZtB,IAAI,kBACJ,KAAK,SACJ,MAAKtD,EAAEE,EAAqC,sCAACD,EAAO,OAAA,CAAA,EACpD,gBAAeA,EAAW,cAEhB,UAET,IAGE,CAHFG,EAGED,EAAA,OAAA,gBAAA,CADC,MAAO4C,EAAY,aAAA,gDAKlB5C,EAAuB,6BAD/BG,EAIEiD,EAAA,OAFC,8BAA6BpD,EAAwB,yBACrD,QAAO4C,EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}