import{a as O}from"./chunk-OPEUWD42-a3b45fd8.js";import{c as I}from"./storybook_utils-1da4daf3.js";import{a as i,o,b as m,y as L,w as s,g,j as P,f as c,F as $,s as C,t as D,d as a,q as W}from"./vue.esm-bundler-66d1e5de.js";import{D as F}from"./input_group-a20b4e39.js";import{D as M}from"./checkbox-9b3dc056.js";import{_ as h}from"./_plugin-vue_export-helper-c27b6911.js";import{V as Q}from"./utils-d94a3fa9.js";const T={name:"DtCheckboxGroup",extends:F,model:{prop:"selectedValues"},props:{value:{type:[],default:null,validator:e=>!e},selectedValues:{type:Array,default(){return[]}},dataQaGroup:{type:String,default:"checkbox-group"},dataQaGroupLegend:{type:String,default:"checkbox-group-legend"},dataQaGroupMessages:{type:String,default:"checkbox-group-messages"}},emits:["input"],data(){return{internalValue:this.selectedValues}},watch:{selectedValues(e){this.internalValue=e},internalValue:{immediate:!0,handler(e){this.provideObj.selectedValues=e}}},methods:{setGroupValue(e,r){r?this.internalValue.includes(e)||this.internalValue.push(e):this.internalValue=this.internalValue.filter(p=>p!==e),this.$emit("input",this.internalValue)},getMessageKey(e,r){return`checkbox-group-message-${e}-${r}-${this.id}`}}},f=T;T.__docgenInfo={description:"Checkbox Groups are convenience components for a grouping of related Checkboxes.\nWhile each Checkbox within the group is independent, the `v-model` on the group provides\na convenient interface for determining which Checkboxes within the group are checked.",displayName:"DtCheckboxGroup",tags:{see:[{description:"https://dialpad.design/components/checkbox_group.html",title:"see"}]},exportName:"default",props:[{name:"id",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"The id of the input group",type:{name:"string"},defaultValue:{func:!0,value:`function() {
  return getUniqueString();
}`}},{name:"value",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Not supported by this component, please use selectedValues",type:{name:""},defaultValue:{func:!1,value:"null"}},{name:"name",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"The name of the input group",type:{name:"string"},required:!0},{name:"legend",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"The legend of the input group",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"disabled",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Disables the input group",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"messages",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Validation messages",type:{name:"array"},defaultValue:{func:!1,value:"[]"}},{name:"showMessages",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Show validation messages",tags:{},values:["true","false"],type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"legendClass",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Used to customize the legend element",type:{name:"string|array|object"},defaultValue:{func:!1,value:"''"}},{name:"messagesClass",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Used to customize the messages container",type:{name:"string|array|object"},defaultValue:{func:!1,value:"''"}},{name:"legendChildProps",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"A set of props that are passed into the legend element",type:{name:"object"},defaultValue:{func:!1,value:"{}"}},{name:"messagesChildProps",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"A set of props that are passed into the messages container",type:{name:"object"},defaultValue:{func:!1,value:"{}"}},{name:"dataQaGroup",description:"A data qa tag for the radio group",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group'"}},{name:"dataQaGroupLegend",description:"A data qa tag for the radio group legend",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group-legend'"}},{name:"dataQaGroupMessages",description:"A data qa tag for the radio group messages",type:{name:"string"},defaultValue:{func:!1,value:"'checkbox-group-messages'"}},{name:"v-model",description:"A provided list of selected values(s) for the checkbox group",tags:{model:[{description:"selectedValues",title:"model"}]},type:{name:"array"},defaultValue:{func:!1,value:"[]"}}],events:[{name:"input",mixin:{name:"Input Group Mixin",path:"../../common/mixins/input_group.js"},description:"Native input event",type:{names:["Array"]}}],slots:[{name:"legend",description:"slot for Input Group Legend"},{name:"default",description:"slot for Input Group Components"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/common/mixins/input_group.js","/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group.vue","/home/runner/work/dialtone-vue/dialtone-vue/components/input_group/input_group.vue"]};const A={name:"CheckboxGroupDefault",components:{DtCheckbox:M,DtCheckboxGroup:f}},R=["innerHTML"];function q(e,r,p,b,x,_){const n=i("dt-checkbox"),t=i("dt-checkbox-group");return o(),m(t,{id:e.$attrs.id,name:e.$attrs.name,legend:e.$attrs.legend,"selected-values":e.$attrs.selectedValues,disabled:e.$attrs.disabled,messages:e.$attrs.messages,"show-messages":e.$attrs.showMessages,"legend-class":e.$attrs.legendClass,"messages-class":e.$attrs.messagesClass,"legend-child-props":e.$attrs.legendChildProps,"messages-child-props":e.$attrs.messagesChildProps,onInput:e.$attrs.onInput},L({default:s(()=>[P(e.$slots,"default",{},()=>[(o(!0),c($,null,C(e.$attrs.options,d=>(o(),m(n,{key:d.value,value:d.value},{default:s(()=>[g("span",null,D(d.label),1)]),_:2},1032,["value"]))),128))])]),_:2},[e.$attrs.legendSlot?{name:"legend",fn:s(()=>[g("span",{innerHTML:e.$attrs.legendSlot},null,8,R)]),key:"0"}:void 0]),1032,["id","name","legend","selected-values","disabled","messages","show-messages","legend-class","messages-class","legend-child-props","messages-child-props","onInput"])}const B=h(A,[["render",q]]);A.__docgenInfo={displayName:"CheckboxGroupDefault",exportName:"default",description:"",tags:{},slots:[{name:"default"}],sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_default.story.vue"]};const w={name:"CheckboxesDecorator",components:{DtCheckbox:M},created(){this.options=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Other",value:"other"}]}};function Y(e,r,p,b,x,_){const n=i("dt-checkbox");return o(),c("div",null,[(o(!0),c($,null,C(e.options,t=>(o(),m(n,{key:t.value,value:t.value},{default:s(()=>[g("span",null,D(t.label),1)]),_:2},1032,["value"]))),128))])}const U=h(w,[["render",Y]]);w.__docgenInfo={displayName:"CheckboxesDecorator",exportName:"default",description:"",tags:{},sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkboxes_decorator.vue"]};const E={name:"CheckboxGroupVariants",components:{DtCheckboxesDecorator:U,DtCheckboxGroup:f},created(){this.VALIDATION_MESSAGE_TYPES=Q}},H={id:"components-checkbox-group--variants-container"};function z(e,r,p,b,x,_){const n=i("dt-checkboxes-decorator"),t=i("dt-checkbox-group");return o(),c("div",H,[a(t,{name:"checkbox-group-default","aria-label":"default"},{default:s(()=>[a(n)]),_:1}),a(t,{name:"checkbox-group-with-legend",legend:"With Legend"},{default:s(()=>[a(n)]),_:1}),a(t,{name:"checkbox-group-with-slotted-legend"},{legend:s(()=>[W(" With Slotted Legend ")]),default:s(()=>[a(n)]),_:1}),a(t,{name:"checkbox-group-with-selected-values",legend:"With Selected Values","selected-values":["apple","other"]},{default:s(()=>[a(n)]),_:1}),a(t,{name:"checkbox-group-disabled",legend:"Disabled",disabled:""},{default:s(()=>[a(n)]),_:1}),a(t,{name:"checkbox-group-with-success-message",legend:"With Success Message",messages:[{message:"Success",type:e.VALIDATION_MESSAGE_TYPES.SUCCESS}]},{default:s(()=>[a(n)]),_:1},8,["messages"]),a(t,{name:"checkbox-group-with-warning-message",legend:"With Warning Message",messages:[{message:"Warning",type:e.VALIDATION_MESSAGE_TYPES.WARNING}]},{default:s(()=>[a(n)]),_:1},8,["messages"]),a(t,{name:"checkbox-group-with-error-message",legend:"With Error Message",messages:[{message:"Error",type:e.VALIDATION_MESSAGE_TYPES.ERROR}]},{default:s(()=>[a(n)]),_:1},8,["messages"]),a(t,{name:"checkbox-group-with-error-messages-hidden",legend:"With Error Messages Hidden",messages:[{message:"Error",type:e.VALIDATION_MESSAGE_TYPES.ERROR}],"show-messages":!1},{default:s(()=>[a(n)]),_:1},8,["messages"])])}const K=h(E,[["render",z]]);E.__docgenInfo={displayName:"CheckboxGroupVariants",exportName:"default",description:"",tags:{},sourceFiles:["/home/runner/work/dialtone-vue/dialtone-vue/components/checkbox_group/checkbox_group_variants.story.vue"]};const X=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Other",value:"other"}],N={name:"fruits-checkbox-group",legend:"Fruits",selectedValues:[],options:X,onInput:O("input")},j={default:{control:"text",table:{type:{summary:"VNode"}}},legendSlot:{name:"legend",description:"Slot for legend",control:"text",table:{category:"slots",type:{summary:"VNode"}}},legend:{description:"The legend of the checkbox group",table:{category:"props",type:{summary:"string"}},control:{type:"text"}},selectedValues:{description:"A provided list of selected values(s) for the checkbox group",control:"array",table:{category:"props",type:{summary:"array"}}},id:{table:{defaultValue:{summary:"generated unique ID"}}},"v-model":{description:"Supported by this component",control:null,table:{category:"directives"}},onInput:{table:{disable:!0}},input:{control:!1},options:{table:{disable:!0}},value:{table:{disable:!0}},dataQaGroup:{table:{disable:!0}},dataQaGroupLegend:{table:{disable:!0}},dataQaGroupMessages:{table:{disable:!0}}},J={title:"Components/Checkbox Group",component:f,args:N,argTypes:j,excludeStories:/.*Data$/},Z=e=>I(e,B),ee=e=>I(e,K),l={render:Z,args:{}},u={render:ee,args:{},parameters:{options:{showPanel:!1},a11y:{config:{rules:[{id:"color-contrast",enabled:!1}]}}}};var v,k,y;l.parameters={...l.parameters,docs:{...(v=l.parameters)==null?void 0:v.docs,source:{originalSource:`{
  render: DefaultTemplate,
  args: {}
}`,...(y=(k=l.parameters)==null?void 0:k.docs)==null?void 0:y.source}}};var V,G,S;u.parameters={...u.parameters,docs:{...(V=u.parameters)==null?void 0:V.docs,source:{originalSource:`{
  render: VariantsTemplate,
  args: {},
  parameters: {
    options: {
      showPanel: false
    },
    a11y: {
      config: {
        rules: [{
          id: 'color-contrast',
          enabled: false
        }]
      }
    }
  }
}`,...(S=(G=u.parameters)==null?void 0:G.docs)==null?void 0:S.source}}};const ae=["argsData","argTypesData","Default","Variants"],ie=Object.freeze(Object.defineProperty({__proto__:null,Default:l,Variants:u,__namedExportsOrder:ae,argTypesData:j,argsData:N,default:J},Symbol.toStringTag,{value:"Module"}));export{ie as C,l as D,u as V};
//# sourceMappingURL=checkbox_group.stories-cab115e2.js.map
