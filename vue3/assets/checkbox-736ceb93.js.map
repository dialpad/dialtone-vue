{"version":3,"file":"checkbox-736ceb93.js","sources":["../../components/checkbox/checkbox_constants.js","../../components/checkbox/checkbox.vue"],"sourcesContent":["export const CHECKBOX_INPUT_VALIDATION_CLASSES = {\n  error: 'd-checkbox--error',\n  warning: 'd-checkbox--warning',\n  success: 'd-checkbox--success',\n};\n\nexport default {\n  CHECKBOX_INPUT_VALIDATION_CLASSES,\n};\n","<template>\n  <div>\n    <label>\n      <div :class=\"['d-checkbox-group', { 'd-checkbox-group--disabled': internalDisabled }]\">\n        <div class=\"d-checkbox__input\">\n          <input\n            type=\"checkbox\"\n            :checked=\"internalChecked\"\n            :name=\"internalName\"\n            :value=\"value\"\n            :disabled=\"internalDisabled\"\n            :class=\"['d-checkbox', inputValidationClass, inputClass]\"\n            v-bind=\"$attrs\"\n            :indeterminate.prop=\"internalIndeterminate\"\n            v-on=\"inputListeners\"\n          >\n        </div>\n        <div\n          v-if=\"hasLabelOrDescription\"\n          class=\"d-checkbox__copy d-checkbox__label\"\n          data-qa=\"checkbox-label-description-container\"\n        >\n          <div\n            v-if=\"hasLabel\"\n            :class=\"labelClass\"\n            v-bind=\"labelChildProps\"\n            data-qa=\"checkbox-label\"\n          >\n            <!-- @slot slot for Checkbox Label -->\n            <slot>{{ label }}</slot>\n          </div>\n          <div\n            v-if=\"hasDescription\"\n            :class=\"['d-description', descriptionClass]\"\n            v-bind=\"descriptionChildProps\"\n            data-qa=\"checkbox-description\"\n          >\n            <!-- @slot slot for Checkbox Description -->\n            <slot name=\"description\">{{ description }}</slot>\n          </div>\n          <dt-validation-messages\n            :validation-messages=\"formattedMessages\"\n            :show-messages=\"showMessages\"\n            :class=\"messagesClass\"\n            v-bind=\"messagesChildProps\"\n            data-qa=\"dt-checkbox-validation-messages\"\n          />\n        </div>\n      </div>\n    </label>\n  </div>\n</template>\n\n<script>\n// Imports\nimport {\n  InputMixin,\n  CheckableMixin,\n  GroupableMixin,\n  MessagesMixin,\n} from '../../common/mixins/input';\nimport { CHECKBOX_INPUT_VALIDATION_CLASSES } from './checkbox_constants';\nimport { DtValidationMessages } from '../validation_messages';\n\n/**\n * Checkboxes are control elements that allow the user to make a selection.They are typically used in a\n * Checkbox Group which allows the user to make one or more selections from a list of options.\n * @see https://dialpad.design/components/checkbox.html\n */\nexport default {\n  name: 'DtCheckbox',\n\n  components: { DtValidationMessages },\n\n  mixins: [InputMixin, CheckableMixin, GroupableMixin, MessagesMixin],\n\n  inheritAttrs: false,\n\n  emits: [\n    /**\n     * Native input event\n     *\n     * @event input\n     * @type {Boolean}\n     */\n    'input',\n\n    /**\n     * Native input focusin event\n     *\n     * @event focusin\n     * @type {FocusEvent}\n     */\n    'focusin',\n\n    /**\n     * Native input focusout event\n     *\n     * @event focusout\n     * @type {FocusEvent}\n     */\n    'focusout',\n  ],\n\n  computed: {\n    inputValidationClass () {\n      return CHECKBOX_INPUT_VALIDATION_CLASSES[this.internalValidationState];\n    },\n\n    checkboxGroupValueChecked () {\n      return this.groupContext?.selectedValues?.includes(this.value) ?? false;\n    },\n\n    hasLabel () {\n      return !!(this.$slots.default || this.label);\n    },\n\n    hasDescription () {\n      return !!(this.$slots.description || this.description);\n    },\n\n    hasLabelOrDescription () {\n      return this.hasLabel || this.hasDescription;\n    },\n\n    inputListeners () {\n      return {\n        /*\n         * Override input listener to as no-op. Prevents parent input listeners from being passed through\n         * onto the input element which will result in the handler being called twice\n         * (once on the input element and once by the emitted input event by the change listener).\n        */\n        input: () => {},\n        focusin: event => this.$emit('focusin', event),\n        focusout: event => this.$emit('focusout', event),\n        change: event => this.emitValue(event.target),\n      };\n    },\n  },\n\n  watch: {\n    checkboxGroupValueChecked: {\n      immediate: true,\n      handler (newCheckboxGroupValueChecked) {\n        if (this.hasGroup) {\n          // update internal value when the checkbox group value changes\n          this.internalChecked = newCheckboxGroupValueChecked;\n        }\n      },\n    },\n  },\n\n  mounted () {\n    this.runValidations();\n  },\n\n  methods: {\n    emitValue (target) {\n      let { value, checked } = target;\n      // Expected: Indeterminate -> unchecked. We need to manually set DOM property `checked` to false\n      // and update this.internalIndeterminate.\n      if (this.internalIndeterminate) {\n        checked = false;\n        this.internalIndeterminate = false;\n        target.checked = false;\n      }\n      // update provided value if injected\n      this.setGroupValue(value, checked);\n\n      // emit the state of the checkbox\n      this.$emit('input', checked);\n    },\n\n    runValidations () {\n      this.validateInputLabels(this.hasLabel, this.$attrs['aria-label']);\n    },\n  },\n};\n</script>\n"],"names":["CHECKBOX_INPUT_VALIDATION_CLASSES","_sfc_main","DtValidationMessages","InputMixin","CheckableMixin","GroupableMixin","MessagesMixin","_b","_a","event","newCheckboxGroupValueChecked","target","value","checked","_hoisted_1","_createElementBlock","_createElementVNode","_ctx","_mergeProps","$options","_toHandlers","_hoisted_2","_openBlock","_hoisted_3","_renderSlot","_createVNode","_component_dt_validation_messages"],"mappings":"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"}