{"version":3,"file":"feed_item_row-e20d5345.js","sources":["../../recipes/conversation_view/feed_item_row/feed_item_row_constants.js","../../recipes/conversation_view/feed_item_row/feed_item_row.vue"],"sourcesContent":["export const FEED_ROW_STATE_BACKGROUND_COLOR = {\n  NORMAL: '',\n  SEARCHED: 'd-bgc-warning-subtle',\n  ERROR: 'd-bgc-critical-subtle',\n};\n\nexport const DEFAULT_FEED_ROW_STATE = 'NORMAL';\n\nexport default {\n  FEED_ROW_STATE_BACKGROUND_COLOR,\n  DEFAULT_FEED_ROW_STATE,\n};\n","<template>\n  <dt-list-item\n    ref=\"FeedItemRef\"\n    navigation-type=\"none\"\n    v-bind=\"$attrs\"\n    :class=\"listItemClasses\"\n    data-qa=\"dt-feed-item-row\"\n    v-on=\"feedListeners\"\n  >\n    <!-- Avatar or time -->\n    <template #left>\n      <dt-avatar\n        v-if=\"showHeader\"\n        :full-name=\"displayName\"\n        :image-src=\"avatarImageUrl\"\n        :seed=\"avatarSeed\"\n      />\n      <!-- show time instead of avatar when headers not present -->\n      <div\n        v-if=\"!showHeader\"\n        v-show=\"isActive\"\n        class=\"d-fs-100 d-fw-normal d-ws-nowrap d-lh-100 d-fc-tertiary d-mb6\"\n        data-qa=\"dt-feed-item-row--left-time\"\n      >\n        {{ shortTime }}\n      </div>\n    </template>\n\n    <article>\n      <!-- Feed Item -->\n      <div\n        v-if=\"showHeader\"\n        data-qa=\"dt-feed-item-row--header\"\n        class=\"d-d-flex d-ai-center\"\n      >\n        <p class=\"d-fs-200 d-lh-300 d-fw-bold d-to-ellipsis d-of-hidden d-ws-nowrap\">\n          {{ displayName }}\n        </p>\n        <time\n          class=\"d-fs-100 d-mt2 d-lh-300 d-fc-tertiary d-fw-normal d-ml4 d-fl-shrink0\"\n        >\n          {{ time }}\n        </time>\n      </div>\n      <!-- @slot Default content slot for feed item row -->\n      <span\n        class=\"content-text-wrapper-class\"\n        data-qa=\"dt-feed-item-row--content\"\n      >\n        <slot />\n      </span>\n    </article>\n\n    <template #bottom>\n      <div\n        class=\"d-d-flex d-fw-wrap\"\n        data-qa=\"dt-feed-item-row--reactions\"\n      >\n        <!-- @slot Slot for reactions row component -->\n        <slot name=\"reactions\" />\n      </div>\n      <!-- @slot Slot for threading row component -->\n      <slot name=\"threading\" />\n    </template>\n\n    <!-- Action menu -->\n    <template #right>\n      <div\n        v-show=\"isActive\"\n        data-qa=\"dt-feed-item-row--menu\"\n        class=\"d-ps-absolute d-tn16 d-r12\"\n      >\n        <dt-lazy-show\n          :appear=\"true\"\n          transition=\"fade\"\n          :show=\"isActive\"\n        >\n          <!-- @slot Slot for actions hover menu component -->\n          <slot name=\"menu\" />\n        </dt-lazy-show>\n      </div>\n    </template>\n  </dt-list-item>\n</template>\n\n<script>\nimport { DEFAULT_FEED_ROW_STATE, FEED_ROW_STATE_BACKGROUND_COLOR } from './feed_item_row_constants.js';\nimport { DtAvatar } from '@/components/avatar';\nimport { DtLazyShow } from '@/components/lazy_show';\nimport { DtListItem } from '@/components/list_item';\n\nexport default {\n  name: 'DtRecipeFeedItemRow',\n\n  components: {\n    DtAvatar,\n    DtLazyShow,\n    DtListItem,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    /**\n     * Show avatar, show header text or dont show left time and vice versa\n     */\n    showHeader: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Show the avatar of the user, if this is not passed in, the initials would display\n     */\n    avatarImageUrl: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * The display name of the sender\n     */\n    displayName: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * time string displayed as is.\n     * Shown on the header when showHeader is true\n     */\n    time: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * short time string without AM/PM displayed as is.\n     * Shown on the left of feed item when showHeader is false and isActive is true\n     */\n    shortTime: {\n      type: String,\n      default: '',\n    },\n\n    /**\n     * displays a darkened background on the row.\n     */\n    isActive: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * state for the feed item row. Can be default, searched & error\n     */\n    state: {\n      type: String,\n      default: DEFAULT_FEED_ROW_STATE,\n      validator: state => Object.keys(FEED_ROW_STATE_BACKGROUND_COLOR).includes(state),\n    },\n  },\n\n  emits: [\n    /**\n     * Fires when hovered over feed row\n     *\n     * @event hover\n     * @type {Boolean}\n     */\n    'hover',\n\n    /**\n     * Fires when focused over feed row\n     *\n     * @event focus\n     * @type {Boolean}\n     */\n    'focus',\n  ],\n\n  data () {\n    return {\n      faded: false,\n    };\n  },\n\n  computed: {\n\n    avatarSeed () {\n      const name = (this.displayName || '').split(' ');\n      const initials = name.map(word => word.charAt(0)).join('');\n      return initials.slice(0, 2).toUpperCase();\n    },\n\n    feedListeners () {\n      return {\n        ...this.$listeners,\n        mouseenter: () => this.setHover(true),\n        mouseleave: () => this.setHover(false),\n        focusin: () => this.setFocus(true),\n        focusout: () => this.setFocus(false),\n      };\n    },\n\n    listItemClasses () {\n      return [\n        'd-w100p',\n        'd-box-border',\n        'd-ps-relative',\n        'd-px8',\n        { 'd-bgc-secondary-opaque': this.isActive && this.state === DEFAULT_FEED_ROW_STATE },\n        FEED_ROW_STATE_BACKGROUND_COLOR[this.state],\n        'dt-feed-item-row',\n        'd-t',\n        'd-tp-bgc',\n      ];\n    },\n  },\n\n  methods: {\n    setFocus (bool) {\n      this.$emit('focus', bool);\n    },\n\n    setHover (bool) {\n      this.$emit('hover', bool);\n    },\n\n    fade () {\n      // Do not fade if its a default feed row state\n      if (this.state === DEFAULT_FEED_ROW_STATE || this.faded === true) {\n        return;\n      }\n\n      this.$refs.FeedItemRef.$el.classList.remove(FEED_ROW_STATE_BACKGROUND_COLOR[this.state]);\n      this.faded = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dt-feed-item-row {\n  transition-duration: 2s !important;\n\n  .content-text-wrapper-class:not(img) {\n    line-height: 1.6rem;\n  }\n\n  &:deep(.dt-item-layout--left) {\n    .d-avatar {\n      align-self: flex-start;\n      margin-top: var(--dt-space-300);\n    }\n  }\n}\n</style>\n"],"names":["FEED_ROW_STATE_BACKGROUND_COLOR","DEFAULT_FEED_ROW_STATE","_sfc_main","DtAvatar","DtLazyShow","DtListItem","state","word","bool"],"mappings":"2LAAY,MAACA,EAAkC,CAC7C,OAAQ,GACR,SAAU,uBACV,MAAO,uBACT,EAEaC,EAAyB,SCqFtC,MAAAC,EAAA,CACA,KAAA,sBAEA,WAAA,CACA,SAAAC,EACA,WAAAC,EACA,WAAAC,CACA,EAEA,aAAA,GAEA,MAAA,CAIA,WAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,eAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,YAAA,CACA,KAAA,OACA,QAAA,EACA,EAMA,KAAA,CACA,KAAA,OACA,QAAA,EACA,EAMA,UAAA,CACA,KAAA,OACA,QAAA,EACA,EAKA,SAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,MAAA,CACA,KAAA,OACA,QAAAJ,EACA,UAAAK,GAAA,OAAA,KAAAN,CAAA,EAAA,SAAAM,CAAA,CACA,CACA,EAEA,MAAA,CAOA,QAQA,OACA,EAEA,MAAA,CACA,MAAA,CACA,MAAA,EACA,CACA,EAEA,SAAA,CAEA,YAAA,CAGA,OAFA,KAAA,aAAA,IAAA,MAAA,GAAA,EACA,IAAAC,GAAAA,EAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EACA,MAAA,EAAA,CAAA,EAAA,YAAA,CACA,EAEA,eAAA,CACA,MAAA,CACA,GAAA,KAAA,WACA,WAAA,IAAA,KAAA,SAAA,EAAA,EACA,WAAA,IAAA,KAAA,SAAA,EAAA,EACA,QAAA,IAAA,KAAA,SAAA,EAAA,EACA,SAAA,IAAA,KAAA,SAAA,EAAA,CACA,CACA,EAEA,iBAAA,CACA,MAAA,CACA,UACA,eACA,gBACA,QACA,CAAA,yBAAA,KAAA,UAAA,KAAA,QAAAN,CAAA,EACAD,EAAA,KAAA,KAAA,EACA,mBACA,MACA,UACA,CACA,CACA,EAEA,QAAA,CACA,SAAAQ,EAAA,CACA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,SAAAA,EAAA,CACA,KAAA,MAAA,QAAAA,CAAA,CACA,EAEA,MAAA,CAEA,KAAA,QAAAP,GAAA,KAAA,QAAA,KAIA,KAAA,MAAA,YAAA,IAAA,UAAA,OAAAD,EAAA,KAAA,KAAA,CAAA,EACA,KAAA,MAAA,GACA,CACA,CACA;;"}