{"version":3,"file":"storybook_utils-XrTpeJKJ.js","sources":["../../common/storybook_utils.js"],"sourcesContent":["import iconNames from '@dialpad/dialtone-icons/dist/icons.json';\n\n/**\n * Will use a Vue SFC to render the template rather than a template string.\n * This is useful for more complex components that are hard to work with and\n * get messy when rendered via a template string. Will pass args and argTypes\n * into the component so it is able to be live edited with storybook controls addon.\n * @param {object} args storybook control args\n * @param {object} argTypes storybook control argument settings\n * @param {component} templateComponent vue component template for rendering to storybook.\n *                                      Note this should not be the component itself,\n *                                      but rather the usage of that component.\n * @returns {component} the template component with props and args added.\n */\nexport const createTemplateFromVueFile = (args, argTypes, templateComponent) => ({\n  components: { templateComponent },\n  props: Object.keys(argTypes),\n  template: '<template-component v-bind=\"$props\"></template-component>',\n});\n\n/**\n * Gets the full list of icon component names from the dialtone package\n * @returns {string[]} icon component names\n */\nexport function getIconNames () {\n  return [undefined, ...iconNames];\n}\n\nexport const generateTemplate = (component,\n  { props = [], excludeProps = [], customProps = [], childTemplate } = {}) => {\n  if (!component) {\n    console.warn('Generate template: Please provide a component');\n    return '';\n  }\n\n  const { name, props: componentProps } = component;\n  const finalProps = props.length ? props : Object.keys(componentProps);\n  const normalizedName = name.split(/(?=[A-Z])/).join('-').toLowerCase();\n\n  const startFragment = `<${normalizedName}`;\n\n  const propFragments = finalProps\n    .filter(prop => !excludeProps.includes(prop))\n    .map(prop => `:${prop}=\"${prop}\"`);\n\n  const endFragment = childTemplate ? `>${childTemplate}</${normalizedName}>` : ' />';\n\n  return [startFragment, ...propFragments, ...customProps, endFragment].join(' ');\n};\n\nexport default {\n  generateTemplate,\n  createTemplateFromVueFile,\n  getIconNames,\n};\n"],"names":["createTemplateFromVueFile","args","argTypes","templateComponent","getIconNames","iconNames","generateTemplate","component","props","excludeProps","customProps","childTemplate","name","componentProps","finalProps","normalizedName","startFragment","propFragments","prop","endFragment"],"mappings":"2hNAcaA,EAA4B,CAACC,EAAMC,EAAUC,KAAuB,CAC/E,WAAY,CAAE,kBAAAA,CAAmB,EACjC,MAAO,OAAO,KAAKD,CAAQ,EAC3B,SAAU,2DACZ,GAMO,SAASE,GAAgB,CAC9B,MAAO,CAAC,OAAW,GAAGC,CAAS,CACjC,CAEY,MAACC,EAAmB,CAACC,EAC/B,CAAE,MAAAC,EAAQ,CAAE,EAAE,aAAAC,EAAe,CAAA,EAAI,YAAAC,EAAc,CAAE,EAAE,cAAAC,CAAe,EAAG,KAAO,CAC5E,GAAI,CAACJ,EACH,eAAQ,KAAK,+CAA+C,EACrD,GAGT,KAAM,CAAE,KAAAK,EAAM,MAAOC,CAAc,EAAKN,EAClCO,EAAaN,EAAM,OAASA,EAAQ,OAAO,KAAKK,CAAc,EAC9DE,EAAiBH,EAAK,MAAM,WAAW,EAAE,KAAK,GAAG,EAAE,cAEnDI,EAAgB,IAAID,CAAc,GAElCE,EAAgBH,EACnB,OAAOI,GAAQ,CAACT,EAAa,SAASS,CAAI,CAAC,EAC3C,IAAIA,GAAQ,IAAIA,CAAI,KAAKA,CAAI,GAAG,EAE7BC,EAAcR,EAAgB,IAAIA,CAAa,KAAKI,CAAc,IAAM,MAE9E,MAAO,CAACC,EAAe,GAAGC,EAAe,GAAGP,EAAaS,CAAW,EAAE,KAAK,GAAG,CAChF"}